#pragma checksum "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\ModelSequences.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e73818b428098886aa26dc5a1d9bdb23d22fc649"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Quality_Views_ControlPanel_ModelSequences), @"mvc.1.0.view", @"/Areas/Quality/Views/ControlPanel/ModelSequences.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\_ViewImports.cshtml"
using FactoryPlatform.Areas.Quality.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\_ViewImports.cshtml"
using FactoryPlatform.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\_ViewImports.cshtml"
using FactoryPlatform;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\_ViewImports.cshtml"
using FactoryPlatform.Areas.ServiceNow.Models.ServiceMenu.CorrectiveAction;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\ModelSequences.cshtml"
using FactoryPlatform.Areas.Quality.Models.ControlPanel.ModelSequences;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e73818b428098886aa26dc5a1d9bdb23d22fc649", @"/Areas/Quality/Views/ControlPanel/ModelSequences.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"989b4164f24ce87c91035728cf9a62fabf57d814", @"/Areas/Quality/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Areas_Quality_Views_ControlPanel_ModelSequences : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<CP_ModelSequencesViewModel>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("kt_docs_formvalidation_text"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("autocomplete", new global::Microsoft.AspNetCore.Html.HtmlString("off"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\ModelSequences.cshtml"
  
    ViewData["Title"] = ViewData["Titulo"];

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<div class=""post d-flex flex-column-fluid"" id=""kt_post"">
    <div id=""kt_content_container"" class=""container-fluid"">
        <div id=""kt_block"">
            <div class=""card mb-5"">
                <div class=""card-body p-5 mb-0"" id=""BlockPantalla"">
                    <input type=""hidden"" name=""SeccionId"" id=""IdSeccion"" value=""5"">
                    <input type=""hidden"" name=""Tipo"" id=""Tipo"" value=""2"">
					<div class=""row"">
						<div class=""col-lg-3"">
							<input type=""text"" id=""Modelo"" name=""Modelo"" class=""form-control"" placeholder=""Modelo"">
						</div>
						<div class=""col-lg-3"">
							<button class=""btn btn-primary p-3 fs-7 me-3"" type=""button"" onclick=""Search()"" id=""itbutton_submit"">
								<span class=""indicator-label""><i class=""fas fa-search""></i>Search</span>
							</button>
							<button class=""btn btn-warning p-3 fs-8 me-3 d-none"" type=""button"" id=""copy""  data-bs-toggle=""modal"" data-bs-target=""#copySequence"">
								<i class=""far fa-copy fs-3""></i>
							</button>
						");
            WriteLiteral(@"</div>
					</div>
                </div>
            </div>
			<div class=""card mb-5 p-5"">
				<div class=""col-lg-12 row"">
					<div class=""col-lg-6"">
						<div class=""row d-none"" id=""Resultado"">
							<div class=""row mb-3"">
								<div class=""col-lg-4 fv-row mb-4"">
									<label class=""fs-6 form-label fw-bolder text-dark""></label>
									<div class=""form-control p-0"" style=""height: 300px;  overflow-y: scroll;width:100%"">
										<select id=""Workstations"" class=""form-select form-select-solid"" data-control=""select2"" data-close-on-select=""false"" data-placeholder=""-- Select an option --"" multiple=""multiple"" data-allow-clear=""true"" onfocus=""true"">
										</select>
									</div>
								</div>
								<div class=""col-lg-2 fv-row mb-4"">
									<br />
									<button class=""btn btn-primary p-3 fs-7 me-3"" id=""FormAC"" type=""button"" onclick=""saveSequences()"">
										<span class=""indicator-label""><i class=""fas fa-save""></i> Save</span>
										<span class=""indicator-progress"">");
            WriteLiteral(@"
											Please wait...
											<span class=""spinner-border spinner-border-sm align-middle ms-2""></span>
										</span>
									</button>
								</div>									
							</div>
						</div>
					</div>
					<div class=""col-lg-6 mb-3"">
						<div class=""row d-none"" id=""CreateDrags"">
						</div>
					</div>
				</div>
			</div>
        </div>
    </div>
</div>
<div class=""modal fade"" tabindex=""-1"" id=""copySequence"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h3 class=""modal-title"">Copy sequence</h3>
                <div class=""btn btn-icon btn-sm btn-active-light-primary ms-2"" data-bs-dismiss=""modal"" aria-label=""Close"">
                    <span class=""svg-icon svg-icon-1""></span>
                </div>
            </div>

            <div class=""modal-body"">
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e73818b428098886aa26dc5a1d9bdb23d22fc6498627", async() => {
                WriteLiteral("\r\n\t\t\t\t\t<div class=\"fv-row mb-10\">\r\n\t\t\t\t\t\t<label class=\"required fw-semibold fs-6 mb-2\">Copy to Model</label>\r\n\t\t\t\t\t\t<input type=\"text\" name=\"NuevoModelo\" id=\"NuevoModelo\" class=\"form-control form-control-solid mb-3 mb-lg-0\"");
                BeginWriteAttribute("placeholder", " placeholder=\"", 3405, "\"", 3419, 0);
                EndWriteAttribute();
                BeginWriteAttribute("value", " value=\"", 3420, "\"", 3428, 0);
                EndWriteAttribute();
                WriteLiteral(@" />
					</div>
					<button id=""kt_docs_formvalidation_text_submit"" type=""submit"" class=""btn btn-primary"">
						<span class=""indicator-label""><i class=""fas fa-save""></i> Save</span>
						<span class=""indicator-progress"">
							Please wait... <span class=""spinner-border spinner-border-sm align-middle ms-2""></span>
						</span>
					</button>
				");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-light\" data-bs-dismiss=\"modal\">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n\r\n");
                WriteLiteral("<script>\r\n\tvar ContadorGlobal = \"\";\r\n\tfunction Search() {\r\n\t\tvar Modelo = $(\'#Modelo\').val();\r\n\t\t$.ajax({\r\n\t\t\turl: \"");
#nullable restore
#line 101 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\ModelSequences.cshtml"
             Write(Url.Action("SearchInfo","CP_ModelSequences"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
			data: {
				Modelo: Modelo
			},
			type: ""POST"",
			beforeSend: function (xhr) {
				xhr.setRequestHeader(""XSRF-TOKEN"",
					$('input:hidden[name=""__RequestVerificationToken""]').val());
			},
		}).done(function (result) {
			if (result != null) {
				if (result == 'Error') {
					SystemServerError()
				}
				else if (result == 'noSession') {
					swalExpired()
				}
				else if (result == 'Sorry') {
					swalNoAuthorized()
				}
				else if (result == 'NoPage')
				{
					swalNoAuthorized()
				}
				else
				{
					var obj = JSON.parse(result);

					if(obj[0].Workstation == 'NoExiste'){

						document.getElementById(""Resultado"").classList.add(""d-none"");
						document.getElementById(""CreateDrags"").classList.add(""d-none"");
						document.getElementById(""copy"").classList.add(""d-none"");

						Swal.fire({
                            text: ""Sorry, The Model not found"",
                            icon: ""warning"",
                            buttonsStyling: false,
 ");
                WriteLiteral(@"                           allowEscapeKey: false,
                            allowOutsideClick: false,
                            confirmButtonText: ""Ok, got it!"",
                            customClass: {
                                confirmButton: ""btn font-weight-bold btn-light-primary""
                            }
                        }).then((result) => {
                            if (result.isConfirmed) {

                            }
                        });
					}else{
					var ArrayDatos =  [];
					$('#Workstations').empty().trigger(""change"");

					for (let i = 0; i < obj.length; i++) {
					if(obj[i].Secuencia != null){
						var selected = 'selected';
						var dataPoint =  [obj[i].ID_Workstation, obj[i].Workstation, obj[i].Secuencia, obj[i].Registro];
						ArrayDatos.push(dataPoint);

					}else{
						var selected = false;
					}
					var newOption = new Option(obj[i].Workstation, obj[i].ID_Workstation, false, selected);
					$('#Workstations').append(n");
                WriteLiteral(@"ewOption).trigger('change');
					}

					ArrayDatos = ArrayDatos.sort((a,b)=>{ return a[2]-b[2]}) ;

					//console.log(ArrayDatos);
					var dragphoto = `<div class=""col-lg-10 row"" > `+
										`<div class=""draggable-zone"" tabindex=""0"" id=""sequences""> `;
					if(ArrayDatos.length == 0){
							dragphoto +=`<div class=""alert alert-warning d-flex align-items-center p-5"" id=""AlertWarning""> `+
						`<span class=""svg-icon svg-icon-2x svg-icon-light me-4""> `+
						`<i class=""fas fa-exclamation-triangle fs-2x text-warning""></i> `+
						`</span> `+
						`<div class=""d-flex flex-column""> `+
						`<h3 class=""text-warning""> No strings at this time </h3> `+
						`<h6 class=""text-warning""> Now you can start recording sequences for this model! </h6> `+
						`</div> `+
						`</div>`
					}
					for (let i = 0; i < ArrayDatos.length; i++) {
						dragphoto += `<div class=""col draggable col-lg-12 py-1"" tabindex=""0"" style="""" id=""${ArrayDatos[i][0]}""> `+
										`<div class=""card card-bordered");
                WriteLiteral(@"""> `+
											`<div class=""row"" style=""padding-top: 0px;""> `+
												`<div class=""card-toolbar col-lg-1"" style=""padding: 5px 10px;""> `+
													`<a class=""btn btn-icon btn-sm btn-hover-light-primary draggable-handle""> `+
														`<i class=""fas fa-bars fs-1""></i> `+
													`</a> `+
												`</div> `+
												`<div class=""col-lg-11 fs-4 d-inline"" style=""vertical-align: middle;""> `+
													`<div class=""col-lg-12 row""> `+
													`<div class=""col-lg-11"" style=""padding: 10px 0;""> `+
													`<span class=""badge badge-square badge-secondary fs-3"">${ArrayDatos[i][2]}</span> - ${ArrayDatos[i][1]} `+
													`</div> `+
													`<div class=""col-lg-1""> `+
													`<a class=""btn btn-icon""  style="""" onclick=""deleteSequence(${ArrayDatos[i][3]},${ArrayDatos[i][2]})"">` +
															`<span class=""svg-icon svg-icon-2x svg-icon-light text-hover-danger""><i class=""fas fa-times fs-3""></i></span>` +
														`</a>` +
													`</div> `+
			");
                WriteLiteral(@"										`</div> `+
												`</div> `+
											`</div> `+
										`</div> `+
									`</div> `
						ContadorGlobal = ArrayDatos[i][1];
									//console.log(dragphoto);
					}
					dragphoto += `</div>`+
								`</div>`
					
								
					$('#CreateDrags').html(dragphoto);
					document.getElementById(""Resultado"").classList.remove(""d-none"");
					document.getElementById(""CreateDrags"").classList.remove(""d-none"");
					document.getElementById(""copy"").classList.remove(""d-none"");
					KTDraggableCards.init();
					}
				}
			}
			else {
				SystemServerError()
			}
		}).fail(function (error) {
			swalErrorServer()
		});
	}
</script>
<script>
	document.getElementById(""CreateDrags"").addEventListener(""drag:stop"", updOrden);
	
	function updOrden(event) {

		var id = event.target.id;
		console.log(id);
		var datoFinal = [];
		$("".draggable"").each(function (index) {
			//Obtener el id de cada elemento por clase
			console.log('x');
			var valida = datoFinal.includes");
                WriteLiteral(@"($(this).attr('id'));
			if (valida != true) {
				datoFinal.push($(this).attr('id'));
				var idCombos = $(this).attr('id');
			}

		});
		//Setear variables 
		var orderData = datoFinal.toString();
		var orderDataModel = $('#Modelo').val();


		$.ajax({
			url: """);
#nullable restore
#line 254 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\ModelSequences.cshtml"
             Write(Url.Action("orderSequences","CP_ModelSequences"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
			data: {
				orderData: orderData,
				orderDataModel: orderDataModel
			},
			type: ""POST"",
			beforeSend: function (xhr) {
				xhr.setRequestHeader(""XSRF-TOKEN"",
					$('input:hidden[name=""__RequestVerificationToken""]').val());
			},
		}).done(function (result) {
			if (result != null) {
				if (result == 'Error') {
					SystemServerError()
				}
				else if (result == 'noSession') {
					swalExpired()
				}
				else if (result == 'Sorry') {
					swalNoAuthorized()
				}
				else if (result == 'NoPage') {
					swalNoAuthorized()
				}else{
					Swal.fire({
						text: ""The operation completed successfully!"",
						icon: ""success"",
						buttonsStyling: false,
						allowEscapeKey: false,
						allowOutsideClick: false,
						confirmButtonText: ""Ok, got it!"",
						customClass: {
							confirmButton: ""btn btn-primary""
						}
					}).then((result) => {
						if (result.isConfirmed) {

							Search()
							
						}
					})
				}
			}
			else {
				SystemServ");
                WriteLiteral("erError()\r\n\t\t\t}\r\n\t\t}).fail(function (error) {\r\n\t\t\tswalErrorServer()\r\n\t\t});\r\n\t}\r\n</script>\r\n");
                WriteLiteral(@"<script>
""use strict"";

// Class definition
var KTDraggableCards = function () {
	// Private functions
	var exampleCards = function () {
		var containers = document.querySelectorAll('.draggable-zone');

		if (containers.length === 0) {
			return false;
		}

		var swappable = new Sortable.default(containers, {
			draggable: '.draggable',
			handle: '.draggable .draggable-handle',
			mirror: {
				//appendTo: selector,
				appendTo: 'body',
				constrainDimensions: true
			}
		});


	}

	return {
		// Public Functions
		init: function () {
			exampleCards();

		}
	};
}();

// On document ready
KTUtil.onDOMContentLoaded(function () {
	KTDraggableCards.init();
});

</script>
");
                WriteLiteral(@"<script>
	function saveSequences(){
		var options = document.getElementById('Workstations').selectedOptions;
		var values = Array.from(options).map(({ value }) => value);
		var Modelo = $('#Modelo').val();
		var Pruebas = values.toString();
		$.ajax({
			url: """);
#nullable restore
#line 355 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\ModelSequences.cshtml"
             Write(Url.Action("SaveSequences","CP_ModelSequences"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
			data: {
				Sequences: Pruebas,
				Modelo: Modelo
			},
			type: ""POST"",
			beforeSend: function (xhr) {
				xhr.setRequestHeader(""XSRF-TOKEN"",
					$('input:hidden[name=""__RequestVerificationToken""]').val());
			},
		}).done(function (result) {
			if (result != null) {
				if (result == 'Error') {
					SystemServerError()
				}
				else if (result == 'noSession') {
					swalExpired()
				}
				else if (result == 'Sorry') {
					swalNoAuthorized()
				}
				else if (result == 'NoPage')
				{
					swalNoAuthorized()
				}
				else
				{
					Swal.fire({
                        text: ""The action has been successfully submitted!"",
                        icon: ""success"",
                        buttonsStyling: false,
                        allowEscapeKey: false,
                        allowOutsideClick: false,
                        confirmButtonText: ""Ok, got it!"",
                        customClass: {
                            confirmButton: ""btn btn-primary""
  ");
                WriteLiteral(@"                      }
                    }).then((result) => {
                        if (result.isConfirmed) 
                        {
							Search()
                        }
                    });

					
				}
			}
			else {
				SystemServerError()
			}
		}).fail(function (error) {
			swalErrorServer()
		});
	}
</script>
");
                WriteLiteral(@"<script>
	function deleteSequence(id,orden){

		var SequenceID = id;
		var Sequence = orden;
		var Modelo = $('#Modelo').val();
		Swal.fire({
            text: ""Are you sure to Delete the Sequence?"",
            icon: ""question"",
            buttonsStyling: false,
            allowEscapeKey: false,
            allowOutsideClick: false,
            showCancelButton: true,
            closeOnCancel: true,
            confirmButtonText: ""Confirm"",
            cancelButtonText: 'Cancel',
            customClass: {
                confirmButton: ""btn btn-primary"",
                cancelButton: 'btn btn-danger'
            }
        }).then((result) => {
            if (result.isConfirmed) {
				$.ajax({
					url: """);
#nullable restore
#line 434 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\ModelSequences.cshtml"
                     Write(Url.Action("DeleteSequence","CP_ModelSequences"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
					data: {
						SequenceID: SequenceID,Sequence:Sequence,Modelo:Modelo
					},
					type: ""POST"",
					beforeSend: function (xhr) {
						xhr.setRequestHeader(""XSRF-TOKEN"",
							$('input:hidden[name=""__RequestVerificationToken""]').val());
					},
				}).done(function (result) {
					if (result != null) {
						if (result == 'Error') {
							SystemServerError()
						}
						else if (result == 'noSession') {
							swalExpired()
						}
						else if (result == 'Sorry') {
							swalNoAuthorized()
						}
						else if (result == 'NoPage')
						{
							swalNoAuthorized()
						}
						else
						{
							Swal.fire({
								text: ""The action has been successfully submitted!"",
								icon: ""success"",
								buttonsStyling: false,
								allowEscapeKey: false,
								allowOutsideClick: false,
								confirmButtonText: ""Ok, got it!"",
								customClass: {
									confirmButton: ""btn btn-primary""
								}
							}).then((result) => {
								if (result.isConf");
                WriteLiteral(@"irmed) 
								{
									Search()
								}
							});

					
						}
					}
					else {
						SystemServerError()
					}
				}).fail(function (error) {
					swalErrorServer()
				});
			}
		});
	}
</script>
<script>
	// Define form element
const form = document.getElementById('kt_docs_formvalidation_text');

// Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/
var validator = FormValidation.formValidation(
    form,
    {
        fields: {
            'NuevoModelo': {
                validators: {
                    notEmpty: {
                        message: 'This Model is required'
                    }
                }
            },
        },

        plugins: {
            trigger: new FormValidation.plugins.Trigger(),
            bootstrap: new FormValidation.plugins.Bootstrap5({
                rowSelector: '.fv-row',
                eleInvalidClass: '',
                eleValidC");
                WriteLiteral(@"lass: ''
            })
        }
    }
);

// Submit button handler
const submitButton = document.getElementById('kt_docs_formvalidation_text_submit');
submitButton.addEventListener('click', function (e) {
    // Prevent default button action
    e.preventDefault();

    // Validate form before submit
    if (validator) {
        validator.validate().then(function (status) {
            console.log('validated!');

            if (status == 'Valid') {
                // Show loading indication
                submitButton.setAttribute('data-kt-indicator', 'on');

                // Disable button to avoid multiple click
                submitButton.disabled = true;

                // Simulate form submission. For more info check the plugin's official documentation: https://sweetalert2.github.io/
                setTimeout(function () {
                    // Remove loading indication
                    submitButton.removeAttribute('data-kt-indicator');

                    // En");
                WriteLiteral(@"able button
                    submitButton.disabled = false;

                    // Show popup confirmation
                    //Swal.fire({
                    //    text: ""Form has been successfully submitted!"",
                    //    icon: ""success"",
                    //    buttonsStyling: false,
                    //    confirmButtonText: ""Ok, got it!"",
                    //    customClass: {
                    //        confirmButton: ""btn btn-primary""
                    //    }
                    //});
					copySequence($('#NuevoModelo').val(),$('#Modelo').val())
                    //form.submit(); // Submit form
                }, 2000);
            }
        });
    }
});
</script>
<script>
function copySequence(news,old){
$.ajax({
	url: """);
#nullable restore
#line 566 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\ModelSequences.cshtml"
     Write(Url.Action("validateModel","CP_ModelSequences"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
	data: {
		Modelo: news
	},
	type: ""POST"",
	beforeSend: function (xhr) {
		xhr.setRequestHeader(""XSRF-TOKEN"",
			$('input:hidden[name=""__RequestVerificationToken""]').val());
	},
}).done(function (result) {
	if (result != null) {
		if (result == 'Error') {
			SystemServerError()
		}
		else if (result == 'noSession') {
			swalExpired()
		}
		else if (result == 'Sorry') {
			swalNoAuthorized()
		}
		else if (result == 'NoPage')
		{
			swalNoAuthorized()
		}
		else
		{
			var obj = JSON.parse(result);

			if(obj[0].Resultado == 'NoExiste')
			{
				Swal.fire({
                    text: ""Sorry, The Model not found"",
                    icon: ""warning"",
                    buttonsStyling: false,
                    allowEscapeKey: false,
                    allowOutsideClick: false,
                    confirmButtonText: ""Ok, got it!"",
                    customClass: {
                        confirmButton: ""btn font-weight-bold btn-light-primary""
                    }
  ");
                WriteLiteral("              }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n\t\t\t\t\t\t$(\'#NuevoModelo\').val(\'\');\r\n                    }\r\n                });\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.ajax({\r\n\t\t\t\t\turl: \"");
#nullable restore
#line 615 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\ModelSequences.cshtml"
                     Write(Url.Action("CopyModel","CP_ModelSequences"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
					data: {
						ModeloAnterior: old,
						ModeloNuevo: news
					},
					type: ""POST"",
					beforeSend: function (xhr) {
						xhr.setRequestHeader(""XSRF-TOKEN"",
							$('input:hidden[name=""__RequestVerificationToken""]').val());
					},
				}).done(function (result) {
					if (result != null) {
						if (result == 'Error') {
							SystemServerError()
						}
						else if (result == 'noSession') {
							swalExpired()
						}
						else if (result == 'Sorry') {
							swalNoAuthorized()
						}
						else if (result == 'NoPage')
						{
							swalNoAuthorized()
						}
						else
						{
							Swal.fire({
								text: ""The action has been successfully submitted!"",
								icon: ""success"",
								buttonsStyling: false,
								allowEscapeKey: false,
								allowOutsideClick: false,
								confirmButtonText: ""Ok, got it!"",
								customClass: {
									confirmButton: ""btn btn-primary""
								}
							}).then((result) => {
								if (result.isConfirmed) 
");
                WriteLiteral(@"								{
									$('#Modelo').val(news);
									$('#NuevoModelo').val('');
									$('#copySequence').modal('hide');
									Search()
								}
							});

					
						}
					}
					else {
						SystemServerError()
					}
				}).fail(function (error) {
					swalErrorServer()
				});
			}		
		}
	}
	else {
		SystemServerError()
	}
}).fail(function (error) {
	swalErrorServer()
});
}
</script>

");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<CP_ModelSequencesViewModel> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
