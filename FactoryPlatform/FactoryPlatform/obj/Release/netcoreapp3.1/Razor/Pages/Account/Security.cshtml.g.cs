#pragma checksum "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Pages\Account\Security.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "eec2830389b663929a36406943aedaf7bf480da4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Pages_Account_Security), @"mvc.1.0.razor-page", @"/Pages/Account/Security.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Pages\_ViewImports.cshtml"
using FactoryPlatform;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Pages\_ViewImports.cshtml"
using FactoryPlatform.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemMetadataAttribute("RouteTemplate", "/StandarizationSecurity")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"eec2830389b663929a36406943aedaf7bf480da4", @"/Pages/Account/Security.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"92eed42c8c60a96099311cfba92bc50cf1c31e4d", @"/Pages/_ViewImports.cshtml")]
    #nullable restore
    public class Pages_Account_Security : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Pages\Account\Security.cshtml"
  
    ViewData["Title"] = " Standarization Security";


#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""post d-flex flex-column-fluid"" id=""kt_post"">
    <div id=""kt_content_container"" class=""container-fluid"">
        <!--begin::Accordion-->
        <div class=""accordion"" id=""kt_accordion_1"">

            <div class=""accordion-item"">
                <h1 class=""accordion-header"" id=""kt_accordion_1_header_1"">
                    <button class=""accordion-button fs-4 fw-semibold collapsed"" type=""button"" data-bs-toggle=""collapse"" data-bs-target=""#kt_accordion_1_body_1"" aria-expanded=""false"" aria-controls=""kt_accordion_1_body_1"">
                        Action Filter
                    </button>
                </h1>
                <div id=""kt_accordion_1_body_1"" class=""accordion-collapse collapse"" aria-labelledby=""kt_accordion_1_header_1"" data-bs-parent=""#kt_accordion_1"">
                    <div class=""accordion-body"">
                        <div class=""py-5"">...</div>
                        <!--begin::Code-->
                        <div class=""py-2"">
                            <d");
            WriteLiteral(@"iv class=""highlight"">
                                <button class=""highlight-copy btn"" data-bs-toggle=""tooltip"" title=""Copy code"">copy</button>
                                <div class=""highlight-code"">
                                    <pre class=""language-sql"">
                                    <code class=""language-sql"">
                                       //Este filtro se coloca en todos los controladores ya que validad que exista una secion en el sistema.
                                       [ServiceFilter(typeof(AuthorizeActionFilter), Order = 1)]

                                       //Este filtro se coloca en los controladores Master sirve para la validacion de paginas si tiene acceso o no
                                       [ServiceFilter(typeof(AuthorizeMethodFilter), Order = 2)]

                                       //Este filtro se coloca en los controladores que utiliza las tarjetas del Service Now 
                                       [ServiceFilter(typeof(Actio");
            WriteLiteral(@"nMethodServiceNowFilter), Order = 1)]

                                    </code>
                                </pre>
                                </div>
                            </div>
                        </div>
                        <!--end::Code-->
                    </div>
                </div>
            </div>
            <div class=""accordion-item"">
                <h1 class=""accordion-header"" id=""kt_accordion_1_header_2"">
                    <button class=""accordion-button fs-4 fw-semibold collapsed"" type=""button"" data-bs-toggle=""collapse"" data-bs-target=""#kt_accordion_1_body_2"" aria-expanded=""false"" aria-controls=""kt_accordion_1_body_2"">
                        Add Antiforgery Tocken
                    </button>
                </h1>
                <div id=""kt_accordion_1_body_2"" class=""accordion-collapse collapse"" aria-labelledby=""kt_accordion_1_header_2"" data-bs-parent=""#kt_accordion_1"">
                    <div class=""accordion-body"">
                       ");
            WriteLiteral(@" <div class=""py-5"">Sirve para evitar atackes de cross stike.</div>
                        <!--begin::Code-->
                        <div class=""py-2"">
                            <div class=""highlight"">
                                <button class=""highlight-copy btn"" data-bs-toggle=""tooltip"" title=""Copy code"">copy</button>
                                <div class=""highlight-code"">
                                    <pre class=""language-sql"">
                                    <code class=""language-sql"">
                                        
                                         //1.- Poner esta line en el Starup
                                         services.AddAntiforgery(o => o.HeaderName = ""XSRF-TOKEN"");///Globaliza la antiforainKey
                                         
                                         //2.- Este linea se coloca en las vistas al inicio para utilizar el Antiforgery
                                         Html.AntiForgeryToken()

                 ");
            WriteLiteral(@"                        //3.- Para poder utilizarlo se coloca en el controlador 
                                         [ValidateAntiForgeryToken]

                                         //4.- Para mandar peticiones con Ajax a un controlador con tiForgeryToken
                                         type: ""POST"",
                                            beforeSend: function(xhr) {
                                                xhr.setRequestHeader(""XSRF-TOKEN"",
                                                    $('input:hidden[name=""__RequestVerificationToken""]').val());
                                            },

                                    </code>
                                </pre>
                                </div>
                            </div>
                        </div>
                        <!--end::Code-->
                    </div>
                </div>
            </div>

        </div>
        <!--end::Accordion-->
    </div>
</div>
");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Pages_Account_Security> Html { get; private set; } = default!;
        #nullable disable
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Pages_Account_Security> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Pages_Account_Security>)PageContext?.ViewData;
        public Pages_Account_Security Model => ViewData.Model;
    }
}
#pragma warning restore 1591
