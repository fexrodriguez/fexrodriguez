#pragma checksum "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6cc97b9e2e96099c78c010a624952f9e20f0fd21"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Quality_Views_ControlPanel_CorrectiveActions), @"mvc.1.0.view", @"/Areas/Quality/Views/ControlPanel/CorrectiveActions.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\_ViewImports.cshtml"
using FactoryPlatform.Areas.Quality.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\_ViewImports.cshtml"
using FactoryPlatform.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\_ViewImports.cshtml"
using FactoryPlatform;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\_ViewImports.cshtml"
using FactoryPlatform.Areas.ServiceNow.Models.ServiceMenu.CorrectiveAction;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6cc97b9e2e96099c78c010a624952f9e20f0fd21", @"/Areas/Quality/Views/ControlPanel/CorrectiveActions.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"989b4164f24ce87c91035728cf9a62fabf57d814", @"/Areas/Quality/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Areas_Quality_Views_ControlPanel_CorrectiveActions : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<CorrectiveAction_CP_ModelView>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("IdFormSendProccess"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("FormUpProccess"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
  
     ViewData["Title"] = ViewData["Titulo"];

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""post d-flex flex-column-fluid"" id=""kt_post"">
    <div id=""kt_content_container"" class=""container-fluid"">
        <div id=""kt_block"">
            <div class=""card mb-5"">
                <div class=""card-body p-5 mb-0"" id=""BlockPantalla"">

                    <input type=""hidden"" name=""SeccionId"" id=""IdSeccion""");
            BeginWriteAttribute("value", " value=\"", 421, "\"", 445, 1);
#nullable restore
#line 12 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
WriteAttributeValue("", 429, Model.IdSeccion, 429, 16, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" />\r\n                    <input type=\"hidden\" name=\"Tipo\" id=\"Tipo\"");
            BeginWriteAttribute("value", " value=\"", 513, "\"", 532, 1);
#nullable restore
#line 13 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
WriteAttributeValue("", 521, Model.Tipo, 521, 11, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" />
                    <div class=""mb-5 hover-scroll-x"">
                        <div class=""d-grid"">
                            <ul class=""nav nav-tabs flex-nowrap text-nowrap"">
                                <li class=""nav-item"">
                                    <a class=""nav-link btn btn-active-light btn-color-gray-600 btn-active-color-primary rounded-bottom-0 active"" data-bs-toggle=""tab"" href=""#kt_tab_pane_1"">Responsibles</a>
                                </li>
                                <li class=""nav-item"">
                                    <a class=""nav-link btn btn-active-light btn-color-gray-600 btn-active-color-primary rounded-bottom-0"" data-bs-toggle=""tab"" href=""#kt_tab_pane_2"">Responsibles by Management</a>
                                </li>
                                <li class=""nav-item"">
                                    <a class=""nav-link btn btn-active-light btn-color-gray-600 btn-active-color-primary rounded-bottom-0"" data-bs-toggle=""tab"" href=""#kt_tab_pane");
            WriteLiteral(@"_3"">Closed By</a>
                                </li>
                                <li class=""nav-item"">
                                    <a class=""nav-link btn btn-active-light btn-color-gray-600 btn-active-color-primary rounded-bottom-0"" data-bs-toggle=""tab"" href=""#kt_tab_pane_4"">Sources</a>
                                </li>
                                <li class=""nav-item"">
                                    <a  class=""nav-link btn btn-active-light btn-color-gray-600 btn-active-color-primary rounded-bottom-0"" data-bs-toggle=""tab"" href=""#kt_tab_pane_5"">Solutions types</a>
                                </li>
                                <li class=""nav-item"">
                                    <a class=""nav-link btn btn-active-light btn-color-gray-600 btn-active-color-primary rounded-bottom-0"" data-bs-toggle=""tab"" href=""#kt_tab_pane_6"">Proccess</a>
                                </li>
                            </ul>
                        </div>
                    </div");
            WriteLiteral(@">
                    <div class=""tab-content"" id=""myTabContent"">
                        <div class=""tab-pane fade show active"" id=""kt_tab_pane_1"" role=""tabpanel"">
                            <div class=""row mb-3"">
                                <div class=""col-lg-3 fv-row mb-4"">
                                    <label class=""fs-6 form-label fw-bolder text-dark"">Select a Responsable:</label>
                                    <div class=""form-control p-0"" style=""height: 300px;  overflow-y: scroll;"">
                                        <select id=""IdResponsible"" class=""form-select form-select-solid"" data-control=""select2"" data-close-on-select=""false"" data-placeholder=""-- Select an option --"" multiple=""multiple"" data-allow-clear=""true"" onfocus=""true"">
");
#nullable restore
#line 45 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                             foreach (var item in Model.CA_Responsible_CP)
                                            {
                                                if (item.Seleccionado == 1)
                                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6cc97b9e2e96099c78c010a624952f9e20f0fd219723", async() => {
#nullable restore
#line 49 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                                                                         Write(item.Responsable);

#line default
#line hidden
#nullable disable
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
#nullable restore
#line 49 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                                       WriteLiteral(item.ID_Usuario);

#line default
#line hidden
#nullable disable
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 50 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"

                                                }
                                                else
                                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6cc97b9e2e96099c78c010a624952f9e20f0fd2112394", async() => {
#nullable restore
#line 54 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                                                                Write(item.Responsable);

#line default
#line hidden
#nullable disable
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
#nullable restore
#line 54 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                                       WriteLiteral(item.ID_Usuario);

#line default
#line hidden
#nullable disable
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 55 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                                }
                                            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class=""row mb-3"">
                                <div class=""col-lg-3 fv-row  me-0"">
                                    <button type=""button"" onclick=""SendResponsible()"" id=""Search"" class=""btn btn-primary p-3 fs-8 me-3""><i class=""fas fa-save""></i>Save</button>
                                </div>
                            </div>
                        </div>
                        <div class=""tab-pane fade"" id=""kt_tab_pane_2"" role=""tabpanel"">
                            <div class=""table-responsive"">
                                <table class=""table border table-rounded table-hover table-row-bordered gy-4 gs-7"">
                                    <thead>
                                        <tr class=""fw-bold fs-6 text-gray-800 text-uppercase "">
                                       ");
            WriteLiteral(@"     <th class=""align-middle min-w-10px"">No. Employee</th>
                                            <th class=""align-middle"">Responsible</th>
                                            <th class=""align-middle"">Management</th>
                                        </tr>
                                    </thead>
                                    <tbody>
");
#nullable restore
#line 78 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                         foreach (var item in Model.CA_ResponsiblesManagements_CP)
                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                            <tr>\r\n                                                <td class=\"align-middle min-w-10px\">");
#nullable restore
#line 81 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                                                               Write(item.NoEmpleado);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                                <td class=\"align-middle\">");
#nullable restore
#line 82 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                                                    Write(item.Empleado);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                                <td class=\"align-middle\">\r\n                                                    <select");
            BeginWriteAttribute("id", " id=\"", 6040, "\"", 6067, 2);
            WriteAttributeValue("", 6045, "Select-", 6045, 7, true);
#nullable restore
#line 84 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
WriteAttributeValue("", 6052, item.UsuarioID, 6052, 15, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            BeginWriteAttribute("onchange", " onchange=\"", 6068, "\"", 6121, 3);
            WriteAttributeValue("", 6079, "ChangeManager(this.value,", 6079, 25, true);
#nullable restore
#line 84 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
WriteAttributeValue(" ", 6104, item.UsuarioID, 6105, 15, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 6120, ")", 6120, 1, true);
            EndWriteAttribute();
            WriteLiteral(" data-selected=\"");
#nullable restore
#line 84 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                                                                                                                                        Write(item.ID_Gerencia);

#line default
#line hidden
#nullable disable
            WriteLiteral("\" class=\"form-select form-select-sm p-3 fs-8\" data-control=\"select2\" data-placeholder=\"-- Select an option --\" data-allow-clear=\"true\">\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6cc97b9e2e96099c78c010a624952f9e20f0fd2119047", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 86 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                                         foreach (var manage in Model.Managements)
                                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6cc97b9e2e96099c78c010a624952f9e20f0fd2120401", async() => {
#nullable restore
#line 88 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                                                                     Write(manage.Text);

#line default
#line hidden
#nullable disable
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
#nullable restore
#line 88 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                                               WriteLiteral(manage.Value);

#line default
#line hidden
#nullable disable
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 89 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                    </select>\r\n                                                </td>\r\n                                            </tr>\r\n");
#nullable restore
#line 93 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                                    </tbody>
                                </table>
                            </div>

                        </div>
                        <div class=""tab-pane fade"" id=""kt_tab_pane_3"" role=""tabpanel"">
                            <div class=""row mb-3"">
                                <div class=""col-lg-3 fv-row mb-4"">
                                    <label class=""fs-6 form-label fw-bolder text-dark"">Select a Closer:</label>
                                    <div class=""form-control p-0"" style=""height: 300px;  overflow-y: scroll;"">
                                        <select id=""IdClosers"" class=""form-select form-select-solid"" data-control=""select2"" data-close-on-select=""false"" data-placeholder=""-- Select an option --"" multiple=""multiple"" data-allow-clear=""true"" onfocus=""true"">
");
#nullable restore
#line 106 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                             foreach (var item in Model.CA_Responsible_Closers_CP)
                                            {
                                                if (item.Seleccionado == 1)
                                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6cc97b9e2e96099c78c010a624952f9e20f0fd2124469", async() => {
#nullable restore
#line 110 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                                                                         Write(item.Responsable);

#line default
#line hidden
#nullable disable
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
#nullable restore
#line 110 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                                       WriteLiteral(item.ID_Usuario);

#line default
#line hidden
#nullable disable
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 111 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"

                                                }
                                                else
                                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6cc97b9e2e96099c78c010a624952f9e20f0fd2127144", async() => {
#nullable restore
#line 115 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                                                                Write(item.Responsable);

#line default
#line hidden
#nullable disable
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
#nullable restore
#line 115 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                                       WriteLiteral(item.ID_Usuario);

#line default
#line hidden
#nullable disable
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 116 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                                }
                                            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                        </select>
                                    </div>
                                </div>

                            </div>
                            <div class=""row mb-3"">
                                <div class=""col-lg-3 fv-row  me-0"">
                                    <button type=""button"" onclick=""SendClosers()"" id=""Search"" class=""btn btn-primary p-3 fs-8 me-3""><i class=""fas fa-save""></i>Save</button>
                                </div>
                            </div>
                        </div>
                        <div class=""tab-pane fade"" id=""kt_tab_pane_4"" role=""tabpanel"">
                            <div class=""card card-p-0 card-flush"">
                                <div class=""card-header align-items-center py-5 gap-2 gap-md-5"">
                                    <div class=""card-title"">
                                        <div class=""d-flex align-items-center position-relative my-1"">
                            ");
            WriteLiteral(@"                <span class=""svg-icon svg-icon-1 position-absolute ms-4""><i class=""fas fa-search""></i></span>
                                            <input type=""text"" data-kt-filter=""search"" class=""form-control form-control-solid w-250px ps-13"" placeholder=""Search Report"" />
                                        </div>
                                        <div id=""TablaSourcesCA_export"" class=""d-none""></div>
                                    </div>
                                    <div class=""card-toolbar flex-row-fluid justify-content-end gap-5"">
                                        <button type=""button"" onclick=""AddNewSources()"" class=""btn btn-success me-3"">
                                            <i class=""fas fa-plus""></i>New Sources
                                        </button>
                                        <button type=""button"" class=""btn btn-light-primary"" data-kt-menu-trigger=""click"" data-kt-menu-placement=""bottom-end"">
                                   ");
            WriteLiteral(@"         <span class=""svg-icon svg-icon-1 position-absolute ms-4""></span>
                                            <i class=""fas fa-download""></i> Export Report
                                        </button>
                                        <div id=""TablaSourcesCA_export_menu"" class=""menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-200px py-4"" data-kt-menu=""true"">
                                            <div class=""menu-item px-3"">
                                                <a href=""#"" class=""menu-link px-3"" data-kt-export=""excel"">
                                                    Export as excel &nbsp;&nbsp; <i class=""fas fa-file-excel text-success fs-3""></i>
                                                </a>
                                            </div>
                                            <div class=""menu-item px-3"">
                                                <a href=""#"" class=""menu-lin");
            WriteLiteral(@"k px-3"" data-kt-export=""csv"">
                                                    Export as csv &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i class=""fas fa-file-csv text-info fs-3""></i>
                                                </a>
                                            </div>
                                            <div class=""menu-item px-3"">
                                                <a href=""#"" class=""menu-link px-3"" data-kt-export=""pdf"">
                                                    Export as pdf &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i class=""fas fa-file-pdf text-danger fs-3""></i>
                                                </a>
                                            </div>
                                        </div>
                                        <div id=""TablaSourcesCA_buttons"" class=""d-none""></div>
                                    </div>
                                </div>
                                <div class=""card-body"">
                          ");
            WriteLiteral(@"          <table id=""TablaSourcesCA"" class=""table border table-rounded border-gray-400 table-hover table-row-bordered gy-4 gs-7"">
                                        <thead>
                                            <tr class=""p-2 fw-bold fs-6 text-gray-800 text-uppercase border-bottom border-gray-400 bg-gray-300"">
                                                <th class=""text-center border-end min-w-10px"">DELETE</th>
                                                <th class=""ps-3 min-w-1000px"">SOURCES</th>
                                            </tr>
                                        </thead>
                                        <tbody id=""IdTbody"" class=""fw-semibold text-gray-600"">
");
#nullable restore
#line 176 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                             foreach (var item in Model.Quality_CA_Sources)
                                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                <tr");
            BeginWriteAttribute("class", " class=\"", 13534, "\"", 13542, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                                                    <td><a class=\"p-0 btn btn-sm  me-2\"");
            BeginWriteAttribute("onclick", " onclick=\"", 13633, "\"", 13671, 3);
            WriteAttributeValue("", 13643, "DeleteSources(this,", 13643, 19, true);
#nullable restore
#line 179 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
WriteAttributeValue("", 13662, item.ID, 13662, 8, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 13670, ")", 13670, 1, true);
            EndWriteAttribute();
            WriteLiteral("><i class=\"fas fa-times fs-3 text-danger\"></i></a></td>\r\n                                                    <td>");
#nullable restore
#line 180 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                                   Write(item.Text);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                                </tr>\r\n");
#nullable restore
#line 182 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class=""tab-pane fade"" id=""kt_tab_pane_5"" role=""tabpanel"" >
                            <div class=""card card-p-0 card-flush"">
                                <div class=""card-header align-items-center py-5 gap-2 gap-md-5"">
                                    <div class=""card-title"">
                                        <div class=""d-flex align-items-center position-relative my-1"">
                                            <span class=""svg-icon svg-icon-1 position-absolute ms-4""><i class=""fas fa-search""></i></span>
                                            <input type=""text"" data-kt-filter=""Buscar"" class=""form-control form-control-solid w-250px ps-13"" placeholder=""Search"" />
                                        </div>
                                        <div i");
            WriteLiteral(@"d=""TablaSolutionTypes_export"" class=""d-none""></div>
                                    </div>
                                    <div class=""card-toolbar flex-row-fluid justify-content-end gap-5"">
                                        <button type=""button"" onclick=""AddNewSolution()"" class=""btn btn-success me-3"">
                                            <i class=""fas fa-plus""></i>New Solution
                                        </button>
                                        <button type=""button"" class=""btn btn-light-primary"" data-kt-menu-trigger=""click"" data-kt-menu-placement=""bottom-end"">
                                            <span class=""svg-icon svg-icon-1 position-absolute ms-4""></span>
                                            <i class=""fas fa-download""></i> Export Report
                                        </button>
                                        <div id=""TablaSolutionTypes_export_menu"" class=""menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-");
            WriteLiteral(@"600 menu-state-bg-light-primary fw-semibold fs-7 w-200px py-4"" data-kt-menu=""true"">
                                            <div class=""menu-item px-3"">
                                                <a href=""#"" class=""menu-link px-3"" data-kt-export1=""excel"">
                                                    Export as excel &nbsp;&nbsp; <i class=""fas fa-file-excel text-success fs-3""></i>
                                                </a>
                                            </div>
                                            <div class=""menu-item px-3"">
                                                <a href=""#"" class=""menu-link px-3"" data-kt-export1=""csv"">
                                                    Export as csv &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i class=""fas fa-file-csv text-info fs-3""></i>
                                                </a>
                                            </div>
                                            <div class=""menu-item px-3"">
           ");
            WriteLiteral(@"                                     <a href=""#"" class=""menu-link px-3"" data-kt-export1=""pdf"">
                                                    Export as pdf &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i class=""fas fa-file-pdf text-danger fs-3""></i>
                                                </a>
                                            </div>
                                        </div>
                                        <div id=""TablaSolutionTypes_buttons"" class=""d-none""></div>
                                    </div>
                                </div>
                                <div class=""card-body"">
                                    <table id=""TablaSolutionTypes"" class=""table border table-rounded border-gray-400 table-hover table-row-bordered gy-4 gs-7"" >
                                        <thead>
                                            <tr class=""p-2 fw-bold fs-6 text-gray-800 text-uppercase border-bottom border-gray-400 bg-gray-300"">
                              ");
            WriteLiteral(@"                  <th class=""text-center border-end min-w-10px"">DELETE</th>
                                                <th class=""ps-3 min-w-1000px"">Solutions</th>
                                            </tr>
                                        </thead>
                                        <tbody id=""IdTbody"" class=""fw-semibold text-gray-600"">
");
#nullable restore
#line 235 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                             foreach (var item in Model.Quality_CA_TypeSolutions)
                                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                <tr");
            BeginWriteAttribute("class", " class=\"", 18565, "\"", 18573, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                                                    <td><a class=\"p-0 btn btn-sm  me-2\"");
            BeginWriteAttribute("onclick", " onclick=\"", 18664, "\"", 18703, 3);
            WriteAttributeValue("", 18674, "DeleteSolution(this,", 18674, 20, true);
#nullable restore
#line 238 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
WriteAttributeValue("", 18694, item.ID, 18694, 8, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 18702, ")", 18702, 1, true);
            EndWriteAttribute();
            WriteLiteral("><i class=\"fas fa-times fs-3 text-danger\"></i></a>\r\n                                                </td>\r\n                                                    <td>");
#nullable restore
#line 240 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                                   Write(item.Text);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                                </tr>\r\n");
#nullable restore
#line 242 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class=""tab-pane fade"" id=""kt_tab_pane_6"" role=""tabpanel"">
                            <div class=""card card-p-0 card-flush"">
                                <div class=""card-header align-items-center py-5 gap-2 gap-md-5"">
                                    <div class=""card-title"">
                                        <div class=""d-flex align-items-center position-relative my-1"">
                                            <span class=""svg-icon svg-icon-1 position-absolute ms-4""><i class=""fas fa-search""></i></span>
                                            <input type=""text"" data-kt-filter=""BuscarProccess"" class=""form-control form-control-solid w-250px ps-13"" placeholder=""Search"" />
                                        </div>
                                       ");
            WriteLiteral(@" <div id=""TablaProccess_export"" class=""d-none""></div>
                                    </div>
                                    <div class=""card-toolbar flex-row-fluid justify-content-end gap-5"">
                                        <button type=""button"" class=""btn btn-success me-3"" data-bs-toggle=""modal"" data-bs-target=""#NewProccessModal"">
                                            <i class=""fas fa-plus""></i>New Proccess
                                        </button>
                                        <button type=""button"" class=""btn btn-light-primary"" data-kt-menu-trigger=""click"" data-kt-menu-placement=""bottom-end"">
                                            <span class=""svg-icon svg-icon-1 position-absolute ms-4""></span>
                                            <i class=""fas fa-download""></i> Export Report
                                        </button>
                                        <div id=""TablaProccess_export_menu"" class=""menu menu-sub menu-sub-dropdown menu-co");
            WriteLiteral(@"lumn menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-200px py-4"" data-kt-menu=""true"">
                                            <div class=""menu-item px-3"">
                                                <a href=""#"" class=""menu-link px-3"" data-kt-export2=""excel"">
                                                    Export as excel &nbsp;&nbsp; <i class=""fas fa-file-excel text-success fs-3""></i>
                                                </a>
                                            </div>
                                            <div class=""menu-item px-3"">
                                                <a href=""#"" class=""menu-link px-3"" data-kt-export2=""csv"">
                                                    Export as csv &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i class=""fas fa-file-csv text-info fs-3""></i>
                                                </a>
                                            </div>
                                            <div class=""m");
            WriteLiteral(@"enu-item px-3"">
                                                <a href=""#"" class=""menu-link px-3"" data-kt-export3=""pdf"">
                                                    Export as pdf &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i class=""fas fa-file-pdf text-danger fs-3""></i>
                                                </a>
                                            </div>
                                        </div>
                                        <div id=""TablaProccess_buttons"" class=""d-none""></div>
                                    </div>
                                </div>
                                <div class=""card-body"">
                                    <table id=""TablaProccess"" class=""table border table-rounded border-gray-400 table-hover table-row-bordered gy-4 gs-7"">
                                        <thead>
                                            <tr class=""p-2 fw-bold fs-6 text-gray-800 text-uppercase border-bottom border-gray-400 bg-gray-300"">
             ");
            WriteLiteral(@"                                   <th class=""text-center border-end min-w-10px"">DELETE</th>
                                                <th class=""text-center border-end min-w-10px"">Number</th>
                                                <th class=""ps-3 min-w-1000px"">Description</th>
                                            </tr>
                                        </thead>
                                        <tbody id=""IdTbody"" class=""fw-semibold text-gray-600"">
");
#nullable restore
#line 296 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                             foreach (var item in Model.Quality_CA_Processes)
                                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                <tr");
            BeginWriteAttribute("class", " class=\"", 23769, "\"", 23777, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                                                    <td>\r\n                                                        <a class=\"p-0 btn btn-sm  me-2\"");
            BeginWriteAttribute("onclick", " onclick=\"", 23926, "\"", 23973, 3);
            WriteAttributeValue("", 23936, "DeleteProccess(this,", 23936, 20, true);
#nullable restore
#line 300 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
WriteAttributeValue("", 23956, item.ID_Proceso, 23956, 16, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 23972, ")", 23972, 1, true);
            EndWriteAttribute();
            WriteLiteral(@"><i class=""fas fa-times fs-3 text-danger""></i></a>
                                                    </td>
                                                    <td>
                                                        <a class=""text-primary opacity-75-hover fs-6 fw-bold""");
            BeginWriteAttribute("onclick", " onclick=\"", 24252, "\"", 24339, 8);
            WriteAttributeValue("", 24262, "OpenUpdateProccess(this,", 24262, 24, true);
#nullable restore
#line 303 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
WriteAttributeValue(" ", 24286, item.ID_Proceso, 24287, 16, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 24303, ",", 24303, 1, true);
#nullable restore
#line 303 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
WriteAttributeValue(" ", 24304, item.Numero, 24305, 12, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 24317, ",", 24317, 1, true);
            WriteAttributeValue(" ", 24318, "\'", 24319, 2, true);
#nullable restore
#line 303 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
WriteAttributeValue("", 24320, item.Descripcion, 24320, 17, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 24337, "\')", 24337, 2, true);
            EndWriteAttribute();
            WriteLiteral("> ");
#nullable restore
#line 303 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                                                                                                                                                                                  Write(item.Numero);

#line default
#line hidden
#nullable disable
            WriteLiteral("</a>\r\n                                                        </td>\r\n                                                    <td>");
#nullable restore
#line 305 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                                   Write(item.Descripcion);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                                </tr>\r\n");
#nullable restore
#line 307 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                                            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

");
            WriteLiteral(@"<div class=""modal fade"" tabindex=""-1"" id=""NewProccessModal"" data-bs-keyboard=""false"" data-bs-backdrop=""static"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-body"">
                <h1 class=""text-center"">New Proccess</h1>
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6cc97b9e2e96099c78c010a624952f9e20f0fd2152572", async() => {
                WriteLiteral(@"
                    <div class=""fv-row"">
                        <label class=""col-lg-3 col-form-label required fw-bold fs-6 mb-0"">Number:</label>
                        <input type=""text"" id=""NumberProccess"" name=""NumberProccess"" class=""form-control p-3 fs-7 mb-0"" />
                    </div>
                    <div class=""fv-row"">
                        <label class=""col-lg-3 col-form-label required fw-bold fs-6 mb-0"">Description:</label>
                        <input type=""text"" id=""DescProccess"" name=""DescProccess"" class=""form-control p-3 fs-7 mb-0"" />
                    </div>
                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-light"" data-bs-dismiss=""modal"">Close</button>
                <button id=""SendNewProccess"" type=""button"" class=""btn btn-primary"">
                    <span class=""indicator-label"">Save</span>
                    <span class=""indicator-progress"">
                        Please wait...<span class=""spinner-border spinner-border-sm align-middle ms-2""></span>
                    </span>
                </button>
            </div>
        </div>
    </div>
</div>

");
            WriteLiteral(@"<div class=""modal fade"" tabindex=""-1"" id=""UpdateProccessModal"" data-bs-keyboard=""false"" data-bs-backdrop=""static"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-body"">
                <h1 class=""text-center"">Update Proccess</h1>
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6cc97b9e2e96099c78c010a624952f9e20f0fd2155488", async() => {
                WriteLiteral(@"
                    <input type=""hidden"" id=""IdUpdateProces"" name=""IdUpdateProces"" />
                    <div class=""fv-row"">
                        <label class=""col-lg-3 col-form-label required fw-bold fs-6 mb-0"">Number:</label>
                        <input type=""number"" id=""UpNumberProces"" name=""UpNumberProces"" class=""form-control p-3 fs-7 mb-0"" />
                    </div>
                    <div class=""fv-row"">
                        <label class=""col-lg-3 col-form-label required fw-bold fs-6 mb-0"">Description:</label>
                        <input type=""text"" id=""UpDescProccess"" name=""UpDescProccess"" class=""form-control p-3 fs-7 mb-0"" />
                    </div>
                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-light"" data-bs-dismiss=""modal"">Close</button>
                <button id=""UpdateProccess"" type=""button"" class=""btn btn-primary"">
                    <span class=""indicator-label"">Update</span>
                    <span class=""indicator-progress"">
                        Please wait...<span class=""spinner-border spinner-border-sm align-middle ms-2""></span>
                    </span>
                </button>
            </div>
        </div>
    </div>
</div>

");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n    \r\n");
                WriteLiteral(@"    <script>
        document.querySelectorAll('[data-selected]').forEach(e => { e.value = e.dataset.selected });

        $(document).ready(function() {
            KTApp.init();
        });

        var IdSeccion = $(""#IdSeccion"").val();

        var UpdateRowProccess ="""";
    </script>

");
                WriteLiteral(@"    <script type=""text/javascript"">
        var KTDatatablesExample = function () {
            var table;
            var datatable;

            var initDatatable = function () {
                const tableRows = table.querySelectorAll('tbody tr');

                tableRows.forEach(row => {
                    const dateRow = row.querySelectorAll('td');
                });

                datatable = $(table).DataTable({
                    ""info"": true,
                    ""order"": [],
                    ""pageLength"": 25,
                   
                    ""columns"": [
                        {
                            className: ""border-end border-gray-400 text-center min-w-10px"",
                        },
                        {
                            className: ""ps-3 border-gray-400 min-w-1000px"",
                        }
                    ]
                });
            }

            // Hook export buttons
            var exportButtons = () => {
  ");
                WriteLiteral(@"              const documentTitle = 'Sources_CorrectiveAction';
                var buttons = new $.fn.dataTable.Buttons(table, {
                    buttons: [
                        {
                            extend: 'copyHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'excelHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'csvHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'pdfHtml5',
                            title: documentTitle
                        }
                    ]
                }).container().appendTo($('#TablaSourcesCA_buttons'));

                const exportButtons = document.querySelectorAll('#TablaSourcesCA_export_menu [data-kt-export]');
                exportButtons.f");
                WriteLiteral(@"orEach(exportButton => {
                    exportButton.addEventListener('click', e => {
                        e.preventDefault();

                        const exportValue = e.target.getAttribute('data-kt-export');
                        const target = document.querySelector('.dt-buttons .buttons-' + exportValue);

                        target.click();
                    });
                });
            }

            var handleSearchDatatable = () => {
                const filterSearch = document.querySelector('[data-kt-filter=""search""]');
                filterSearch.addEventListener('keyup', function (e) {
                    datatable.search(e.target.value).draw();
                });
            }

            return {
                init: function () {
                    table = document.querySelector('#TablaSourcesCA');

                    if (!table) {
                        return;
                    }

                    initDatatable();
              ");
                WriteLiteral("      exportButtons();\r\n                    handleSearchDatatable();\r\n                }\r\n            };\r\n        }();\r\n\r\n        KTUtil.onDOMContentLoaded(function () {\r\n            KTDatatablesExample.init();\r\n        });\r\n    </script>\r\n\r\n");
                WriteLiteral(@"    <script type=""text/javascript"">

        var KTDatatablesExample_Solution = function () {
            var table;
            var datatable;

            var initDatatable_Solution = function () {
                const tableRows = table.querySelectorAll('tbody tr');

                tableRows.forEach(row => {
                    const dateRow = row.querySelectorAll('td');
                });

                datatable = $(table).DataTable({
                    ""info"": true,
                    ""order"": [],
                    ""pageLength"": 10,
                    ""columns"": [
                        {
                            className: ""border-end border-gray-400 text-center min-w-10px"",
                        },
                        {
                            className: ""ps-3 border-gray-400 min-w-1000px"",
                        }
                    ]
                });
            }

            var exportButtons_Solution = () => {
                const document");
                WriteLiteral(@"Title = 'Solutions_CorrectiveActions';
                var buttons = new $.fn.dataTable.Buttons(table, {
                    buttons: [
                        {
                            extend: 'copyHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'excelHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'csvHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'pdfHtml5',
                            title: documentTitle
                        }
                    ]
                }).container().appendTo($('#TablaSolutionTypes_buttons'));

                const exportButtons = document.querySelectorAll('#TablaSolutionTypes_export_menu [data-kt-export1]');
                exportButtons.forEach(exportBut");
                WriteLiteral(@"ton => {
                    exportButton.addEventListener('click', e => {
                        e.preventDefault();

                        const exportValue = e.target.getAttribute('data-kt-export1');
                        var target = document.querySelector('div[id=""TablaSolutionTypes_buttons""]');
                        target = target.querySelector('.buttons-' + exportValue);

                        target.click();
                    });
                });
            }

            var handleSearchDatatable_Solution = () => {
                const filterSearch = document.querySelector('[data-kt-filter=""Buscar""]');
                filterSearch.addEventListener('keyup', function (e) {
                    datatable.search(e.target.value).draw();
                });
            }

            return {
                init: function () {
                    table = document.querySelector('#TablaSolutionTypes');

                    if (!table) {
                        return");
                WriteLiteral(@";
                    }

                    initDatatable_Solution();
                    exportButtons_Solution();
                    handleSearchDatatable_Solution();
                }
            };
        }();

        KTUtil.onDOMContentLoaded(function () {
            KTDatatablesExample_Solution.init();
        });

    </script>

");
                WriteLiteral(@"    <script type=""text/javascript"">

        var KTDatatablesExample_Proccess = function () {
            var table;
            var datatable;

            var initDatatable_Proccess = function () {
                const tableRows = table.querySelectorAll('tbody tr');

                tableRows.forEach(row => {
                    const dateRow = row.querySelectorAll('td');
                });

                datatable = $(table).DataTable({
                    ""info"": true,
                    ""order"": [],
                    ""pageLength"": 10,
                    ""order"": [[1, 'asc']],
                    ""columns"": [
                        {
                            className: ""border-end border-gray-400 text-center min-w-10px"",
                        },
                        {
                            className: ""border-end border-gray-400 text-center min-w-10px"",
                        },
                        {
                            className: ""ps-3 border-g");
                WriteLiteral(@"ray-400 min-w-1000px"",
                        }
                    ]
                });
            }

            var exportButtons_Proccess = () => {
                const documentTitle = 'Proccess_CorrectiveActions';
                var buttons = new $.fn.dataTable.Buttons(table, {
                    buttons: [
                        {
                            extend: 'copyHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'excelHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'csvHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'pdfHtml5',
                            title: documentTitle
                        }
                    ]
                }).container().appendTo($('#TablaProc");
                WriteLiteral(@"cess_buttons'));

                const exportButtons = document.querySelectorAll('#TablaProccess_export_menu [data-kt-export2]');
                exportButtons.forEach(exportButton => {
                    exportButton.addEventListener('click', e => {
                        e.preventDefault();

                        const exportValue = e.target.getAttribute('data-kt-export2');
                        var target = document.querySelector('div[id=""TablaProccess_buttons""]');
                        target = target.querySelector('.buttons-' + exportValue);

                        target.click();
                    });
                });
            }

            var handleSearchDatatable_Proccess = () => {
                const filterSearch = document.querySelector('[data-kt-filter=""BuscarProccess""]');
                filterSearch.addEventListener('keyup', function (e) {
                    datatable.search(e.target.value).draw();
                });
            }

            return");
                WriteLiteral(@" {
                init: function () {
                    table = document.querySelector('#TablaProccess');

                    if (!table) {
                        return;
                    }

                    initDatatable_Proccess();
                    exportButtons_Proccess();
                    handleSearchDatatable_Proccess();
                }
            };
        }();

        KTUtil.onDOMContentLoaded(function () {
            KTDatatablesExample_Proccess.init();
        });

    </script>

");
                WriteLiteral(@"    <script>
        function SendResponsible() {
            var formData = new FormData();

            formData.append(""Responsibles"", $(""#IdResponsible"").val());
            formData.append(""IdSeccion"", IdSeccion);

            Swal.fire({
                text: ""Are you sure to save the change?"",
                icon: ""question"",
                buttonsStyling: false,
                allowEscapeKey: false,
                allowOutsideClick: false,
                showCancelButton: true,
                confirmButtonText: ""Confirm"",
                cancelButtonText: 'Cancel',
                customClass: {
                    confirmButton: ""btn btn-primary"",
                    cancelButton: 'btn btn-danger'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: """);
#nullable restore
#line 706 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                         Write(Url.Action("SaveResposibles","CP_CorrectiveAction"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                        data: formData,
                        type: ""POST"",
                        processData: false,
                        contentType: false,
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader(""XSRF-TOKEN"",
                                $('input:hidden[name=""__RequestVerificationToken""]').val());
                        },
                    }).done(function (result) {
                        if (result != null || result != """") 
                        {
                            if (result == 'Error') 
                            {
                               SystemServerError()
                            }
                            if (result == 'noSession') {
                                swalExpired()
                            }
                            else if (result == 'Sorry') {
                                swalNoAuthorized()
                            }
                           ");
                WriteLiteral(@" else if (result == 'NoPage') {
                                swalNoAuthorized()
                            }
                            else if (result == 'Success') {
                                Swal.fire({
                                    text: ""The action has been successfully submitted!"",
                                    icon: ""success"",
                                    buttonsStyling: false,
                                    allowEscapeKey: false,
                                    allowOutsideClick: false,
                                    confirmButtonText: ""Ok, got it!"",
                                    customClass: {
                                        confirmButton: ""btn btn-primary""
                                    }
                                }).then((result) => {
                                    if (result.isConfirmed) {

                                    }
                                });
                            }
            ");
                WriteLiteral(@"            }
                        else {
                            SystemServerError()
                        }
                    }).fail(function (error) {
                        swalErrorServer()
                    });

                }
                else 
                {

                }
            });

        }
    </script>

");
                WriteLiteral(@"    <script>
        var idGlobal;
        $(document).ready(function () {
            $('select').on('select2:open', function (e) {
                var id = $(this).attr(""id"");
                //Obtener el name or id del elemento para realizar el proceso seleccionar o deseleccionar opciones.
                idGlobal = $('#' + id).val();
            });
        });


        function ChangeManager(IdManager, Usuario) {
            var formData = new FormData();

            Swal.fire({
                text: ""Are you sure to save the change?"",
                icon: ""question"",
                buttonsStyling: false,
                allowEscapeKey: false,
                allowOutsideClick: false,
                showCancelButton: true,
                closeOnCancel: true,
                confirmButtonText: ""Confirm"",
                cancelButtonText: 'Cancel',
                customClass: {
                    confirmButton: ""btn btn-primary"",
                    cancelButton: 'btn btn-");
                WriteLiteral("danger\'\r\n                }\r\n            }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    $.ajax({\r\n                        url: \"");
#nullable restore
#line 798 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                         Write(Url.Action("SaveResponseByManager","CP_CorrectiveAction"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                        data: {
                            IdManager: IdManager,
                            Usuario: Usuario,
                            IdSeccion: IdSeccion
                        },
                        type: ""POST"",
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader(""XSRF-TOKEN"",
                                $('input:hidden[name=""__RequestVerificationToken""]').val());
                        },
                    }).done(function (result) {
                        if (result != null) {
                            if (result == 'Error') {
                                SystemServerError()
                            }
                            if (result == 'noSession') {
                                swalExpired()
                            }
                            else if (result == 'Sorry') {
                                swalNoAuthorized()
                            }
                    ");
                WriteLiteral(@"        else if (result == 'NoPage') {
                                swalNoAuthorized()
                            }
                            else if (result == 'Success') {
                                Swal.fire({
                                    text: ""The action has been successfully submitted!"",
                                    icon: ""success"",
                                    buttonsStyling: false,
                                    allowEscapeKey: false,
                                    allowOutsideClick: false,
                                    confirmButtonText: ""Ok, got it!"",
                                    customClass: {
                                        confirmButton: ""btn btn-primary""
                                    }
                                }).then((result) => {
                                    if (result.isConfirmed) {

                                    }
                                });
                            }
     ");
                WriteLiteral(@"                   }
                        else {
                            SystemServerError()
                        }
                    }).fail(function (error) {
                        swalErrorServer()
                    });

                }
                else {
                    console.log(idGlobal)

                    $('#Select-' + Usuario).val(idGlobal).trigger('change');
                    $('.swal2-container').css('display', 'none');
                }
            });

        }
    </script>

");
                WriteLiteral(@"    <script>
        function SendClosers() {
            var formData = new FormData();

            formData.append(""Closers"", $(""#IdClosers"").val());
            formData.append(IdSeccion, IdSeccion);

            Swal.fire({
                text: ""Are you sure to save the change?"",
                icon: ""question"",
                buttonsStyling: false,
                allowEscapeKey: false,
                allowOutsideClick: false,
                showCancelButton: true,
                confirmButtonText: ""Confirm"",
                cancelButtonText: 'Cancel',
                customClass: {
                    confirmButton: ""btn btn-primary"",
                    cancelButton: 'btn btn-danger'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: """);
#nullable restore
#line 884 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                         Write(Url.Action("SaveClosers","CP_CorrectiveAction"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                        data: formData,
                        type: ""POST"",
                        processData: false,
                        contentType: false,
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader(""XSRF-TOKEN"",
                                $('input:hidden[name=""__RequestVerificationToken""]').val());
                        },
                    }).done(function (result) {
                        if (result != null) {
                            if (result == 'Error') 
                            {
                               SystemServerError()
                            }
                            if (result == 'noSession') {
                                swalExpired()
                            }
                            else if (result == 'Sorry') {
                                swalNoAuthorized()
                            }
                            else if (result == 'NoPage') {
         ");
                WriteLiteral(@"                       swalNoAuthorized()
                            }
                            else if (result == 'Success') {
                                Swal.fire({
                                    text: ""The action has been successfully submitted!"",
                                    icon: ""success"",
                                    buttonsStyling: false,
                                    allowEscapeKey: false,
                                    allowOutsideClick: false,
                                    confirmButtonText: ""Ok, got it!"",
                                    customClass: {
                                        confirmButton: ""btn btn-primary""
                                    }
                                }).then((result) => {
                                    if (result.isConfirmed) {

                                    }
                                });
                            }
                        }
                        els");
                WriteLiteral(@"e {
                            SystemServerError()
                        }
                    }).fail(function (error) {
                         swalErrorServer()
                    });

                }
                else {

                }
            });


        }
    </script>

");
                WriteLiteral(@"    <script>
        function AddNewSources() {

            Swal.fire({
                title: '<h1 class="""">New source</h1>' +
                       '<label class=""col-lg-3 col-form-label required fw-bold fs-6 mb-0"">Source:</label>',
                input: 'text',
                customClass: {
                    validationMessage: 'my-validation-message form-control p-3 fs-7'
                },
                preConfirm: (value) => {
                    if (!value) {
                        Swal.showValidationMessage(
                            'The Source is required!'
                        )
                    }
                },
                inputAttributes: {
                    autocapitalize: 'off'
                },
                width: '550px',
                showCancelButton: true,
                buttonsStyling: false,
                allowOutsideClick: false,
                allowEscapeKey: false,
                confirmButtonText: ""Save"",
                ");
                WriteLiteral(@"cancelButtonText: ""Cancel"",
                customClass: {
                    confirmButton: ""btn btn-primary"",
                    cancelButton: 'btn btn-secondary'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    var Source = result.value;

                    $.ajax({
                        url: """);
#nullable restore
#line 980 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                         Write(Url.Action("AddNewSources","CP_CorrectiveAction"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                        data: {
                            Source: Source,
                            IdSeccion: IdSeccion
                        },
                        type: ""POST"",
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader(""XSRF-TOKEN"",
                                $('input:hidden[name=""__RequestVerificationToken""]').val());
                        },
                    }).done(function (result) {
                        if (result != null) 
                        {
                            if (result == 'Error') {
                                SystemServerError()
                            }
                            if (result == 'noSession') 
                            {
                                swalExpired()
                            }
                            else if (result == 'Sorry') 
                            {
                                swalNoAuthorized()
                  ");
                WriteLiteral(@"          }
                            else if (result == 'NoPage') 
                            {
                                swalNoAuthorized()
                            }
                            else if (result == 'Exists') 
                            {
                                swal.fire({
                                    text: ""Sorry, the Source Exists in the Database, please try again."",
                                    icon: ""warning"",
                                    buttonsStyling: false,
                                    confirmButtonText: ""Ok, got it!"",
                                    customClass: {
                                        confirmButton: ""btn font-weight-bold btn-light-primary""
                                    }
                                })
                            }
                            else {
                                var t = $('#TablaSourcesCA').DataTable();

                                var resultCo");
                WriteLiteral(@"ntroller = result;

                                Swal.fire({
                                    text: ""The action has been successfully submitted!"",
                                    icon: ""success"",
                                    buttonsStyling: false,
                                    allowEscapeKey: false,
                                    allowOutsideClick: false,
                                    confirmButtonText: ""Ok, got it!"",
                                    customClass: {
                                        confirmButton: ""btn btn-primary""
                                    }
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        t.row.add(['<a class=""p-0 btn btn-sm  me-2"" onclick=""DeleteSources(this,' + resultController + ')""><i class=""fas fa-times fs-3 text-danger""></i></a>',
                                            Source]).draw(false);
                 ");
                WriteLiteral(@"                   }
                                });
                            }
                        }
                        else {
                            SystemServerError()
                        }
                    }).fail(function (error) {
                         swalErrorServer()
                    });

                }
            })

        }
    </script>

");
                WriteLiteral(@"    <script>
        function DeleteSources(DeleteRow, IdSources) {
            Swal.fire({
                text: ""Are you sure to Delete the Sources?"",
                icon: ""question"",
                buttonsStyling: false,
                allowEscapeKey: false,
                allowOutsideClick: false,
                showCancelButton: true,
                closeOnCancel: true,
                confirmButtonText: ""Confirm"",
                cancelButtonText: 'Cancel',
                customClass: {
                    confirmButton: ""btn btn-primary"",
                    cancelButton: 'btn btn-danger'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: """);
#nullable restore
#line 1076 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                         Write(Url.Action("DeleteSources","CP_CorrectiveAction"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                        data: {
                            IdSources: IdSources,
                            IdSeccion: IdSeccion
                        },
                        type: ""POST"",
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader(""XSRF-TOKEN"",
                                $('input:hidden[name=""__RequestVerificationToken""]').val());
                        },
                    }).done(function (result) {
                        if (result != null) {
                            if (result == 'Error') {
                                SystemServerError()
                            }
                            if (result == 'noSession') {
                                swalExpired()
                            }
                            else if (result == 'Sorry') {
                                swalNoAuthorized()
                            }
                            else if (result == 'NoPage') {
       ");
                WriteLiteral(@"                         swalNoAuthorized()
                            }
                            else {

                                Swal.fire({
                                    text: ""The action has been successfully submitted!"",
                                    icon: ""success"",
                                    buttonsStyling: false,
                                    allowEscapeKey: false,
                                    allowOutsideClick: false,
                                    confirmButtonText: ""Ok, got it!"",
                                    customClass: {
                                        confirmButton: ""btn btn-primary""
                                    }
                                }).then((result) => {
                                    if (result.isConfirmed) {

                                        var table = $('#TablaSourcesCA').DataTable();
                                        table.row($(DeleteRow).parents('tr')).remove().draw();");
                WriteLiteral(@"
                                    }
                                });
                            }
                        }
                        else {
                            SystemServerError()
                        }
                    }).fail(function (error) {
                        swalErrorServer()
                    });

                }
                else {
                    $('#Select-' + Usuario).val(idGlobal).trigger('change');
                    $('.swal2-container').css('display', 'none');
                }
            });



        }
    </script>

");
                WriteLiteral(@"    <script>
        function AddNewSolution() {

            Swal.fire({
                title: '<h1 class="""">New solution type</h1>' +
                    '<label class=""col-lg-3 col-form-label required fw-bold fs-6 mb-0"">Solution type:</label>',
                input: 'text',
                customClass: {
                    validationMessage: 'my-validation-message form-control p-3 fs-7'
                },
                preConfirm: (value) => {
                    if (!value) {
                        Swal.showValidationMessage(
                            'The Solution Type is required!'
                        )
                    }
                },
                inputAttributes: {
                    autocapitalize: 'off'
                },
                width: '550px',
                showCancelButton: true,
                buttonsStyling: false,
                allowOutsideClick: false,
                allowEscapeKey: false,
                confirmButtonText: ""Save""");
                WriteLiteral(@",
                cancelButtonText: ""Cancel"",
                customClass: {
                    confirmButton: ""btn btn-primary"",
                    cancelButton: 'btn btn-secondary'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    var Solution = result.value;

                    $.ajax({
                        url: """);
#nullable restore
#line 1177 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                         Write(Url.Action("AddNewSolution","CP_CorrectiveAction"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                        data: {
                            Solution: Solution,
                            IdSeccion: IdSeccion
                        },
                        type: ""POST"",
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader(""XSRF-TOKEN"",
                                $('input:hidden[name=""__RequestVerificationToken""]').val());
                        },
                    }).done(function (result) {
                        if (result != null) {

                            if (result == 'Error') {
                                SystemServerError()
                            }
                            if (result == 'noSession') {
                                swalExpired()
                            }
                            else if (result == 'Sorry') {
                                swalNoAuthorized()
                            }
                            else if (result == 'NoPage') {
       ");
                WriteLiteral(@"                         swalNoAuthorized()
                            }
                            else if (result == 'Exists') {
                                swal.fire({
                                    text: ""Sorry, the Solution Type Exists in the Database, please try again."",
                                    icon: ""warning"",
                                    buttonsStyling: false,
                                    confirmButtonText: ""Ok, got it!"",
                                    customClass: {
                                        confirmButton: ""btn font-weight-bold btn-light-primary""
                                    }
                                })
                            }
                            else {
                                var t = $('#TablaSolutionTypes').DataTable();
                                var resultController = result;

                                Swal.fire({
                                    text: ""The action has been s");
                WriteLiteral(@"uccessfully submitted!"",
                                    icon: ""success"",
                                    buttonsStyling: false,
                                    allowEscapeKey: false,
                                    allowOutsideClick: false,
                                    confirmButtonText: ""Ok, got it!"",
                                    customClass: {
                                        confirmButton: ""btn btn-primary""
                                    }
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        t.row.add(['<a class=""p-0 btn btn-sm  me-2"" onclick=""DeleteSolution(this,' + resultController + ')""><i class=""fas fa-times fs-3 text-danger""></i></a>',
                                            Solution]).draw(false);
                                    }
                                });
                            }
                        }
           ");
                WriteLiteral(@"             else {
                            SystemServerError()
                        }
                    }).fail(function (error) {
                         swalErrorServer()
                    });

                }
            })

        }
    </script>

");
                WriteLiteral(@"    <script>
        function DeleteSolution(DeleteRow, IdSolution) {
            Swal.fire({
                text: ""Are you sure to Delete the Solution?"",
                icon: ""question"",
                buttonsStyling: false,
                allowEscapeKey: false,
                allowOutsideClick: false,
                showCancelButton: true,
                closeOnCancel: true,
                confirmButtonText: ""Confirm"",
                cancelButtonText: 'Cancel',
                customClass: {
                    confirmButton: ""btn btn-primary"",
                    cancelButton: 'btn btn-danger'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: """);
#nullable restore
#line 1268 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                         Write(Url.Action("DeleteSolutionType","CP_CorrectiveAction"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                        data: {
                            IdSolution: IdSolution,
                            IdSeccion: IdSeccion
                        },
                        type: ""POST"",
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader(""XSRF-TOKEN"",
                                $('input:hidden[name=""__RequestVerificationToken""]').val());
                        },
                    }).done(function (result) {
                        if (result != null) {
                            if (result == 'Error') 
                            {
                               SystemServerError()
                            }
                            if (result == 'noSession') {
                                swalExpired()
                            }
                            else if (result == 'Sorry') {
                                swalNoAuthorized()
                            }
                            else if ");
                WriteLiteral(@"(result == 'NoPage') {
                                swalNoAuthorized()
                            }
                            else{

                                Swal.fire({
                                    text: ""The action has been successfully submitted!"",
                                    icon: ""success"",
                                    buttonsStyling: false,
                                    allowEscapeKey: false,
                                    allowOutsideClick: false,
                                    confirmButtonText: ""Ok, got it!"",
                                    customClass: {
                                        confirmButton: ""btn btn-primary""
                                    }
                                }).then((result) => {
                                    if (result.isConfirmed)
                                    {
                                        var table = $('#TablaSolutionTypes').DataTable();
                          ");
                WriteLiteral(@"              table.row($(DeleteRow).parents('tr')).remove().draw();
                                    }
                                });
                            }
                        }
                        else {
                            SystemServerError()
                        }
                    }).fail(function (error) {
                        swalErrorServer()
                    });

                }
                else {
                    $('#Select-' + Usuario).val(idGlobal).trigger('change');
                    $('.swal2-container').css('display', 'none');
                }
            });

        }
    </script>
  
");
                WriteLiteral("    <script>\r\n        function AddNewProccess()\r\n        {\r\n            var Number = $(\"#NumberProccess\").val();\r\n            var Description = $(\"#DescProccess\").val();\r\n\r\n            $.ajax({\r\n                url: \"");
#nullable restore
#line 1339 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                 Write(Url.Action("AddNewProccess","CP_CorrectiveAction"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                data: {
                    Number:Number,
                    Description: Description,
                    IdSeccion: IdSeccion
                },
                type: ""POST"",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader(""XSRF-TOKEN"",
                        $('input:hidden[name=""__RequestVerificationToken""]').val());
                },
            }).done(function (result) {
                if (result != null) {
                    if (result == 'Error') 
                    {
                        SystemServerError()
                    }
                    if (result == 'noSession') {
                        swalExpired()
                    }
                    else if (result == 'Sorry') {
                        swalNoAuthorized()
                    }
                    else if (result == 'NoPage') {
                        swalNoAuthorized()
                    }
                    else if (result == 'Exists");
                WriteLiteral(@"') {
                        swal.fire({
                            text: ""Sorry, the Solution Type Exists in the Database, please try again."",
                            icon: ""warning"",
                            buttonsStyling: false,
                            confirmButtonText: ""Ok, got it!"",
                            customClass: {
                                confirmButton: ""btn font-weight-bold btn-light-primary""
                            }
                        })
                    }
                    else 
                    {
                        var t = $('#TablaProccess').DataTable();
                        var resultController = result;

                        Swal.fire({
                            text: ""The action has been successfully submitted!"",
                            icon: ""success"",
                            buttonsStyling: false,
                            allowEscapeKey: false,
                            allowOutsideClick: false,
  ");
                WriteLiteral(@"                          confirmButtonText: ""Ok, got it!"",
                            customClass: {
                                confirmButton: ""btn btn-primary""
                            }
                        }).then((result) => {
                            if (result.isConfirmed) {
                                $('#NewProccessModal').modal('hide');

                                t.row.add([
                                    `<a class=""p-0 btn btn-sm  me-2"" onclick=""DeleteProccess(this, ${resultController})""><i class=""fas fa-times fs-3 text-danger""></i></a>`,
                                    `<a class=""text-primary opacity-75-hover fs-6 fw-bold"" onclick=""OpenUpdateProccess(this, ${resultController}, ${Number}, '${Description}')""> ${Number}</a>`,
                                Description]).draw(false);
                            }
                        });
                    }
                }
                else {
                    SystemServerError()
       ");
                WriteLiteral("         }\r\n            }).fail(function (error) {\r\n                swalErrorServer()\r\n            });\r\n        }\r\n    </script>\r\n\r\n");
                WriteLiteral(@"    <script>
        function OpenUpdateProccess(UpdateRowX, ProccessId, Numero, Descripcion) {
            $('#UpdateProccessModal').modal('show')

            UpdateRowProccess = UpdateRowX;
            $(""#IdUpdateProces"").val(ProccessId)
            $(""#UpNumberProces"").val(Numero)
            $(""#UpDescProccess"").val(Descripcion)
        }

        function UpdateProccess() {

            var ProccessId = $(""#IdUpdateProces"").val();
            var Numero = $(""#UpNumberProces"").val();
            var Description = $(""#UpDescProccess"").val();

            $.ajax({
                url: """);
#nullable restore
#line 1430 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                 Write(Url.Action("UpdateProccess","CP_CorrectiveAction"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                data: {
                    ProccessId: ProccessId,
                    Numero: Numero,
                    Description: Description,
                    IdSeccion: IdSeccion
                },
                type: ""POST"",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader(""XSRF-TOKEN"",
                        $('input:hidden[name=""__RequestVerificationToken""]').val());
                },
            }).done(function (result) {
                if (result != null) {
                    if (result == 'Error') {
                        SystemServerError()
                    }
                    if (result == 'noSession') {
                        swalExpired()
                    }
                    else if (result == 'Sorry') {
                        swalNoAuthorized()
                    }
                    else if (result == 'NoPage') {
                        swalNoAuthorized()
                    }
                    el");
                WriteLiteral(@"se if (result == 'Exists') {
                        Swal.fire({
                            text: ""Sorry, There's one Cell with the same name, please try with diferent name."",
                            icon: ""warning"",
                            buttonsStyling: false,
                            allowEscapeKey: false,
                            allowOutsideClick: false,
                            confirmButtonText: ""Ok, got it!"",
                            customClass: {
                                confirmButton: ""btn font-weight-bold btn-light-primary""
                            }
                        }).then((result) => {
                            if (result.isConfirmed) {

                                $('#UpdateProccessModal').modal('hide');
                            }
                        });
                    }
                    else {
                        var tCell = $('#TablaProccess').DataTable();

                        var IdProccess = result;
");
                WriteLiteral(@"
                        Swal.fire({
                            text: ""The action has been successfully submitted!"",
                            icon: ""success"",
                            buttonsStyling: false,
                            allowEscapeKey: false,
                            allowOutsideClick: false,
                            confirmButtonText: ""Ok, got it!"",
                            customClass: {
                                confirmButton: ""btn btn-primary""
                            }
                        }).then((result) => {
                            if (result.isConfirmed) {

                                tCell.row($(UpdateRowProccess).parents('tr')).data([
                                    `<a class=""p-0 btn btn-sm  me-2"" onclick=""DeleteProccess(this, ${IdProccess})""><i class=""fas fa-times fs-3 text-danger""></i></a>`,
                                    `<a class=""text-primary opacity-75-hover fs-6 fw-bold"" onclick=""OpenUpdateProccess(this, ${IdProccess");
                WriteLiteral(@"}, ${Numero}, '${Description}')""> ${Numero}</a>`,
                                    Description]).draw();

                                  $('#UpdateProccessModal').modal('hide');
                            }
                        });
                    }

                }
                else {
                    SystemServerError()
                }
            }).fail(function (error) {
                swalErrorServer()
            });
        }
    </script>

");
                WriteLiteral(@"    <script>
        function DeleteProccess(DeleteRow, IdProccess) {
            Swal.fire({
                text: ""Are you sure to Delete the Solution?"",
                icon: ""question"",
                buttonsStyling: false,
                allowEscapeKey: false,
                allowOutsideClick: false,
                showCancelButton: true,
                closeOnCancel: true,
                confirmButtonText: ""Confirm"",
                cancelButtonText: 'Cancel',
                customClass: {
                    confirmButton: ""btn btn-primary"",
                    cancelButton: 'btn btn-danger'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: """);
#nullable restore
#line 1532 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Areas\Quality\Views\ControlPanel\CorrectiveActions.cshtml"
                         Write(Url.Action("DeleteProccess","CP_CorrectiveAction"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                        data: {
                            IdProccess: IdProccess,
                            IdSeccion: IdSeccion
                        },
                        type: ""POST"",
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader(""XSRF-TOKEN"",
                                $('input:hidden[name=""__RequestVerificationToken""]').val());
                        },
                    }).done(function (result) {
                        if (result != null) {

                            if (result == 'Error') {
                                SystemServerError()
                            }
                            if (result == 'noSession') {
                                swalExpired()
                            }
                            else if (result == 'Sorry') {
                                swalNoAuthorized()
                            }
                            else if (result == 'NoPage') {
   ");
                WriteLiteral(@"                             swalNoAuthorized()
                            }
                            else 
                            {

                                Swal.fire({
                                    text: ""The action has been successfully submitted!"",
                                    icon: ""success"",
                                    buttonsStyling: false,
                                    allowEscapeKey: false,
                                    allowOutsideClick: false,
                                    confirmButtonText: ""Ok, got it!"",
                                    customClass: {
                                        confirmButton: ""btn btn-primary""
                                    }
                                }).then((result) => {
                                    if (result.isConfirmed)
                                    {
                                        var table = $('#TablaProccess').DataTable();
                           ");
                WriteLiteral(@"             table.row($(DeleteRow).parents('tr')).remove().draw();
                                    }
                                });
                            }
                        }
                        else {
                            SystemServerError()
                        }
                    }).fail(function (error) {
                        swalErrorServer()
                    });

                }
                else {
                    $('#Select-' + Usuario).val(idGlobal).trigger('change');
                    $('.swal2-container').css('display', 'none');
                }
            });

        }
    </script>

");
                WriteLiteral(@"    <script>
        //Form Validation
        const HRForm = document.getElementById('IdFormSendProccess');
        var validator = FormValidation.formValidation(
            HRForm,
            {
                fields: {
                    NumberProccess: {
                        validators: {
                            notEmpty: {
                                message: 'Number is required!'
                            }
                        }
                    },
                    DescProccess: {
                        validators: {
                            notEmpty: {
                                message: 'Description is required!'
                            }
                        }
                    },

                },

                plugins: { //Learn more: https://formvalidation.io/guide/plugins
                    trigger: new FormValidation.plugins.Trigger(),
                    bootstrap: new FormValidation.plugins.Bootstrap5({
              ");
                WriteLiteral(@"          rowSelector: '.fv-row',
                        eleInvalidClass: '',
                        eleValidClass: ''
                    })
                }
            }
        );

        const submitButton = document.getElementById('SendNewProccess');

        submitButton.addEventListener('click', function (e) {
            e.preventDefault();

            if (validator) {
                validator.validate().then(function (status) {
                    if (status == 'Valid') {

                        submitButton.setAttribute('data-kt-indicator', 'on');
                        submitButton.disabled = true;
                        setTimeout(function () {
                            submitButton.removeAttribute('data-kt-indicator');
                            submitButton.disabled = false;
                            AddNewProccess()
                        }, 900);
                    }
                    else {
                        submitButton.setAttribute('data-kt");
                WriteLiteral(@"-indicator', 'on');
                        submitButton.disabled = true;
                        setTimeout(function () {
                            submitButton.removeAttribute('data-kt-indicator');
                            submitButton.disabled = false;

                        }, 100);

                    }
                });
            }
        });
    </script>

");
                WriteLiteral(@"    <script>
        //Form Validation
        const UpProccesForm = document.getElementById('FormUpProccess');
        var validatorUpProcces = FormValidation.formValidation(
            UpProccesForm,
            {
                fields: {
                    UpNumberProces: {
                        validators: {
                            notEmpty: {
                                message: 'Number is required!'
                            }
                        }
                    },
                    UpDescProccess: {
                        validators: {
                            notEmpty: {
                                message: 'Description is required!'
                            }
                        }
                    },

                },

                plugins: { //Learn more: https://formvalidation.io/guide/plugins
                    trigger: new FormValidation.plugins.Trigger(),
                    bootstrap: new FormValidation.plugins.Bootstr");
                WriteLiteral(@"ap5({
                        rowSelector: '.fv-row',
                        eleInvalidClass: '',
                        eleValidClass: ''
                    })
                }
            }
        );

        const UpdateButtonProccess = document.getElementById('UpdateProccess');

        UpdateButtonProccess.addEventListener('click', function (e) {
            e.preventDefault();

            if (validatorUpProcces) {
                validatorUpProcces.validate().then(function (status) {
                    if (status == 'Valid') {

                        UpdateButtonProccess.setAttribute('data-kt-indicator', 'on');
                        UpdateButtonProccess.disabled = true;
                        setTimeout(function () {
                            UpdateButtonProccess.removeAttribute('data-kt-indicator');
                            UpdateButtonProccess.disabled = false;

                            UpdateProccess()

                        }, 900);
                   ");
                WriteLiteral(@" }
                    else {
                        UpdateButtonProccess.setAttribute('data-kt-indicator', 'on');
                        UpdateButtonProccess.disabled = true;
                        setTimeout(function () {
                            UpdateButtonProccess.removeAttribute('data-kt-indicator');
                            UpdateButtonProccess.disabled = false;

                        }, 100);

                    }
                });
            }
        });
    </script>

    ");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<CorrectiveAction_CP_ModelView> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
