#pragma checksum "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Pages\Account\StandarizationJS.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0fc71f9e90988a59eb01fdcc95d4a00ffca00cac"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Pages_Account_StandarizationJS), @"mvc.1.0.razor-page", @"/Pages/Account/StandarizationJS.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Pages\_ViewImports.cshtml"
using FactoryPlatform;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Pages\_ViewImports.cshtml"
using FactoryPlatform.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemMetadataAttribute("RouteTemplate", "/StandarizationJS")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0fc71f9e90988a59eb01fdcc95d4a00ffca00cac", @"/Pages/Account/StandarizationJS.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"92eed42c8c60a96099311cfba92bc50cf1c31e4d", @"/Pages/_ViewImports.cshtml")]
    #nullable restore
    public class Pages_Account_StandarizationJS : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\10-Ene-2023\FactoryPlatform\FactoryPlatform\Pages\Account\StandarizationJS.cshtml"
  
    ViewData["Title"] = " Standarization JS";


#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"post d-flex flex-column-fluid\" id=\"kt_post\">\r\n    <div id=\"kt_content_container\" class=\"container-fluid\">\r\n        <!--begin::Accordion-->\r\n        <div class=\"accordion\" id=\"kt_accordion_1\">\r\n");
            WriteLiteral(@"            <div class=""accordion-item"">
                <h1 class=""accordion-header"" id=""kt_accordion_1_header_1"">
                    <button class=""accordion-button fs-4 fw-semibold collapsed"" type=""button"" data-bs-toggle=""collapse"" data-bs-target=""#kt_accordion_1_body_1"" aria-expanded=""false"" aria-controls=""kt_accordion_1_body_1"">
                       AJAX 
                    </button>
                </h1>
                <div id=""kt_accordion_1_body_1"" class=""accordion-collapse collapse"" aria-labelledby=""kt_accordion_1_header_1"" data-bs-parent=""#kt_accordion_1"">
                    <div class=""accordion-body"">
                        <div class=""py-5"">This is the ajax structure that used in the new FactoryPlatform for use you need to put JQuery like MND at the end of the Layout.</div>
                        <!--begin::Code-->
                        <div class=""py-5"">
                            <div class=""highlight"">
                                <button class=""highlight-copy btn"" da");
            WriteLiteral(@"ta-bs-toggle=""tooltip"" title=""Copy code"">copy</button>
                                <div class=""highlight-code"">
                                    <pre class=""language-javascript"">
                                    <code class=""language-javascript"">
                                        //Write Arroba before to URL
                                           $.ajax({
                                            url: ""Url.Action(""Action"",""Controlador"")"",
                                            data: {
                                               variable:variable,
                                            },
                                            type: ""POST"",
                                            beforeSend: function (xhr) 
                                            {
                                                xhr.setRequestHeader(""XSRF-TOKEN"",
                                                $('input:hidden[name=""__RequestVerificationToken""]').val());
           ");
            WriteLiteral(@"                                 },
                                            }).done(function(result)
                                            {
                                                if(result != null)
                                                {
                                                    if (result == 'Error') {
                                                        SystemServerError()
                                                    }
                                                    else if (result == 'noSession') 
                                                    {
                                                        swalExpired()
                                                    }
                                                    else if (result == 'Sorry') 
                                                    {
                                                        swalNoAuthorized()
                                                    }
      ");
            WriteLiteral(@"                                              else if (result == 'NoPage') 
                                                    {
                                                        swalNoAuthorized()
                                                    }
                                                }
                                                else
                                                {
                                                     SystemServerError()
                                                }
                                            }).fail(function (error) 
                                            {
                                                swalErrorServer()
                                            });
                                    </code>
                                </pre>
                                </div>
                            </div>
                        </div>
                        <!--end::Code-->
           ");
            WriteLiteral("         </div>\r\n                </div>\r\n            </div>\r\n");
            WriteLiteral(@"            <div class=""accordion-item"">
                <h1 class=""accordion-header"" id=""kt_accordion_1_header_2"">
                    <button class=""accordion-button fs-4 fw-semibold collapsed"" type=""button"" data-bs-toggle=""collapse"" data-bs-target=""#kt_accordion_1_body_2"" aria-expanded=""false"" aria-controls=""kt_accordion_1_body_2"">
                       Validation of File Types
                    </button>
                </h1>
                <div id=""kt_accordion_1_body_2"" class=""accordion-collapse collapse"" aria-labelledby=""kt_accordion_1_header_2"" data-bs-parent=""#kt_accordion_1"">
                    <div class=""accordion-body"">
                        <div class=""py-5"">With this we can choce wath king of file upload.</div>
                        <!--begin::Code-->
                        <div class=""py-2"">
                            <div class=""highlight"">
                                <button class=""highlight-copy btn"" data-bs-toggle=""tooltip"" title=""Copy code"">copy</button>
      ");
            WriteLiteral(@"                          <div class=""highlight-code"">
                                    <pre class=""language-javascript"">
                                    <code class=""language-javascript"">
                                        var analysis =  document.getElementById(""FileAC"").files;

                                        var files = /(.*?)\.(xls|xlsx|csv|docx|doc|ppt|pptx|pdf)$/;
                                        var formData = new FormData();

                                        if (analysis[0].name.match(files)) 
                                        {
                                            formData.append(""FileAC"", analysis[0]);
                                        }

                                    </code>
                                </pre>
                                </div>
                            </div>
                        </div>
                        <!--end::Code-->
                    </div>
                </div>
            <");
            WriteLiteral("/div>\r\n");
            WriteLiteral(@"            <div class=""accordion-item"">
                <h1 class=""accordion-header"" id=""kt_accordion_1_header_3"">
                    <button class=""accordion-button fs-4 fw-semibold collapsed"" type=""button"" data-bs-toggle=""collapse"" data-bs-target=""#kt_accordion_1_body_3"" aria-expanded=""false"" aria-controls=""kt_accordion_1_body_3"">
                        System Alerts and SwalAlert
                    </button>
                </h1>
                <div id=""kt_accordion_1_body_3"" class=""accordion-collapse collapse"" aria-labelledby=""kt_accordion_1_header_3"" data-bs-parent=""#kt_accordion_1"">
                    <div class=""accordion-body"">
                        <div class=""py-5"">Alert used in diferents Ajax for return results.</div>
                        <!--begin::Code-->
                        <div class=""py-2"">
                            <div class=""highlight"">
                                <button class=""highlight-copy btn"" data-bs-toggle=""tooltip"" title=""Copy code"">copy</button>
  ");
            WriteLiteral(@"                              <div class=""highlight-code"">
                                    <pre class=""language-javascript"">
                                    <code class=""language-javascript"">
                                           // This swal alert is used when the session was expired
                                           swalExpired()

                                           //This alert is used when the users no have the page or subsection linked
                                           swalNoAuthorized()

                                           //Used for the errors of the sytem server
                                           SystemServerError()  

                                           //When some was saved corretly
                                           Swal.fire({
                                                text: ""The action has been successfully submitted!"",
                                                icon: ""success"",
                         ");
            WriteLiteral(@"                       buttonsStyling: false,
                                                allowEscapeKey: false,
                                                allowOutsideClick: false,
                                                confirmButtonText: ""Ok, got it!"",
                                                customClass: {
                                                    confirmButton: ""btn btn-primary""
                                                }
                                            }).then((result) => {
                                                if (result.isConfirmed) 
                                                {
                                                    //Line for reload the page
                                                }
                                            }); 


                                            swal.fire({
                                                text: ""Sorry, looks like there are some empty inputs detected, p");
            WriteLiteral(@"lease try again."",
                                                icon: ""error"",
                                                buttonsStyling: false,
                                                confirmButtonText: ""Ok, got it!"",
                                                customClass: {
                                                    confirmButton: ""btn font-weight-bold btn-light-primary""
                                                }
                                            });

                                    </code>
                                </pre>
                                </div>
                            </div>
                        </div>
                        <!--end::Code-->
                     
                    </div>
                </div>
            </div>
");
            WriteLiteral(@"            <div class=""accordion-item"">
                <h1 class=""accordion-header"" id=""kt_accordion_1_header_4"">
                    <button class=""accordion-button fs-4 fw-semibold collapsed"" type=""button"" data-bs-toggle=""collapse"" data-bs-target=""#kt_accordion_1_body_4"" aria-expanded=""false"" aria-controls=""kt_accordion_1_body_4"">
                        Helpers
                    </button>
                </h1>
                <div id=""kt_accordion_1_body_4"" class=""accordion-collapse collapse"" aria-labelledby=""kt_accordion_1_header_4"" data-bs-parent=""#kt_accordion_1"">
                    <div class=""accordion-body"">
                        <div class=""py-5"">...</div>
                        <!--begin::Code-->
                        <div class=""py-2"">
                            <div class=""highlight"">
                                <button class=""highlight-copy btn"" data-bs-toggle=""tooltip"" title=""Copy code"">copy</button>
                                <div class=""highlight-code"">
     ");
            WriteLiteral(@"                               <pre class=""language-javascript"">
                                    <code class=""language-javascript"">
                                        
                                        <script>
                                            //Colapsa el ASIDE MENU este se utiliza cuando un reporte tiene mucha columnas permite que se muestre en fullscreen
                                            $(document).ready(function () {
                                                $(""#kt_body"").attr(""data-kt-aside-minimize"", ""on"");
                                            })

                                            //Permite ocultar  un elemento en el ejemplo oculta un botton seteando el atributo Hidden
                                            document.getElementById(""RevBtnPdf"").setAttribute(""hidden"", ""hidden"");

                                            //Con esto puedes ocultar un bloque de codigo por medio de la clase nativa de metronic: d-none
            ");
            WriteLiteral(@"                                var reportModel = document.getElementById(""hideDataTable"");
                                            reportModel.classList.add(""d-none"");
                                            reportModel.classList.remove(""d-none"");
                                            //============================================================================================

                                            //Esto permite seleccionar el valor del opcion que se le pase por el atributo data-selected
                                            document.querySelectorAll('[data-selected]').forEach(e => { e.value = e.dataset.selected });

                                            <select id=""Estacion"" name=""Estacion"" data-selected=""Model.IdEstacion"" class=""form-select form-select-sm form-select p-3 fs-8"" data-control=""select2"" data-placeholder=""-- All Stations--"" data-allow-clear=""true"" >
                                            <option></option>
                        ");
            WriteLiteral(@"                        foreach (var item in Model.Quality_Workstations)
                                                {
                                                <option value=""item.Value""> item.Text</option>
                                                }
                                            </select>
                                            //============================================================================================

                                            //Permite asignar un valor a un Select desde un json con su descripcion
                                            $(""#IdSourceReviewUpdate option:contains("" + obj.InfoBasicaModal.Sources + "")"").attr('selected', true).trigger('change');
                                            //============================================================================================

                                            //================= DATA TABLE SCRIP =================================

           ");
            WriteLiteral(@"                                 //Agregar datos a data table desde json,

                                            //1.- Instanciamos datatable
                                            //2.- Limpiamos la tabla de los datos que tiene actualmente
                                            //3.-  Recorremos un for sobre el objeto json que trae los datos desde el backen y se iran agregreagando de 1 x 1.
                                            var obj = JSON.parse(result);

                                            var tablaModel = $('#TablaModels').DataTable();

                                            tablaModel.clear().draw();

                                            if (obj.length > 0) {

                                            for (var i = 0; i < obj.length; i++) 
                                            {
                                                tablaModel.row.add(
                                                [
                                           ");
            WriteLiteral(@"         `<a class=""p-0 btn btn-sm  me-2"" onclick=""DeleteModel(this, ${obj[i].ID_Modelo})""><i class=""fas fa-times fs-3 text-danger""></i></a>`,
                                                    `<a class=""text-primary opacity-75-hover fs-6 fw-bold"" onclick=""OpenUpdateModel(this, '${obj[i].Modelo}')""> ${obj[i].Modelo}</a>`,
                                                    obj[i].Descripcion,
                                                    obj[i].VegeCode,
                                                    obj[i].FechaRegistro,
                                                    obj[i].UsuarioRegistro,
                                                ]).draw(false);
                                            }

                                            //Para borran se envia el this en una funcion se toma y se hace el delete de la columna
                                            `<a class=""p-0 btn btn-sm  me-2"" onclick=""DeleteModel(this, ${obj[i].ID_Modelo})""><i class=""fas fa-times fs-3 ");
            WriteLiteral(@"text-danger""></i></a>`,
                                            function DeleteModel(DeleteRow)
                                            {
                                                var table = $('#TablaModels').DataTable();
                                                table.row($(DeleteRow).parents('tr')).remove().draw();
                                            }

                                            //Para actulizar es similar al delete le mandamos el this en la funcion 
                                            tCell.row($(UpdateRowCell).parents('tr')).data([
                                                `<a class=""p-0 btn btn-sm  me-2"" onclick=""UpdateModel(this, ${IdCell})""><i class=""fas fa-times fs-3 text-danger""></i></a>`,
                                                `<a class=""text-primary opacity-75-hover fs-6 fw-bold"" onclick=""OpenUpdateCell(this, ${IdCell}, '${Cell}')""> ${Cell}</a>`
                                            ]).draw();

                ");
            WriteLiteral(@"                        </script>
                                    </code>
                                </pre>
                                </div>
                            </div>
                        </div>
                        <!--end::Code-->
                    </div>
                </div>
            </div>
        
        </div>
        <!--end::Accordion-->
    </div>
</div>
");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Pages_Account_StandarizationJS> Html { get; private set; } = default!;
        #nullable disable
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Pages_Account_StandarizationJS> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Pages_Account_StandarizationJS>)PageContext?.ViewData;
        public Pages_Account_StandarizationJS Model => ViewData.Model;
    }
}
#pragma warning restore 1591
