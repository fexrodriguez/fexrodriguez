@model ItWorkOrdersModel

<div class="card-body">
    <form id="ItWorkordersForm" asp-area="ServiceNow" asp-controller="Home" asp-action="CreateWorkOrders" method="post" class="form">
        <div class="card-body p-9">
            <div class="row mb-6">
                <label class="col-lg-3 col-form-label required fw-bold fs-6">Class: </label>
                <div class="col-lg-3 fv-row">
                    <select id="ClassIT" name="ClassIT" onchange="clearFormIT()" class="form-select form-select-sm form-select p-3 fs-8" data-control="select2" data-placeholder="-- Select an option --">
                        <option></option>
                        @foreach (var item in Model.Services_now_WorkOrders_Class)
                        {
                            <option value="@item.ID_Clase">@item.Clase</option>
                        }
                    </select>
                </div>
            </div>
            <div class="row mb-6">
                <label class="col-lg-3 col-form-label required fw-bold fs-6">WorkStation</label>
                <div class="col-lg-3 fv-row">
                    <select id="WorkStationIT" name="WorkStationIT" onchange="readDataIT(this.value, @ViewData["MenuId"])" class="form-select form-select-sm form-select p-3 fs-8" data-control="select2" data-placeholder="-- Select an option --">
                        <option></option>
                        @foreach (var item in Model.Production_Stations)
                        {
                            <option value="@item.ID_Estacion">@item.Descripcion</option>
                        }
                    </select>
                </div>
            </div>
            <div class="row mb-6">
                <label class="col-lg-3 col-form-label  fw-bold fs-6">Department</label>
                <div class="col-lg-3 fv-row">
                    <select id="DepIT" name="DepIT" class="form-select form-select-sm form-select-solid p-3 fs-8" data-control="select2" data-placeholder="-" disabled>
                        <option></option>
                    </select>
                </div>
            </div>
            <div class="row mb-6">
                <label class="col-lg-3 col-form-label fw-bold fs-6">Plant</label>
                <div class="col-lg-3 fv-row">
                    <select id="PlantIT" name="PlantIT" class="form-select form-select-sm form-select-solid p-3 fs-8" data-control="select2" data-placeholder="-" disabled>
                        <option></option>
                    </select>
                </div>
            </div>
            <div class="row mb-6">
                <label class="col-lg-3 col-form-label required fw-bold fs-6">Equipment / Reference: </label>
                <div class="col-lg-3 fv-row">
                    <select id="HardwareIT" name="HardwareIT" class="form-select form-select-sm form-select p-3 fs-8" data-control="select2" data-placeholder="-- Select an option --" data-allow-clear="true">
                        <option></option>
                    </select>
                </div>
            </div>
            <div class="row mb-6">
                <label class="col-lg-3 col-form-label required fw-bold fs-6">Comments: </label>
                <div class="col-lg-9 fv-row">
                    <textarea id="CommentIT" name="CommentIT" class="form-control" rows="4" maxlength="500" data-kt-autosize="true"></textarea>
                </div>
            </div>
            <div class="row mt-12">
                <div class="col-md-9 offset-md-3">
                    <button type="button" id="itbutton_submit" class="btn btn-primary p-3 fs-7 me-3">
                        <span class="indicator-label"><i class="fas fa-save"></i>Save</span>
                        <span class="indicator-progress">
                            Please wait...
                            <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                        </span>
                    </button>
                </div>
            </div>
        </div>
    </form>
</div>

@if (Model != null)
{
    <script>
        $('#CommentIT').maxlength({
            threshold: 500,
            warningClass: "badge badge-danger",
            limitReachedClass: "badge badge-success",
            separator: ' of ',
            preText: 'You have ',
            postText: ' chars remaining.',
            validate: true
        });

        //-----------------------------------------------------------------------------------------------------
        function readDataIT(station, IdMenuService) {
            if (station != "") {
                $.ajax({

                    url: "@Url.Action("WorkOrderComboData","ServiceMenu")",
                    type: "post",
                    data: { station: station, IdMenuService: IdMenuService },
                    beforeSend: function(xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                            $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                })
                    .done(function(result) {
                        if (result != null) {
                            if (result == 'Error') {
                                SystemServerError()
                            }
                            if (result == 'noSession') {
                                swalExpired()
                            }
                            else if (result == 'Sorry') {
                                swalNoAuthorized()
                            }
                            else if (result == 'NoPage') {
                                swalNoAuthorized()
                            }
                            else {
                                var obj = JSON.parse(result);

                                var pd1 = obj.Production_Departments[0].ID_Departamento;
                                var pd2 = obj.Production_Departments[0].Descripcion;

                                $('#DepIT').empty().trigger("change");
                                var newDep = new Option(pd2, pd1, false, false);
                                $('#DepIT').append(newDep).val(pd1).trigger('change');

                                //----------------------------------------------------------

                                var sf1 = obj.Services_Factories[0].ID_Planta;
                                var sf2 = obj.Services_Factories[0].Descripcion;

                                $('#PlantIT').empty().trigger("change");
                                var newPlant = new Option(sf2, sf1, false, false);
                                $('#PlantIT').append(newPlant).val(sf1).trigger('change');

                                //-------------------------------------------------------------------
                                $('#HardwareIT').empty().trigger("change");

                                for (i = 0; i < obj.ITSystems_HardwareReferences.length; i++) {
                                    var newHardware = new Option(obj.ITSystems_HardwareReferences[i].DescripcionReferencia, obj.ITSystems_HardwareReferences[i].ID_Referencia, false, false);
                                    $('#HardwareIT').append(newHardware).trigger('change');
                                    $('#HardwareIT').val(null).trigger('change');
                                }

                                if ($('#ClassIT').val() != 25) {
                                    var newHardwareGen = new Option("MX-EQUIPO-GENERAL", 0, false, false);
                                    $('#HardwareIT').append(newHardwareGen).trigger('change');
                                    $('#HardwareIT').val(null).trigger('change');
                                }
                            }
                        }
                        else {
                            SystemServerError()
                        }
                    })
                    .fail(function(xhr, status, error) {
                        swalErrorServer()
                    })
            }
        }

        //---------------------------------------------------------------------------------------------------------
        function clearFormIT() {
            $('#WorkStationIT').val(null).trigger('change');
            $('#DepIT').empty().trigger("change");
            $('#PlantIT').empty().trigger("change");
            $('#HardwareIT').empty().trigger("change");
            $("textarea").removeClass("is-valid");
        }

        function sendFormIT() {
            var classId = $('#ClassIT').val();
            var workStationId = $('#WorkStationIT').val();
            var departamentId = $('#DepIT').val();
            var plantId = $('#PlantIT').val();
            var hardwareId = $('#HardwareIT').val();
            var commentStr = $('#CommentIT').val();
            var IdMenuService = '@ViewData["MenuId"]';

            $.ajax({

                url: "@Url.Action("CreateWorkOrders","ServiceMenu")",
                type: "post",
                data:
                {
                    classId: classId,
                    workStationId: workStationId,
                    departamentId: departamentId,
                    plantId: plantId,
                    hardwareId: hardwareId,
                    commentStr: commentStr,
                    IdMenuService: IdMenuService
                }, beforeSend: function(xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
            })
                .done(function(result) {
                    if (result != null) {
                        if (result == 'noSession') {
                            swalExpired()
                        }
                        else if (result == 'Sorry') {
                            swalNoAuthorized()
                        }
                        else if (result == "correct") {
                            
                            Swal.fire({
                                text: "IT Work Order has been successfully submitted!",
                                icon: "success",
                                buttonsStyling: false,
                                confirmButtonText: "Ok, got it!",
                                customClass: {
                                    confirmButton: "btn btn-primary"
                                }
                            });


                            $('#ClassIT').val(null).trigger('change');
                            $('#CommentIT').val(null);
                            clearFormIT();
                        }
                        else {
                            toastr.error("An error occurred on the server, please try again later!");
                        }

                    }
                    else {
                        toastr.error("An error occurred on the server, please try again later!");
                    }
                })
                .fail(function(xhr, status, error) {
                    swalErrorServer()
                })
        }
    </script>

     <script>
        const ItForm = document.getElementById('ItWorkordersForm');
        var validator = FormValidation.formValidation(
            ItForm,
                    {
                        fields: {
                            'ClassIT': {
                                validators: {
                                    notEmpty: {
                                        message: 'Class is required'
                                    }
                                }
                            },
                            'WorkStationIT': {
                                validators: {
                                    notEmpty: {
                                        message: 'WorkStation is required'
                                    }
                                }
                            },
                            'HardwareIT': {
                                validators: {
                                    notEmpty: {
                                        message: 'Plant is required'
                                    }
                                }
                            },
                            'CommentIT': {
                                validators: {
                                    notEmpty: {
                                        message: 'Comment is required'
                                    }
                                }
                            },

                        },

                        plugins: { //Learn more: https://formvalidation.io/guide/plugins
                            trigger: new FormValidation.plugins.Trigger(),
                            bootstrap: new FormValidation.plugins.Bootstrap5({
                                rowSelector: '.fv-row',
                                eleInvalidClass: '',
                                 eleValidClass: ''
                            })
                        }
                    }
        );

                $(ItForm.querySelector('[name="ClassIT"]')).on('change', function() {
                    validator.revalidateField('ClassIT');
                }); 
                $(ItForm.querySelector('[name="WorkStationIT"]')).on('change', function() {
                    validator.revalidateField('WorkStationIT');
                }); 
                $(ItForm.querySelector('[name="HardwareIT"]')).on('change', function() {
                    validator.revalidateField('HardwareIT');
                }); 

        // Submit button handler
        const submitButton = document.getElementById('itbutton_submit');
        
        submitButton.addEventListener('click', function(e) {
            // Prevent default button action
            e.preventDefault();

            // Validate form before submit
            if (validator) {
                validator.validate().then(function(status) {
                     if (status == 'Valid') {
                         
                         submitButton.setAttribute('data-kt-indicator', 'on');
                        submitButton.disabled = true;
                        setTimeout(function () {
                        submitButton.removeAttribute('data-kt-indicator');
                        submitButton.disabled = false;
                        
                            sendFormIT()

                        }, 900);
                         
                        }
                        else {

                          
                        submitButton.setAttribute('data-kt-indicator', 'on');
                        submitButton.disabled = true;
                        setTimeout(function () {
                        submitButton.removeAttribute('data-kt-indicator');
                        submitButton.disabled = false;
                        
                          swal.fire({
                                text: "Sorry, looks like there are some empty inputs detected, please try again.",
                                icon: "error",
                                buttonsStyling: false,
                                confirmButtonText: "Ok, got it!",
                                customClass: {
                                    confirmButton: "btn font-weight-bold btn-light-primary"
                                }
                            });

                        }, 100);

                        }
                });
            }
        });
    </script>
}
