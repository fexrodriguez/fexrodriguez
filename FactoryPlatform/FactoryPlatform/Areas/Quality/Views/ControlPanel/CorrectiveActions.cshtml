@model CorrectiveAction_CP_ModelView
@{
     ViewData["Title"] = ViewData["Titulo"];
}

<div class="post d-flex flex-column-fluid" id="kt_post">
    <div id="kt_content_container" class="container-fluid">
        <div id="kt_block">
            <div class="card mb-5">
                <div class="card-body p-5 mb-0" id="BlockPantalla">

                    <input type="hidden" name="SeccionId" id="IdSeccion" value="@Model.IdSeccion" />
                    <input type="hidden" name="Tipo" id="Tipo" value="@Model.Tipo" />
                    <div class="mb-5 hover-scroll-x">
                        <div class="d-grid">
                            <ul class="nav nav-tabs flex-nowrap text-nowrap">
                                <li class="nav-item">
                                    <a class="nav-link btn btn-active-light btn-color-gray-600 btn-active-color-primary rounded-bottom-0 active" data-bs-toggle="tab" href="#kt_tab_pane_1">Responsibles</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link btn btn-active-light btn-color-gray-600 btn-active-color-primary rounded-bottom-0" data-bs-toggle="tab" href="#kt_tab_pane_2">Responsibles by Management</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link btn btn-active-light btn-color-gray-600 btn-active-color-primary rounded-bottom-0" data-bs-toggle="tab" href="#kt_tab_pane_3">Closed By</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link btn btn-active-light btn-color-gray-600 btn-active-color-primary rounded-bottom-0" data-bs-toggle="tab" href="#kt_tab_pane_4">Sources</a>
                                </li>
                                <li class="nav-item">
                                    <a  class="nav-link btn btn-active-light btn-color-gray-600 btn-active-color-primary rounded-bottom-0" data-bs-toggle="tab" href="#kt_tab_pane_5">Solutions types</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link btn btn-active-light btn-color-gray-600 btn-active-color-primary rounded-bottom-0" data-bs-toggle="tab" href="#kt_tab_pane_6">Proccess</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="tab-content" id="myTabContent">
                        <div class="tab-pane fade show active" id="kt_tab_pane_1" role="tabpanel">
                            <div class="row mb-3">
                                <div class="col-lg-3 fv-row mb-4">
                                    <label class="fs-6 form-label fw-bolder text-dark">Select a Responsable:</label>
                                    <div class="form-control p-0" style="height: 300px;  overflow-y: scroll;">
                                        <select id="IdResponsible" class="form-select form-select-solid" data-control="select2" data-close-on-select="false" data-placeholder="-- Select an option --" multiple="multiple" data-allow-clear="true" onfocus="true">
                                            @foreach (var item in Model.CA_Responsible_CP)
                                            {
                                                if (item.Seleccionado == 1)
                                                {
                                                    <option value="@item.ID_Usuario" selected>@item.Responsable</option>

                                                }
                                                else
                                                {
                                                    <option value="@item.ID_Usuario">@item.Responsable</option>
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-lg-3 fv-row  me-0">
                                    <button type="button" onclick="SendResponsible()" id="Search" class="btn btn-primary p-3 fs-8 me-3"><i class="fas fa-save"></i>Save</button>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="kt_tab_pane_2" role="tabpanel">
                            <div class="table-responsive">
                                <table class="table border table-rounded table-hover table-row-bordered gy-4 gs-7">
                                    <thead>
                                        <tr class="fw-bold fs-6 text-gray-800 text-uppercase ">
                                            <th class="align-middle min-w-10px">No. Employee</th>
                                            <th class="align-middle">Responsible</th>
                                            <th class="align-middle">Management</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.CA_ResponsiblesManagements_CP)
                                        {
                                            <tr>
                                                <td class="align-middle min-w-10px">@item.NoEmpleado</td>
                                                <td class="align-middle">@item.Empleado</td>
                                                <td class="align-middle">
                                                    <select id="Select-@item.UsuarioID" onchange="ChangeManager(this.value, @item.UsuarioID)" data-selected="@item.ID_Gerencia" class="form-select form-select-sm p-3 fs-8" data-control="select2" data-placeholder="-- Select an option --" data-allow-clear="true">
                                                        <option></option>
                                                        @foreach (var manage in Model.Managements)
                                                        {
                                                            <option value="@manage.Value">@manage.Text</option>
                                                        }
                                                    </select>
                                                </td>
                                            </tr>
                                        }

                                    </tbody>
                                </table>
                            </div>

                        </div>
                        <div class="tab-pane fade" id="kt_tab_pane_3" role="tabpanel">
                            <div class="row mb-3">
                                <div class="col-lg-3 fv-row mb-4">
                                    <label class="fs-6 form-label fw-bolder text-dark">Select a Closer:</label>
                                    <div class="form-control p-0" style="height: 300px;  overflow-y: scroll;">
                                        <select id="IdClosers" class="form-select form-select-solid" data-control="select2" data-close-on-select="false" data-placeholder="-- Select an option --" multiple="multiple" data-allow-clear="true" onfocus="true">
                                            @foreach (var item in Model.CA_Responsible_Closers_CP)
                                            {
                                                if (item.Seleccionado == 1)
                                                {
                                                    <option value="@item.ID_Usuario" selected>@item.Responsable</option>

                                                }
                                                else
                                                {
                                                    <option value="@item.ID_Usuario">@item.Responsable</option>
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>

                            </div>
                            <div class="row mb-3">
                                <div class="col-lg-3 fv-row  me-0">
                                    <button type="button" onclick="SendClosers()" id="Search" class="btn btn-primary p-3 fs-8 me-3"><i class="fas fa-save"></i>Save</button>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="kt_tab_pane_4" role="tabpanel">
                            <div class="card card-p-0 card-flush">
                                <div class="card-header align-items-center py-5 gap-2 gap-md-5">
                                    <div class="card-title">
                                        <div class="d-flex align-items-center position-relative my-1">
                                            <span class="svg-icon svg-icon-1 position-absolute ms-4"><i class="fas fa-search"></i></span>
                                            <input type="text" data-kt-filter="search" class="form-control form-control-solid w-250px ps-13" placeholder="Search Report" />
                                        </div>
                                        <div id="TablaSourcesCA_export" class="d-none"></div>
                                    </div>
                                    <div class="card-toolbar flex-row-fluid justify-content-end gap-5">
                                        <button type="button" onclick="AddNewSources()" class="btn btn-success me-3">
                                            <i class="fas fa-plus"></i>New Sources
                                        </button>
                                        <button type="button" class="btn btn-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">
                                            <span class="svg-icon svg-icon-1 position-absolute ms-4"></span>
                                            <i class="fas fa-download"></i> Export Report
                                        </button>
                                        <div id="TablaSourcesCA_export_menu" class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-200px py-4" data-kt-menu="true">
                                            <div class="menu-item px-3">
                                                <a href="#" class="menu-link px-3" data-kt-export="excel">
                                                    Export as excel &nbsp;&nbsp; <i class="fas fa-file-excel text-success fs-3"></i>
                                                </a>
                                            </div>
                                            <div class="menu-item px-3">
                                                <a href="#" class="menu-link px-3" data-kt-export="csv">
                                                    Export as csv &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i class="fas fa-file-csv text-info fs-3"></i>
                                                </a>
                                            </div>
                                            <div class="menu-item px-3">
                                                <a href="#" class="menu-link px-3" data-kt-export="pdf">
                                                    Export as pdf &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i class="fas fa-file-pdf text-danger fs-3"></i>
                                                </a>
                                            </div>
                                        </div>
                                        <div id="TablaSourcesCA_buttons" class="d-none"></div>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <table id="TablaSourcesCA" class="table border table-rounded border-gray-400 table-hover table-row-bordered gy-4 gs-7">
                                        <thead>
                                            <tr class="p-2 fw-bold fs-6 text-gray-800 text-uppercase border-bottom border-gray-400 bg-gray-300">
                                                <th class="text-center border-end min-w-10px">DELETE</th>
                                                <th class="ps-3 min-w-1000px">SOURCES</th>
                                            </tr>
                                        </thead>
                                        <tbody id="IdTbody" class="fw-semibold text-gray-600">
                                            @foreach (var item in Model.Quality_CA_Sources)
                                            {
                                                <tr class="">
                                                    <td><a class="p-0 btn btn-sm  me-2" onclick="DeleteSources(this,@item.ID)"><i class="fas fa-times fs-3 text-danger"></i></a></td>
                                                    <td>@item.Text</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="kt_tab_pane_5" role="tabpanel" >
                            <div class="card card-p-0 card-flush">
                                <div class="card-header align-items-center py-5 gap-2 gap-md-5">
                                    <div class="card-title">
                                        <div class="d-flex align-items-center position-relative my-1">
                                            <span class="svg-icon svg-icon-1 position-absolute ms-4"><i class="fas fa-search"></i></span>
                                            <input type="text" data-kt-filter="Buscar" class="form-control form-control-solid w-250px ps-13" placeholder="Search" />
                                        </div>
                                        <div id="TablaSolutionTypes_export" class="d-none"></div>
                                    </div>
                                    <div class="card-toolbar flex-row-fluid justify-content-end gap-5">
                                        <button type="button" onclick="AddNewSolution()" class="btn btn-success me-3">
                                            <i class="fas fa-plus"></i>New Solution
                                        </button>
                                        <button type="button" class="btn btn-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">
                                            <span class="svg-icon svg-icon-1 position-absolute ms-4"></span>
                                            <i class="fas fa-download"></i> Export Report
                                        </button>
                                        <div id="TablaSolutionTypes_export_menu" class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-200px py-4" data-kt-menu="true">
                                            <div class="menu-item px-3">
                                                <a href="#" class="menu-link px-3" data-kt-export1="excel">
                                                    Export as excel &nbsp;&nbsp; <i class="fas fa-file-excel text-success fs-3"></i>
                                                </a>
                                            </div>
                                            <div class="menu-item px-3">
                                                <a href="#" class="menu-link px-3" data-kt-export1="csv">
                                                    Export as csv &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i class="fas fa-file-csv text-info fs-3"></i>
                                                </a>
                                            </div>
                                            <div class="menu-item px-3">
                                                <a href="#" class="menu-link px-3" data-kt-export1="pdf">
                                                    Export as pdf &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i class="fas fa-file-pdf text-danger fs-3"></i>
                                                </a>
                                            </div>
                                        </div>
                                        <div id="TablaSolutionTypes_buttons" class="d-none"></div>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <table id="TablaSolutionTypes" class="table border table-rounded border-gray-400 table-hover table-row-bordered gy-4 gs-7" >
                                        <thead>
                                            <tr class="p-2 fw-bold fs-6 text-gray-800 text-uppercase border-bottom border-gray-400 bg-gray-300">
                                                <th class="text-center border-end min-w-10px">DELETE</th>
                                                <th class="ps-3 min-w-1000px">Solutions</th>
                                            </tr>
                                        </thead>
                                        <tbody id="IdTbody" class="fw-semibold text-gray-600">
                                            @foreach (var item in Model.Quality_CA_TypeSolutions)
                                            {
                                                <tr class="">
                                                    <td><a class="p-0 btn btn-sm  me-2" onclick="DeleteSolution(this,@item.ID)"><i class="fas fa-times fs-3 text-danger"></i></a>
                                                </td>
                                                    <td>@item.Text</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="kt_tab_pane_6" role="tabpanel">
                            <div class="card card-p-0 card-flush">
                                <div class="card-header align-items-center py-5 gap-2 gap-md-5">
                                    <div class="card-title">
                                        <div class="d-flex align-items-center position-relative my-1">
                                            <span class="svg-icon svg-icon-1 position-absolute ms-4"><i class="fas fa-search"></i></span>
                                            <input type="text" data-kt-filter="BuscarProccess" class="form-control form-control-solid w-250px ps-13" placeholder="Search" />
                                        </div>
                                        <div id="TablaProccess_export" class="d-none"></div>
                                    </div>
                                    <div class="card-toolbar flex-row-fluid justify-content-end gap-5">
                                        <button type="button" class="btn btn-success me-3" data-bs-toggle="modal" data-bs-target="#NewProccessModal">
                                            <i class="fas fa-plus"></i>New Proccess
                                        </button>
                                        <button type="button" class="btn btn-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">
                                            <span class="svg-icon svg-icon-1 position-absolute ms-4"></span>
                                            <i class="fas fa-download"></i> Export Report
                                        </button>
                                        <div id="TablaProccess_export_menu" class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-200px py-4" data-kt-menu="true">
                                            <div class="menu-item px-3">
                                                <a href="#" class="menu-link px-3" data-kt-export2="excel">
                                                    Export as excel &nbsp;&nbsp; <i class="fas fa-file-excel text-success fs-3"></i>
                                                </a>
                                            </div>
                                            <div class="menu-item px-3">
                                                <a href="#" class="menu-link px-3" data-kt-export2="csv">
                                                    Export as csv &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i class="fas fa-file-csv text-info fs-3"></i>
                                                </a>
                                            </div>
                                            <div class="menu-item px-3">
                                                <a href="#" class="menu-link px-3" data-kt-export3="pdf">
                                                    Export as pdf &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i class="fas fa-file-pdf text-danger fs-3"></i>
                                                </a>
                                            </div>
                                        </div>
                                        <div id="TablaProccess_buttons" class="d-none"></div>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <table id="TablaProccess" class="table border table-rounded border-gray-400 table-hover table-row-bordered gy-4 gs-7">
                                        <thead>
                                            <tr class="p-2 fw-bold fs-6 text-gray-800 text-uppercase border-bottom border-gray-400 bg-gray-300">
                                                <th class="text-center border-end min-w-10px">DELETE</th>
                                                <th class="text-center border-end min-w-10px">Number</th>
                                                <th class="ps-3 min-w-1000px">Description</th>
                                            </tr>
                                        </thead>
                                        <tbody id="IdTbody" class="fw-semibold text-gray-600">
                                            @foreach (var item in Model.Quality_CA_Processes)
                                            {
                                                <tr class="">
                                                    <td>
                                                        <a class="p-0 btn btn-sm  me-2" onclick="DeleteProccess(this,@item.ID_Proceso)"><i class="fas fa-times fs-3 text-danger"></i></a>
                                                    </td>
                                                    <td>
                                                        <a class="text-primary opacity-75-hover fs-6 fw-bold" onclick="OpenUpdateProccess(this, @item.ID_Proceso, @item.Numero, '@item.Descripcion')"> @item.Numero</a>
                                                        </td>
                                                    <td>@item.Descripcion</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

@*Create new Proccess*@
<div class="modal fade" tabindex="-1" id="NewProccessModal" data-bs-keyboard="false" data-bs-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <h1 class="text-center">New Proccess</h1>
                <form id="IdFormSendProccess">
                    <div class="fv-row">
                        <label class="col-lg-3 col-form-label required fw-bold fs-6 mb-0">Number:</label>
                        <input type="text" id="NumberProccess" name="NumberProccess" class="form-control p-3 fs-7 mb-0" />
                    </div>
                    <div class="fv-row">
                        <label class="col-lg-3 col-form-label required fw-bold fs-6 mb-0">Description:</label>
                        <input type="text" id="DescProccess" name="DescProccess" class="form-control p-3 fs-7 mb-0" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light" data-bs-dismiss="modal">Close</button>
                <button id="SendNewProccess" type="button" class="btn btn-primary">
                    <span class="indicator-label">Save</span>
                    <span class="indicator-progress">
                        Please wait...<span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                    </span>
                </button>
            </div>
        </div>
    </div>
</div>

@*Update Proccess*@
<div class="modal fade" tabindex="-1" id="UpdateProccessModal" data-bs-keyboard="false" data-bs-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <h1 class="text-center">Update Proccess</h1>
                <form id="FormUpProccess">
                    <input type="hidden" id="IdUpdateProces" name="IdUpdateProces" />
                    <div class="fv-row">
                        <label class="col-lg-3 col-form-label required fw-bold fs-6 mb-0">Number:</label>
                        <input type="number" id="UpNumberProces" name="UpNumberProces" class="form-control p-3 fs-7 mb-0" />
                    </div>
                    <div class="fv-row">
                        <label class="col-lg-3 col-form-label required fw-bold fs-6 mb-0">Description:</label>
                        <input type="text" id="UpDescProccess" name="UpDescProccess" class="form-control p-3 fs-7 mb-0" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light" data-bs-dismiss="modal">Close</button>
                <button id="UpdateProccess" type="button" class="btn btn-primary">
                    <span class="indicator-label">Update</span>
                    <span class="indicator-progress">
                        Please wait...<span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                    </span>
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    
    @*Globales*@
    <script>
        document.querySelectorAll('[data-selected]').forEach(e => { e.value = e.dataset.selected });

        $(document).ready(function() {
            KTApp.init();
        });

        var IdSeccion = $("#IdSeccion").val();

        var UpdateRowProccess ="";
    </script>

    @*DataTable Sources  Library*@
    <script type="text/javascript">
        var KTDatatablesExample = function () {
            var table;
            var datatable;

            var initDatatable = function () {
                const tableRows = table.querySelectorAll('tbody tr');

                tableRows.forEach(row => {
                    const dateRow = row.querySelectorAll('td');
                });

                datatable = $(table).DataTable({
                    "info": true,
                    "order": [],
                    "pageLength": 25,
                   
                    "columns": [
                        {
                            className: "border-end border-gray-400 text-center min-w-10px",
                        },
                        {
                            className: "ps-3 border-gray-400 min-w-1000px",
                        }
                    ]
                });
            }

            // Hook export buttons
            var exportButtons = () => {
                const documentTitle = 'Sources_CorrectiveAction';
                var buttons = new $.fn.dataTable.Buttons(table, {
                    buttons: [
                        {
                            extend: 'copyHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'excelHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'csvHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'pdfHtml5',
                            title: documentTitle
                        }
                    ]
                }).container().appendTo($('#TablaSourcesCA_buttons'));

                const exportButtons = document.querySelectorAll('#TablaSourcesCA_export_menu [data-kt-export]');
                exportButtons.forEach(exportButton => {
                    exportButton.addEventListener('click', e => {
                        e.preventDefault();

                        const exportValue = e.target.getAttribute('data-kt-export');
                        const target = document.querySelector('.dt-buttons .buttons-' + exportValue);

                        target.click();
                    });
                });
            }

            var handleSearchDatatable = () => {
                const filterSearch = document.querySelector('[data-kt-filter="search"]');
                filterSearch.addEventListener('keyup', function (e) {
                    datatable.search(e.target.value).draw();
                });
            }

            return {
                init: function () {
                    table = document.querySelector('#TablaSourcesCA');

                    if (!table) {
                        return;
                    }

                    initDatatable();
                    exportButtons();
                    handleSearchDatatable();
                }
            };
        }();

        KTUtil.onDOMContentLoaded(function () {
            KTDatatablesExample.init();
        });
    </script>

    @*DataTable Solutions Types Library*@
    <script type="text/javascript">

        var KTDatatablesExample_Solution = function () {
            var table;
            var datatable;

            var initDatatable_Solution = function () {
                const tableRows = table.querySelectorAll('tbody tr');

                tableRows.forEach(row => {
                    const dateRow = row.querySelectorAll('td');
                });

                datatable = $(table).DataTable({
                    "info": true,
                    "order": [],
                    "pageLength": 10,
                    "columns": [
                        {
                            className: "border-end border-gray-400 text-center min-w-10px",
                        },
                        {
                            className: "ps-3 border-gray-400 min-w-1000px",
                        }
                    ]
                });
            }

            var exportButtons_Solution = () => {
                const documentTitle = 'Solutions_CorrectiveActions';
                var buttons = new $.fn.dataTable.Buttons(table, {
                    buttons: [
                        {
                            extend: 'copyHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'excelHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'csvHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'pdfHtml5',
                            title: documentTitle
                        }
                    ]
                }).container().appendTo($('#TablaSolutionTypes_buttons'));

                const exportButtons = document.querySelectorAll('#TablaSolutionTypes_export_menu [data-kt-export1]');
                exportButtons.forEach(exportButton => {
                    exportButton.addEventListener('click', e => {
                        e.preventDefault();

                        const exportValue = e.target.getAttribute('data-kt-export1');
                        var target = document.querySelector('div[id="TablaSolutionTypes_buttons"]');
                        target = target.querySelector('.buttons-' + exportValue);

                        target.click();
                    });
                });
            }

            var handleSearchDatatable_Solution = () => {
                const filterSearch = document.querySelector('[data-kt-filter="Buscar"]');
                filterSearch.addEventListener('keyup', function (e) {
                    datatable.search(e.target.value).draw();
                });
            }

            return {
                init: function () {
                    table = document.querySelector('#TablaSolutionTypes');

                    if (!table) {
                        return;
                    }

                    initDatatable_Solution();
                    exportButtons_Solution();
                    handleSearchDatatable_Solution();
                }
            };
        }();

        KTUtil.onDOMContentLoaded(function () {
            KTDatatablesExample_Solution.init();
        });

    </script>

    @*DataTable Proccesso Library*@
    <script type="text/javascript">

        var KTDatatablesExample_Proccess = function () {
            var table;
            var datatable;

            var initDatatable_Proccess = function () {
                const tableRows = table.querySelectorAll('tbody tr');

                tableRows.forEach(row => {
                    const dateRow = row.querySelectorAll('td');
                });

                datatable = $(table).DataTable({
                    "info": true,
                    "order": [],
                    "pageLength": 10,
                    "order": [[1, 'asc']],
                    "columns": [
                        {
                            className: "border-end border-gray-400 text-center min-w-10px",
                        },
                        {
                            className: "border-end border-gray-400 text-center min-w-10px",
                        },
                        {
                            className: "ps-3 border-gray-400 min-w-1000px",
                        }
                    ]
                });
            }

            var exportButtons_Proccess = () => {
                const documentTitle = 'Proccess_CorrectiveActions';
                var buttons = new $.fn.dataTable.Buttons(table, {
                    buttons: [
                        {
                            extend: 'copyHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'excelHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'csvHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'pdfHtml5',
                            title: documentTitle
                        }
                    ]
                }).container().appendTo($('#TablaProccess_buttons'));

                const exportButtons = document.querySelectorAll('#TablaProccess_export_menu [data-kt-export2]');
                exportButtons.forEach(exportButton => {
                    exportButton.addEventListener('click', e => {
                        e.preventDefault();

                        const exportValue = e.target.getAttribute('data-kt-export2');
                        var target = document.querySelector('div[id="TablaProccess_buttons"]');
                        target = target.querySelector('.buttons-' + exportValue);

                        target.click();
                    });
                });
            }

            var handleSearchDatatable_Proccess = () => {
                const filterSearch = document.querySelector('[data-kt-filter="BuscarProccess"]');
                filterSearch.addEventListener('keyup', function (e) {
                    datatable.search(e.target.value).draw();
                });
            }

            return {
                init: function () {
                    table = document.querySelector('#TablaProccess');

                    if (!table) {
                        return;
                    }

                    initDatatable_Proccess();
                    exportButtons_Proccess();
                    handleSearchDatatable_Proccess();
                }
            };
        }();

        KTUtil.onDOMContentLoaded(function () {
            KTDatatablesExample_Proccess.init();
        });

    </script>

    @*Save the responsibles*@
    <script>
        function SendResponsible() {
            var formData = new FormData();

            formData.append("Responsibles", $("#IdResponsible").val());
            formData.append("IdSeccion", IdSeccion);

            Swal.fire({
                text: "Are you sure to save the change?",
                icon: "question",
                buttonsStyling: false,
                allowEscapeKey: false,
                allowOutsideClick: false,
                showCancelButton: true,
                confirmButtonText: "Confirm",
                cancelButtonText: 'Cancel',
                customClass: {
                    confirmButton: "btn btn-primary",
                    cancelButton: 'btn btn-danger'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "@Url.Action("SaveResposibles","CP_CorrectiveAction")",
                        data: formData,
                        type: "POST",
                        processData: false,
                        contentType: false,
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader("XSRF-TOKEN",
                                $('input:hidden[name="__RequestVerificationToken"]').val());
                        },
                    }).done(function (result) {
                        if (result != null || result != "") 
                        {
                            if (result == 'Error') 
                            {
                               SystemServerError()
                            }
                            if (result == 'noSession') {
                                swalExpired()
                            }
                            else if (result == 'Sorry') {
                                swalNoAuthorized()
                            }
                            else if (result == 'NoPage') {
                                swalNoAuthorized()
                            }
                            else if (result == 'Success') {
                                Swal.fire({
                                    text: "The action has been successfully submitted!",
                                    icon: "success",
                                    buttonsStyling: false,
                                    allowEscapeKey: false,
                                    allowOutsideClick: false,
                                    confirmButtonText: "Ok, got it!",
                                    customClass: {
                                        confirmButton: "btn btn-primary"
                                    }
                                }).then((result) => {
                                    if (result.isConfirmed) {

                                    }
                                });
                            }
                        }
                        else {
                            SystemServerError()
                        }
                    }).fail(function (error) {
                        swalErrorServer()
                    });

                }
                else 
                {

                }
            });

        }
    </script>

    @*Update the UserManager*@
    <script>
        var idGlobal;
        $(document).ready(function () {
            $('select').on('select2:open', function (e) {
                var id = $(this).attr("id");
                //Obtener el name or id del elemento para realizar el proceso seleccionar o deseleccionar opciones.
                idGlobal = $('#' + id).val();
            });
        });


        function ChangeManager(IdManager, Usuario) {
            var formData = new FormData();

            Swal.fire({
                text: "Are you sure to save the change?",
                icon: "question",
                buttonsStyling: false,
                allowEscapeKey: false,
                allowOutsideClick: false,
                showCancelButton: true,
                closeOnCancel: true,
                confirmButtonText: "Confirm",
                cancelButtonText: 'Cancel',
                customClass: {
                    confirmButton: "btn btn-primary",
                    cancelButton: 'btn btn-danger'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "@Url.Action("SaveResponseByManager","CP_CorrectiveAction")",
                        data: {
                            IdManager: IdManager,
                            Usuario: Usuario,
                            IdSeccion: IdSeccion
                        },
                        type: "POST",
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader("XSRF-TOKEN",
                                $('input:hidden[name="__RequestVerificationToken"]').val());
                        },
                    }).done(function (result) {
                        if (result != null) {
                            if (result == 'Error') {
                                SystemServerError()
                            }
                            if (result == 'noSession') {
                                swalExpired()
                            }
                            else if (result == 'Sorry') {
                                swalNoAuthorized()
                            }
                            else if (result == 'NoPage') {
                                swalNoAuthorized()
                            }
                            else if (result == 'Success') {
                                Swal.fire({
                                    text: "The action has been successfully submitted!",
                                    icon: "success",
                                    buttonsStyling: false,
                                    allowEscapeKey: false,
                                    allowOutsideClick: false,
                                    confirmButtonText: "Ok, got it!",
                                    customClass: {
                                        confirmButton: "btn btn-primary"
                                    }
                                }).then((result) => {
                                    if (result.isConfirmed) {

                                    }
                                });
                            }
                        }
                        else {
                            SystemServerError()
                        }
                    }).fail(function (error) {
                        swalErrorServer()
                    });

                }
                else {
                    console.log(idGlobal)

                    $('#Select-' + Usuario).val(idGlobal).trigger('change');
                    $('.swal2-container').css('display', 'none');
                }
            });

        }
    </script>

    @*Save the Closers*@
    <script>
        function SendClosers() {
            var formData = new FormData();

            formData.append("Closers", $("#IdClosers").val());
            formData.append(IdSeccion, IdSeccion);

            Swal.fire({
                text: "Are you sure to save the change?",
                icon: "question",
                buttonsStyling: false,
                allowEscapeKey: false,
                allowOutsideClick: false,
                showCancelButton: true,
                confirmButtonText: "Confirm",
                cancelButtonText: 'Cancel',
                customClass: {
                    confirmButton: "btn btn-primary",
                    cancelButton: 'btn btn-danger'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "@Url.Action("SaveClosers","CP_CorrectiveAction")",
                        data: formData,
                        type: "POST",
                        processData: false,
                        contentType: false,
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader("XSRF-TOKEN",
                                $('input:hidden[name="__RequestVerificationToken"]').val());
                        },
                    }).done(function (result) {
                        if (result != null) {
                            if (result == 'Error') 
                            {
                               SystemServerError()
                            }
                            if (result == 'noSession') {
                                swalExpired()
                            }
                            else if (result == 'Sorry') {
                                swalNoAuthorized()
                            }
                            else if (result == 'NoPage') {
                                swalNoAuthorized()
                            }
                            else if (result == 'Success') {
                                Swal.fire({
                                    text: "The action has been successfully submitted!",
                                    icon: "success",
                                    buttonsStyling: false,
                                    allowEscapeKey: false,
                                    allowOutsideClick: false,
                                    confirmButtonText: "Ok, got it!",
                                    customClass: {
                                        confirmButton: "btn btn-primary"
                                    }
                                }).then((result) => {
                                    if (result.isConfirmed) {

                                    }
                                });
                            }
                        }
                        else {
                            SystemServerError()
                        }
                    }).fail(function (error) {
                         swalErrorServer()
                    });

                }
                else {

                }
            });


        }
    </script>

    @*Add New Source*@
    <script>
        function AddNewSources() {

            Swal.fire({
                title: '<h1 class="">New source</h1>' +
                       '<label class="col-lg-3 col-form-label required fw-bold fs-6 mb-0">Source:</label>',
                input: 'text',
                customClass: {
                    validationMessage: 'my-validation-message form-control p-3 fs-7'
                },
                preConfirm: (value) => {
                    if (!value) {
                        Swal.showValidationMessage(
                            'The Source is required!'
                        )
                    }
                },
                inputAttributes: {
                    autocapitalize: 'off'
                },
                width: '550px',
                showCancelButton: true,
                buttonsStyling: false,
                allowOutsideClick: false,
                allowEscapeKey: false,
                confirmButtonText: "Save",
                cancelButtonText: "Cancel",
                customClass: {
                    confirmButton: "btn btn-primary",
                    cancelButton: 'btn btn-secondary'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    var Source = result.value;

                    $.ajax({
                        url: "@Url.Action("AddNewSources","CP_CorrectiveAction")",
                        data: {
                            Source: Source,
                            IdSeccion: IdSeccion
                        },
                        type: "POST",
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader("XSRF-TOKEN",
                                $('input:hidden[name="__RequestVerificationToken"]').val());
                        },
                    }).done(function (result) {
                        if (result != null) 
                        {
                            if (result == 'Error') {
                                SystemServerError()
                            }
                            if (result == 'noSession') 
                            {
                                swalExpired()
                            }
                            else if (result == 'Sorry') 
                            {
                                swalNoAuthorized()
                            }
                            else if (result == 'NoPage') 
                            {
                                swalNoAuthorized()
                            }
                            else if (result == 'Exists') 
                            {
                                swal.fire({
                                    text: "Sorry, the Source Exists in the Database, please try again.",
                                    icon: "warning",
                                    buttonsStyling: false,
                                    confirmButtonText: "Ok, got it!",
                                    customClass: {
                                        confirmButton: "btn font-weight-bold btn-light-primary"
                                    }
                                })
                            }
                            else {
                                var t = $('#TablaSourcesCA').DataTable();

                                var resultController = result;

                                Swal.fire({
                                    text: "The action has been successfully submitted!",
                                    icon: "success",
                                    buttonsStyling: false,
                                    allowEscapeKey: false,
                                    allowOutsideClick: false,
                                    confirmButtonText: "Ok, got it!",
                                    customClass: {
                                        confirmButton: "btn btn-primary"
                                    }
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        t.row.add(['<a class="p-0 btn btn-sm  me-2" onclick="DeleteSources(this,' + resultController + ')"><i class="fas fa-times fs-3 text-danger"></i></a>',
                                            Source]).draw(false);
                                    }
                                });
                            }
                        }
                        else {
                            SystemServerError()
                        }
                    }).fail(function (error) {
                         swalErrorServer()
                    });

                }
            })

        }
    </script>

    @*Delete the Sources*@
    <script>
        function DeleteSources(DeleteRow, IdSources) {
            Swal.fire({
                text: "Are you sure to Delete the Sources?",
                icon: "question",
                buttonsStyling: false,
                allowEscapeKey: false,
                allowOutsideClick: false,
                showCancelButton: true,
                closeOnCancel: true,
                confirmButtonText: "Confirm",
                cancelButtonText: 'Cancel',
                customClass: {
                    confirmButton: "btn btn-primary",
                    cancelButton: 'btn btn-danger'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "@Url.Action("DeleteSources","CP_CorrectiveAction")",
                        data: {
                            IdSources: IdSources,
                            IdSeccion: IdSeccion
                        },
                        type: "POST",
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader("XSRF-TOKEN",
                                $('input:hidden[name="__RequestVerificationToken"]').val());
                        },
                    }).done(function (result) {
                        if (result != null) {
                            if (result == 'Error') {
                                SystemServerError()
                            }
                            if (result == 'noSession') {
                                swalExpired()
                            }
                            else if (result == 'Sorry') {
                                swalNoAuthorized()
                            }
                            else if (result == 'NoPage') {
                                swalNoAuthorized()
                            }
                            else {

                                Swal.fire({
                                    text: "The action has been successfully submitted!",
                                    icon: "success",
                                    buttonsStyling: false,
                                    allowEscapeKey: false,
                                    allowOutsideClick: false,
                                    confirmButtonText: "Ok, got it!",
                                    customClass: {
                                        confirmButton: "btn btn-primary"
                                    }
                                }).then((result) => {
                                    if (result.isConfirmed) {

                                        var table = $('#TablaSourcesCA').DataTable();
                                        table.row($(DeleteRow).parents('tr')).remove().draw();
                                    }
                                });
                            }
                        }
                        else {
                            SystemServerError()
                        }
                    }).fail(function (error) {
                        swalErrorServer()
                    });

                }
                else {
                    $('#Select-' + Usuario).val(idGlobal).trigger('change');
                    $('.swal2-container').css('display', 'none');
                }
            });



        }
    </script>

    @*Add New SolutionType*@
    <script>
        function AddNewSolution() {

            Swal.fire({
                title: '<h1 class="">New solution type</h1>' +
                    '<label class="col-lg-3 col-form-label required fw-bold fs-6 mb-0">Solution type:</label>',
                input: 'text',
                customClass: {
                    validationMessage: 'my-validation-message form-control p-3 fs-7'
                },
                preConfirm: (value) => {
                    if (!value) {
                        Swal.showValidationMessage(
                            'The Solution Type is required!'
                        )
                    }
                },
                inputAttributes: {
                    autocapitalize: 'off'
                },
                width: '550px',
                showCancelButton: true,
                buttonsStyling: false,
                allowOutsideClick: false,
                allowEscapeKey: false,
                confirmButtonText: "Save",
                cancelButtonText: "Cancel",
                customClass: {
                    confirmButton: "btn btn-primary",
                    cancelButton: 'btn btn-secondary'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    var Solution = result.value;

                    $.ajax({
                        url: "@Url.Action("AddNewSolution","CP_CorrectiveAction")",
                        data: {
                            Solution: Solution,
                            IdSeccion: IdSeccion
                        },
                        type: "POST",
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader("XSRF-TOKEN",
                                $('input:hidden[name="__RequestVerificationToken"]').val());
                        },
                    }).done(function (result) {
                        if (result != null) {

                            if (result == 'Error') {
                                SystemServerError()
                            }
                            if (result == 'noSession') {
                                swalExpired()
                            }
                            else if (result == 'Sorry') {
                                swalNoAuthorized()
                            }
                            else if (result == 'NoPage') {
                                swalNoAuthorized()
                            }
                            else if (result == 'Exists') {
                                swal.fire({
                                    text: "Sorry, the Solution Type Exists in the Database, please try again.",
                                    icon: "warning",
                                    buttonsStyling: false,
                                    confirmButtonText: "Ok, got it!",
                                    customClass: {
                                        confirmButton: "btn font-weight-bold btn-light-primary"
                                    }
                                })
                            }
                            else {
                                var t = $('#TablaSolutionTypes').DataTable();
                                var resultController = result;

                                Swal.fire({
                                    text: "The action has been successfully submitted!",
                                    icon: "success",
                                    buttonsStyling: false,
                                    allowEscapeKey: false,
                                    allowOutsideClick: false,
                                    confirmButtonText: "Ok, got it!",
                                    customClass: {
                                        confirmButton: "btn btn-primary"
                                    }
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        t.row.add(['<a class="p-0 btn btn-sm  me-2" onclick="DeleteSolution(this,' + resultController + ')"><i class="fas fa-times fs-3 text-danger"></i></a>',
                                            Solution]).draw(false);
                                    }
                                });
                            }
                        }
                        else {
                            SystemServerError()
                        }
                    }).fail(function (error) {
                         swalErrorServer()
                    });

                }
            })

        }
    </script>

    @*Delete SolutionType*@
    <script>
        function DeleteSolution(DeleteRow, IdSolution) {
            Swal.fire({
                text: "Are you sure to Delete the Solution?",
                icon: "question",
                buttonsStyling: false,
                allowEscapeKey: false,
                allowOutsideClick: false,
                showCancelButton: true,
                closeOnCancel: true,
                confirmButtonText: "Confirm",
                cancelButtonText: 'Cancel',
                customClass: {
                    confirmButton: "btn btn-primary",
                    cancelButton: 'btn btn-danger'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "@Url.Action("DeleteSolutionType","CP_CorrectiveAction")",
                        data: {
                            IdSolution: IdSolution,
                            IdSeccion: IdSeccion
                        },
                        type: "POST",
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader("XSRF-TOKEN",
                                $('input:hidden[name="__RequestVerificationToken"]').val());
                        },
                    }).done(function (result) {
                        if (result != null) {
                            if (result == 'Error') 
                            {
                               SystemServerError()
                            }
                            if (result == 'noSession') {
                                swalExpired()
                            }
                            else if (result == 'Sorry') {
                                swalNoAuthorized()
                            }
                            else if (result == 'NoPage') {
                                swalNoAuthorized()
                            }
                            else{

                                Swal.fire({
                                    text: "The action has been successfully submitted!",
                                    icon: "success",
                                    buttonsStyling: false,
                                    allowEscapeKey: false,
                                    allowOutsideClick: false,
                                    confirmButtonText: "Ok, got it!",
                                    customClass: {
                                        confirmButton: "btn btn-primary"
                                    }
                                }).then((result) => {
                                    if (result.isConfirmed)
                                    {
                                        var table = $('#TablaSolutionTypes').DataTable();
                                        table.row($(DeleteRow).parents('tr')).remove().draw();
                                    }
                                });
                            }
                        }
                        else {
                            SystemServerError()
                        }
                    }).fail(function (error) {
                        swalErrorServer()
                    });

                }
                else {
                    $('#Select-' + Usuario).val(idGlobal).trigger('change');
                    $('.swal2-container').css('display', 'none');
                }
            });

        }
    </script>
  
    @*Add New Proccess*@
    <script>
        function AddNewProccess()
        {
            var Number = $("#NumberProccess").val();
            var Description = $("#DescProccess").val();

            $.ajax({
                url: "@Url.Action("AddNewProccess","CP_CorrectiveAction")",
                data: {
                    Number:Number,
                    Description: Description,
                    IdSeccion: IdSeccion
                },
                type: "POST",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
            }).done(function (result) {
                if (result != null) {
                    if (result == 'Error') 
                    {
                        SystemServerError()
                    }
                    if (result == 'noSession') {
                        swalExpired()
                    }
                    else if (result == 'Sorry') {
                        swalNoAuthorized()
                    }
                    else if (result == 'NoPage') {
                        swalNoAuthorized()
                    }
                    else if (result == 'Exists') {
                        swal.fire({
                            text: "Sorry, the Solution Type Exists in the Database, please try again.",
                            icon: "warning",
                            buttonsStyling: false,
                            confirmButtonText: "Ok, got it!",
                            customClass: {
                                confirmButton: "btn font-weight-bold btn-light-primary"
                            }
                        })
                    }
                    else 
                    {
                        var t = $('#TablaProccess').DataTable();
                        var resultController = result;

                        Swal.fire({
                            text: "The action has been successfully submitted!",
                            icon: "success",
                            buttonsStyling: false,
                            allowEscapeKey: false,
                            allowOutsideClick: false,
                            confirmButtonText: "Ok, got it!",
                            customClass: {
                                confirmButton: "btn btn-primary"
                            }
                        }).then((result) => {
                            if (result.isConfirmed) {
                                $('#NewProccessModal').modal('hide');

                                t.row.add([
                                    `<a class="p-0 btn btn-sm  me-2" onclick="DeleteProccess(this, ${resultController})"><i class="fas fa-times fs-3 text-danger"></i></a>`,
                                    `<a class="text-primary opacity-75-hover fs-6 fw-bold" onclick="OpenUpdateProccess(this, ${resultController}, ${Number}, '${Description}')"> ${Number}</a>`,
                                Description]).draw(false);
                            }
                        });
                    }
                }
                else {
                    SystemServerError()
                }
            }).fail(function (error) {
                swalErrorServer()
            });
        }
    </script>

    @*Update Proccess*@
    <script>
        function OpenUpdateProccess(UpdateRowX, ProccessId, Numero, Descripcion) {
            $('#UpdateProccessModal').modal('show')

            UpdateRowProccess = UpdateRowX;
            $("#IdUpdateProces").val(ProccessId)
            $("#UpNumberProces").val(Numero)
            $("#UpDescProccess").val(Descripcion)
        }

        function UpdateProccess() {

            var ProccessId = $("#IdUpdateProces").val();
            var Numero = $("#UpNumberProces").val();
            var Description = $("#UpDescProccess").val();

            $.ajax({
                url: "@Url.Action("UpdateProccess","CP_CorrectiveAction")",
                data: {
                    ProccessId: ProccessId,
                    Numero: Numero,
                    Description: Description,
                    IdSeccion: IdSeccion
                },
                type: "POST",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
            }).done(function (result) {
                if (result != null) {
                    if (result == 'Error') {
                        SystemServerError()
                    }
                    if (result == 'noSession') {
                        swalExpired()
                    }
                    else if (result == 'Sorry') {
                        swalNoAuthorized()
                    }
                    else if (result == 'NoPage') {
                        swalNoAuthorized()
                    }
                    else if (result == 'Exists') {
                        Swal.fire({
                            text: "Sorry, There's one Cell with the same name, please try with diferent name.",
                            icon: "warning",
                            buttonsStyling: false,
                            allowEscapeKey: false,
                            allowOutsideClick: false,
                            confirmButtonText: "Ok, got it!",
                            customClass: {
                                confirmButton: "btn font-weight-bold btn-light-primary"
                            }
                        }).then((result) => {
                            if (result.isConfirmed) {

                                $('#UpdateProccessModal').modal('hide');
                            }
                        });
                    }
                    else {
                        var tCell = $('#TablaProccess').DataTable();

                        var IdProccess = result;

                        Swal.fire({
                            text: "The action has been successfully submitted!",
                            icon: "success",
                            buttonsStyling: false,
                            allowEscapeKey: false,
                            allowOutsideClick: false,
                            confirmButtonText: "Ok, got it!",
                            customClass: {
                                confirmButton: "btn btn-primary"
                            }
                        }).then((result) => {
                            if (result.isConfirmed) {

                                tCell.row($(UpdateRowProccess).parents('tr')).data([
                                    `<a class="p-0 btn btn-sm  me-2" onclick="DeleteProccess(this, ${IdProccess})"><i class="fas fa-times fs-3 text-danger"></i></a>`,
                                    `<a class="text-primary opacity-75-hover fs-6 fw-bold" onclick="OpenUpdateProccess(this, ${IdProccess}, ${Numero}, '${Description}')"> ${Numero}</a>`,
                                    Description]).draw();

                                  $('#UpdateProccessModal').modal('hide');
                            }
                        });
                    }

                }
                else {
                    SystemServerError()
                }
            }).fail(function (error) {
                swalErrorServer()
            });
        }
    </script>

    @*Delete Proccess*@
    <script>
        function DeleteProccess(DeleteRow, IdProccess) {
            Swal.fire({
                text: "Are you sure to Delete the Solution?",
                icon: "question",
                buttonsStyling: false,
                allowEscapeKey: false,
                allowOutsideClick: false,
                showCancelButton: true,
                closeOnCancel: true,
                confirmButtonText: "Confirm",
                cancelButtonText: 'Cancel',
                customClass: {
                    confirmButton: "btn btn-primary",
                    cancelButton: 'btn btn-danger'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "@Url.Action("DeleteProccess","CP_CorrectiveAction")",
                        data: {
                            IdProccess: IdProccess,
                            IdSeccion: IdSeccion
                        },
                        type: "POST",
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader("XSRF-TOKEN",
                                $('input:hidden[name="__RequestVerificationToken"]').val());
                        },
                    }).done(function (result) {
                        if (result != null) {

                            if (result == 'Error') {
                                SystemServerError()
                            }
                            if (result == 'noSession') {
                                swalExpired()
                            }
                            else if (result == 'Sorry') {
                                swalNoAuthorized()
                            }
                            else if (result == 'NoPage') {
                                swalNoAuthorized()
                            }
                            else 
                            {

                                Swal.fire({
                                    text: "The action has been successfully submitted!",
                                    icon: "success",
                                    buttonsStyling: false,
                                    allowEscapeKey: false,
                                    allowOutsideClick: false,
                                    confirmButtonText: "Ok, got it!",
                                    customClass: {
                                        confirmButton: "btn btn-primary"
                                    }
                                }).then((result) => {
                                    if (result.isConfirmed)
                                    {
                                        var table = $('#TablaProccess').DataTable();
                                        table.row($(DeleteRow).parents('tr')).remove().draw();
                                    }
                                });
                            }
                        }
                        else {
                            SystemServerError()
                        }
                    }).fail(function (error) {
                        swalErrorServer()
                    });

                }
                else {
                    $('#Select-' + Usuario).val(idGlobal).trigger('change');
                    $('.swal2-container').css('display', 'none');
                }
            });

        }
    </script>

    @*Form validation for New Proccess*@
    <script>
        //Form Validation
        const HRForm = document.getElementById('IdFormSendProccess');
        var validator = FormValidation.formValidation(
            HRForm,
            {
                fields: {
                    NumberProccess: {
                        validators: {
                            notEmpty: {
                                message: 'Number is required!'
                            }
                        }
                    },
                    DescProccess: {
                        validators: {
                            notEmpty: {
                                message: 'Description is required!'
                            }
                        }
                    },

                },

                plugins: { //Learn more: https://formvalidation.io/guide/plugins
                    trigger: new FormValidation.plugins.Trigger(),
                    bootstrap: new FormValidation.plugins.Bootstrap5({
                        rowSelector: '.fv-row',
                        eleInvalidClass: '',
                        eleValidClass: ''
                    })
                }
            }
        );

        const submitButton = document.getElementById('SendNewProccess');

        submitButton.addEventListener('click', function (e) {
            e.preventDefault();

            if (validator) {
                validator.validate().then(function (status) {
                    if (status == 'Valid') {

                        submitButton.setAttribute('data-kt-indicator', 'on');
                        submitButton.disabled = true;
                        setTimeout(function () {
                            submitButton.removeAttribute('data-kt-indicator');
                            submitButton.disabled = false;
                            AddNewProccess()
                        }, 900);
                    }
                    else {
                        submitButton.setAttribute('data-kt-indicator', 'on');
                        submitButton.disabled = true;
                        setTimeout(function () {
                            submitButton.removeAttribute('data-kt-indicator');
                            submitButton.disabled = false;

                        }, 100);

                    }
                });
            }
        });
    </script>

    @*Form validation for Update Proccess*@
    <script>
        //Form Validation
        const UpProccesForm = document.getElementById('FormUpProccess');
        var validatorUpProcces = FormValidation.formValidation(
            UpProccesForm,
            {
                fields: {
                    UpNumberProces: {
                        validators: {
                            notEmpty: {
                                message: 'Number is required!'
                            }
                        }
                    },
                    UpDescProccess: {
                        validators: {
                            notEmpty: {
                                message: 'Description is required!'
                            }
                        }
                    },

                },

                plugins: { //Learn more: https://formvalidation.io/guide/plugins
                    trigger: new FormValidation.plugins.Trigger(),
                    bootstrap: new FormValidation.plugins.Bootstrap5({
                        rowSelector: '.fv-row',
                        eleInvalidClass: '',
                        eleValidClass: ''
                    })
                }
            }
        );

        const UpdateButtonProccess = document.getElementById('UpdateProccess');

        UpdateButtonProccess.addEventListener('click', function (e) {
            e.preventDefault();

            if (validatorUpProcces) {
                validatorUpProcces.validate().then(function (status) {
                    if (status == 'Valid') {

                        UpdateButtonProccess.setAttribute('data-kt-indicator', 'on');
                        UpdateButtonProccess.disabled = true;
                        setTimeout(function () {
                            UpdateButtonProccess.removeAttribute('data-kt-indicator');
                            UpdateButtonProccess.disabled = false;

                            UpdateProccess()

                        }, 900);
                    }
                    else {
                        UpdateButtonProccess.setAttribute('data-kt-indicator', 'on');
                        UpdateButtonProccess.disabled = true;
                        setTimeout(function () {
                            UpdateButtonProccess.removeAttribute('data-kt-indicator');
                            UpdateButtonProccess.disabled = false;

                        }, 100);

                    }
                });
            }
        });
    </script>

    }