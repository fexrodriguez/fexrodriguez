@using FactoryPlatform.Areas.Quality.Models.Reports.CorrectiveActions.CorrectiveActionChart
@model CorrectiveActionChartViewModel
@{
    ViewData["Title"] = ViewData["Titulo"];

}
<div class="post d-flex flex-column-fluid" id="kt_post">
    <div id="kt_content_container" class="container-fluid">
        <div id="BlockPantalla">
            <div class="card mb-5">
                <div class="card-body p-5 mb-0">
                    <form id="IdFormCA">
                        <input type="hidden" id="SeccionId" name="SeccionId" value="@Model.IdSeccion" />
                        <input type="hidden" name="SeccionId" id="IdSeccion" value="@Model.IdSeccion" />
                        <input type="hidden" id="Tipo" name="Tipo" value="@Model.Tipo" />

                        <div class="row">
                            <div class="col-lg-3 fv-row mb-4">
                                <label class="fs-6 form-label fw-bolder text-dark">Filter option:</label>
                                <select name="FilterOption" id="FilterOption" class="form-select form-select-sm" aria-hidden="true" data-control="select2" data-close-on-select="false" data-placeholder="-- Select an Status or all--" data-allow-clear="true">
                                    <option></option>
                                    @foreach (var item in Model.FilterOptions)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                            </div>
                            <div class="col-lg-3 fv-row mb-4">
                                <label class="fs-6 form-label fw-bolder text-dark">Status:</label>
                                <select name="Status" id="Status" class="form-select form-select-sm" aria-hidden="true" data-control="select2" data-close-on-select="false" data-placeholder="-- Select an Status or all--" data-allow-clear="true">
                                    <option></option>
                                    @foreach (var item in Model.Status)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                            </div>
                            <div class="col-lg-3 fv-row mb-4">
                                <label class="fs-6 form-label fw-bolder text-dark">Ranges:</label>
                                <select id="IdRanges" name="IdRanges" onchange="updCombo(this.value)" class="form-select form-select-sm" value="0" aria-hidden="true" data-control="select2" data-close-on-select="false" data-placeholder="-- Select a Ranger or all--" data-allow-clear="true" multiple="multiple">
                                    <option value="0">Select all</option>
                                    @foreach (var item in Model.Rangers)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                            </div>
                            <div class="col-lg-3 fv-row mb-4">
                                <label class="fs-6 form-label fw-bolder text-dark">Sources:</label>
                                <select id="IdSources" name="IdSources" onchange="updCombo(this.value)" class="form-select form-select-sm" value="0" aria-hidden="true" data-control="select2" data-close-on-select="false" data-placeholder="-- Select a Management or all --" data-allow-clear="true" multiple="multiple">
                                    <option value="0">Select all</option>
                                    @foreach (var item in Model.Quality_CA_Sources)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-3 fv-row mb-4">
                                <label class="fs-6 form-label fw-bolder text-dark">Tools:</label>
                                <select id="IdTools" name="IdTools" onchange="updCombo(this.value)" class="form-select form-select-sm" value="0" aria-hidden="true" data-control="select2" data-close-on-select="false" data-placeholder="-- Select a Tool or all --" data-allow-clear="true" multiple="multiple">
                                    <option value="0">Select all</option>
                                    @foreach (var item in Model.Quality_CA_Tools)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }

                                </select>
                            </div>
                            <div class="col-lg-3 fv-row mb-4">
                                <label class="fs-6 form-label fw-bolder text-dark">Responsibles:</label>
                                <select id="IdResponsibles" name="IdResponsibles" onchange="updCombo(this.value)" class="form-select form-select-sm" value="0" aria-hidden="true" data-control="select2" data-close-on-select="false" data-placeholder="-- Select a Sources or all --" data-allow-clear="true" multiple="multiple">
                                    <option value="0">Select all</option>
                                    @foreach (var item in Model.Quality_CA_Responsible)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }

                                </select>
                            </div>
                            <div class="col-lg-3 fv-row mb-4">
                                <label class="fs-6 form-label fw-bolder text-dark">Managements:</label>
                                <select id="IdManagements" name="IdManagements" onchange="updCombo(this.value)" class="form-select form-select-sm" value="0" aria-hidden="true" data-control="select2" data-close-on-select="false" data-placeholder="-- Select a Departament or all --" data-allow-clear="true" multiple="multiple">
                                    <option value="0">Select all</option>
                                    @foreach (var item in Model.Managements)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }

                                </select>
                            </div>
                            <div class="col-lg-3 fv-row mb-4">
                                <label class="fs-6 form-label fw-bolder text-dark">Date ranges:</label>
                                <input id="DateRanges" name="DateRanges" class="form-control form-control-sm fs-8" placeholder="Pick date rage" />
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-lg-3 fv-row mb-4">
                                <label class="fs-6 form-label fw-bolder text-dark">Action category:</label>
                                <select id="IdActioncategory" name="IdActioncategory" onchange="updCombo(this.value)" class="form-select form-select-sm" aria-hidden="true" data-control="select2" data-close-on-select="false" data-placeholder="-- Select a Responsible or all --" data-allow-clear="true" multiple="multiple">
                                    <option value="0">Select all</option>
                                    @foreach (var item in Model.Quality_CA_CategoryAccion)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                            </div>
                            <div class="col-lg-3 fv-row mb-4 pt-8 me-0">
                                <button type="button" onclick="SearchChart()" id="Search" class="btn btn-primary p-3 fs-7 me-3"><i class="fas fa-search"></i>Search</button>
                                <button type="button" id="HideSeeData" class="btn btn-warning p-3 fs-7 me-3 d-none" data-bs-toggle="modal" data-bs-target="#modal-SearchData"><i class="fas fa-eye"></i>See data</button>
                            </div>

                        </div>
                        <div class="row mb-3">
                        </div>
                    </form>
                </div>
            </div>

            <div class="card card-bordered d-none" id="hideChart">
                <div class="card-body">
                    <div id="kt_amcharts" style="width: 100%; height: 70vh;"></div>
                </div>
            </div>
            
            <div class="card card-bordered d-none" id="hideMessege">
                <div class="card-body">
                  
                    <div class="alert alert-warning d-flex align-items-center p-5 mb-4">
                        <span class="svg-icon svg-icon-2x svg-icon-light me-3"> <i class="fas fa-exclamation-triangle fs-2x text-warning"></i></span>
                        <div class="d-flex flex-column">
                            <span class="text-alert-warning fs-4 fw-bold pt-2">There no data for this search.</span>
                        </div>
                    </div>

                </div>
            </div>

        </div>
    </div>
</div>

@*Modal new Document*@
<div class="modal fade" tabindex="-1" id="modal-SearchData" data-bs-keyboard="false" data-bs-backdrop="static">
    <div class="modal-dialog modal-fullscreen">

        <div class="modal-content shadow-none">
            <div class="modal-header">
                <h3 class="modal-title">Search data</h3>
                <a class="btn btn-icon ms-2" data-bs-dismiss="modal" aria-label="Close">
                    <span class="svg-icon svg-icon-2x svg-icon-light text-hover-danger"><i class="fas fa-times fs-3"></i></span>
                </a>
            </div>
            <div class="modal-body pt-0 bg-light-dark text-dark p-5 pt-5">

                <div class="card card-p-0 card-flush p-4 d-none" id="idseccionReport">
                    <div class="card-header align-items-center py-5 gap-2 gap-md-5">
                        <div class="card-title">
                            <div class="d-flex align-items-center position-relative my-1">
                                <span class="svg-icon svg-icon-1 position-absolute ms-4"><i class="fas fa-search"></i></span>
                                <input type="text" data-kt-filter="search" class="form-control form-control-solid w-250px ps-13" placeholder="Search Report" />
                            </div>
                            <div id="TablaReport_export" class="d-none"></div>
                        </div>
                        <div class="card-toolbar flex-row-fluid justify-content-end gap-5">
                            <button type="button" class="btn btn-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">
                                <span class="svg-icon svg-icon-1 position-absolute ms-4"></span>
                                <i class="fas fa-download"></i>  Export Report
                            </button>
                            <div id="TablaReport_export_menu" class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-200px py-4" data-kt-menu="true">
                                <div class="menu-item px-3">
                                    <a href="#" class="menu-link px-3" data-kt-export="excel">
                                        Export as excel &nbsp;&nbsp; <i class="fas fa-file-excel text-success fs-3"></i>
                                    </a>
                                </div>
                                <div class="menu-item px-3">
                                    <a href="#" class="menu-link px-3" data-kt-export="csv">
                                        Export as csv &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i class="fas fa-file-csv text-info fs-3"></i>
                                    </a>
                                </div>
                                <div class="menu-item px-3">
                                    <a href="#" class="menu-link px-3" data-kt-export="pdf">
                                        Export as pdf &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i class="fas fa-file-pdf text-danger fs-3"></i>
                                    </a>
                                </div>
                            </div>
                            <div id="TablaReport_buttons" class="d-none"></div>
                        </div>
                    </div>
                    <div class="card-body">
                        <table id="TablaReport" class="table border-gray-400 table-hover table-row-bordered gy-4 gs-7">
                            <thead>
                                <tr class="fw-bold fs-6 text-gray-800 text-uppercase bg-gray-300 border-top">
                                    <th class="text-center  border-end border-start min-w-20px">#id</th>
                                    <th class="min-w-150px  border-end ">Key</th>
                                    <th class="min-w-50px   border-end text-center">Tool</th>
                                    <th class="min-w-150px  border-end ">Sources</th>
                                    <th class="min-w-100px  border-end ">Departament</th>
                                    <th class="min-w-300px  border-end ">Responsible for monitoring</th>
                                    <th class="min-w-300px  border-end ">Responsible activity</th>
                                    <th class="min-w-100px  border-end ">Aperture date</th>
                                    <th class="min-w-100px  border-end ">Promise date</th>
                                    <th class="min-w-1000px border-end  ">Causes</th>
                                    <th class="min-w-1000px border-end  ">Actions</th>
                                    <th class="min-w-250px  border-end ">Record user</th>
                                    <th class="min-w-150px  border-end ">Record date</th>
                                </tr>
                            </thead>
                        </table>
                    </div>

                </div>

                <div class="card card-p-0 card-flush p-4 d-none" id="idseccionReportClosed">
                    <div class="card-header align-items-center py-5 gap-2 gap-md-5">
                        <div class="card-title">
                            <div class="d-flex align-items-center position-relative my-1">
                                <span class="svg-icon svg-icon-1 position-absolute ms-4"><i class="fas fa-search"></i></span>
                                <input type="text" data-kt-filter="searchClosed" class="form-control form-control-solid w-250px ps-13" placeholder="Search Report" />
                            </div>
                            <div id="TablaReportClosed_export" class="d-none"></div>
                        </div>
                        <div class="card-toolbar flex-row-fluid justify-content-end gap-5">
                            <button type="button" class="btn btn-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">
                                <span class="svg-icon svg-icon-1 position-absolute ms-4"></span>
                                <i class="fas fa-download"></i>  Export Report
                            </button>
                            <div id="TablaReportClosed_export_menu" class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-200px py-4" data-kt-menu="true">
                                <div class="menu-item px-3">
                                    <a href="#" class="menu-link px-3" data-kt-exportClosed="excel">
                                        Export as excel &nbsp;&nbsp; <i class="fas fa-file-excel text-success fs-3"></i>
                                    </a>
                                </div>
                                <div class="menu-item px-3">
                                    <a href="#" class="menu-link px-3" data-kt-exportClosed="csv">
                                        Export as csv &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i class="fas fa-file-csv text-info fs-3"></i>
                                    </a>
                                </div>
                                <div class="menu-item px-3">
                                    <a href="#" class="menu-link px-3" data-kt-exportClosed="pdf">
                                        Export as pdf &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i class="fas fa-file-pdf text-danger fs-3"></i>
                                    </a>
                                </div>
                            </div>
                            <div id="TablaReportClosed_buttons" class="d-none"></div>
                        </div>
                    </div>
                    <div class="card-body">
                        <table id="TablaReportClosed" class="table border-gray-400 table-hover table-row-bordered gy-4 gs-7">
                            <thead>
                                <tr class="fw-bold fs-6 text-gray-800 text-uppercase bg-gray-300 border-top">
                                    <th class="text-center  border-end align-middle border-start min-w-20px">#id</th>
                                    <th class="min-w-150px  border-end align-middle">Time</th>
                                    <th class="min-w-150px  border-end align-middle">Key</th>
                                    <th class="min-w-50px   border-end align-middletext-center">Tool</th>
                                    <th class="min-w-150px  border-end align-middle">Sources</th>
                                    <th class="min-w-100px  border-end align-middle">Departament</th>
                                    <th class="min-w-300px  border-end align-middle">Responsible for monitoring</th>
                                    <th class="min-w-300px  border-end align-middle">Responsible activity</th>
                                    <th class="min-w-100px  border-end align-middle">Aperture date</th>
                                    <th class="min-w-100px  border-end align-middle">Promise date</th>
                                    <th class="min-w-1000px border-end align-middle">Causes</th>
                                    <th class="min-w-1000px border-end align-middle">Actions</th>
                                    <th class="min-w-150px  border-end align-middle">Close date</th>
                                    <th class="min-w-200px  border-end align-middle">Closed By</th>
                                    <th class="min-w-200px  border-end align-middle">Evidence / Analisys</th>
                                    <th class="min-w-150px  border-end align-middle">Solution type</th>
                                    <th class="min-w-150px  border-end align-middle">Rasp Family</th>
                                    <th class="min-w-150px  border-end align-middle">Rasp Failure</th>
                                    <th class="min-w-250px  border-end align-middle">Record user</th>
                                    <th class="min-w-150px  border-end align-middle">Record date</th>
                                </tr>
                            </thead>
                        </table>
                    </div>

                </div>
                
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light" data-bs-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>


@section Scripts{

@*Data ranges*@
<script>
    var start = moment();
    var end = moment();

    function cb(start, end) {
        $("#DateRanges").html(start.format("MMMM D, YYYY") + " - " + end.format("MMMM D, YYYY"));
    }

    $("#DateRanges").daterangepicker({
        showDropdowns: true,
        startDate: start,
        endDate: end,
        ranges: {
            "All Dates": [moment().subtract(10, "years"), moment()],
            "Today": [moment(), moment()],
            "Yesterday": [moment().subtract(1, "days"), moment().subtract(1, "days")],
            "Last 7 Days": [moment().subtract(6, "days"), moment()],
            "Last 30 Days": [moment().subtract(29, "days"), moment()],
            "This Month": [moment().startOf("month"), moment().endOf("month")],
            "Last Month": [moment().subtract(1, "month").startOf("month"), moment().subtract(1, "month").endOf("month")]
        }
    }, cb);

    cb(start, end);
</script>



<!-- Resources -->
<script src="~/amcharts5/index.js"></script>
<script src="~/amcharts5/xy.js"></script>
<script src="~/amcharts5/themes/Animated.js"></script>
<script>
    var texto = "";
    
    function crearGrafica(data)
    {
        am5.array.each(am5.registry.rootElements, function (root) {
            if (root.dom.id == "kt_amcharts") {
                root.dispose();
            }
        })

        // Create root element
        // https://www.amcharts.com/docs/v5/getting-started/#Root_element
        var root = am5.Root.new("kt_amcharts");


        // Set themes
        // https://www.amcharts.com/docs/v5/concepts/themes/
        root.setThemes([
            am5themes_Animated.new(root)
        ]);


        // Create chart
        // https://www.amcharts.com/docs/v5/charts/xy-chart/
        var chart = root.container.children.push(am5xy.XYChart.new(root, {
            panX: false,
            panY: false,
            wheelX: "panX",
            wheelY: "zoomX",
            layout: root.verticalLayout
        }));


        texto = $('#FilterOption :selected').text();
        texto = texto.split(" ")
        texto = texto[1];
        texto = texto[0].toUpperCase() + texto.slice(1);


        //Para el subtitulo
        chart.children.unshift(am5.Label.new(root, {
            text: "Chart by "+ texto,
            fontSize: 14,
            textAlign: "center",
            x: am5.percent(50),
            centerX: am5.percent(50)
        }));


        //Para el titulo
        chart.children.unshift(am5.Label.new(root, {
            text: "Corrective Actions",
            fontSize: 25,
            fontWeight: "500",
            textAlign: "center",
            x: am5.percent(50),
            centerX: am5.percent(50),
            paddingTop: 0,
            paddingBottom: 0
        }));


            if ($('#Status').val() == 2) {
              //Para los colores
               chart.get("colors").set("colors", [
                 am5.color(0xffff00), //Yellow
                am5.color(0x00cc00), //Green
                 ]);
            }
            else {
                //Para los colores
                chart.get("colors").set("colors", [
                    am5.color(0xffff00), //Yellow
                    am5.color(0x00cc00), //Green
                    am5.color(0xff0000) //Red
                ]);
            }


        

        // Add legend
        // https://www.amcharts.com/docs/v5/charts/xy-chart/legend-xy-series/
        var legend = chart.children.push(
            am5.Legend.new(root, {
                centerX: am5.p50,
                x: am5.p50
            })
        );

        // Create axes
        // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/
        var xAxis = chart.xAxes.push(am5xy.CategoryAxis.new(root, {
            categoryField: "Descripcion",
            renderer: am5xy.AxisRendererX.new(root, {
                cellStartLocation: 0.1,
                cellEndLocation: 0.9
            }),
            tooltip: am5.Tooltip.new(root, {})
        }));

        xAxis.data.setAll(data);

        xAxis.get("renderer").labels.template.setAll({
            oversizedBehavior: "wrap",
            textAlign: "center",
            maxWidth: 100
        });


        var yAxis = chart.yAxes.push(am5xy.ValueAxis.new(root, {
            calculateTotals: true,
            min: 0,
            extraMax: 0.1,
            renderer: am5xy.AxisRendererY.new(root, {})
        }));

        yAxis.get("renderer").labels.template.setAll({
            visible: true
        });

        var label1 = am5.Label.new(root, {
            rotation: -90,
            text: "[bold]Cantidades",
            y: am5.percent(70),
            fontSize: 15,
        })

        yAxis.children.unshift(
            label1
        );

        // Craete Y-axes
        var xAxis1 = chart.xAxes.push(
            am5xy.ValueAxis.new(root, {
                x: am5.p50,
                renderer: am5xy.AxisRendererX.new(root, {})
            })
        );

        var label2 = am5.Label.new(root, {
            text: "[bold]Fuentes",
            fontSize: 15,
            centerX: am5.p50
        })

        xAxis1.children.unshift(
            label2
        );

        //Create a universal tooltip to be used for multiple series
        var tooltip = am5.Tooltip.new(root, {
            getFillFromSprite: false,
            getStrokeFromSprite: true,
            autoTextColor: false,
            getLabelFillFromSprite: false,
            //Texto del tooltip
            labelText: "[bold]{categoryX}[/]\n {name}: {valueY} [/]\n Total: {valueYTotal}"
        });

        //Color del fond del tooltip
        tooltip.get("background").setAll({
            fill: am5.color(0xffffff),
            fillOpacity: 0.8
        });

        // color de letra del tooltip
        tooltip.label.setAll({
            fill: am5.color(0x000000)
        });

        // scrooll
        chart.leftAxesContainer.set("layout", root.verticalLayout);
         var scrollbarX = am5.Scrollbar.new(root, {
                        orientation: "horizontal"
                    });
         chart.set("scrollbarX", scrollbarX);
         //chart.bottomAxesContainer.children.push(scrollbarX);


        // Add series
        // https://www.amcharts.com/docs/v5/charts/xy-chart/series/
        function makeSeries(name, fieldName, showTotal) 
        {
            
            if (( fieldName != 'UnoSiete' && $('#Status').val() == 2) || $('#Status').val() == 1) 
            {

                console.log(fieldName)


                var series = chart.series.push(am5xy.ColumnSeries.new(root, {
                    name: name,
                    xAxis: xAxis,
                    yAxis: yAxis,
                    valueYField: fieldName,
                    categoryXField: "Descripcion",
                    stacked: true,
                    maskBullets: false,
                    tooltip: tooltip
                }));

                series.columns.template.setAll({
                    tooltipText: "{name}, {categoryX}:{valueY}",
                    width: am5.percent(90),
                    tooltipY: 0
                });

                if (showTotal) {
                    series.bullets.push(function () {
                        return am5.Bullet.new(root, {
                            locationY: 1,
                            sprite: am5.Label.new(root, {
                                textAlign: "center",
                                text: "[bold]{valueYTotal}",
                                fill: am5.color(0x000000),
                                fontSize: 15,
                                centerY: am5.p100,
                                centerX: am5.p50,
                                populateText: true
                            })
                        });
                    });
                }

                if(fieldName != 'none')
                {
                    //numeros dentro de las graficas
                    series.bullets.push(function () {
                        return am5.Bullet.new(root, {
                            locationY: 0.5,
                            sprite: am5.Label.new(root, {
                                text: "{valueY}",
                                fontSize: 16,
                                fill: am5.color(0x000000),
                                centerY: am5.percent(50),
                                centerX: am5.percent(50),
                                populateText: true
                            })
                        });
                    });
                }

                series.data.setAll(data);
                series.appear();

                if (!showTotal) {
                    legend.data.push(series);
                }
            }
        }

        if ( $('#Status').val() == 2) 
        {
            makeSeries("Destiempo", "Cero");
            makeSeries("Tiempo", "MasSiete");
            makeSeries("", "none", true);
        } 
        else
        {
            makeSeries("+7 Days", "Cero");
            makeSeries("1-7 Days", "UnoSiete");
            makeSeries("0 Days", "MasSiete");
            makeSeries("", "none", true);
        }

        // Make stuff animate on load
        // https://www.amcharts.com/docs/v5/concepts/animations/
            chart.appear(1000, 100);
        $(document).ready(function(){
         $("g[aria-labelledby]").hide();
        }) 
    }

    </script>

    @*Library datatable*@
    <script type="text/javascript">
        var KTDatatablesExample = function () {
            var table;
            var datatable;

            var initDatatable = function () {
                const tableRows = table.querySelectorAll('tbody tr');

                tableRows.forEach(row => {
                    const dateRow = row.querySelectorAll('td');
                });

                datatable = $(table).DataTable({
                    "info": true,
                    "order": [],
                    "pageLength": 100,
                    "scrollY": "500px",
                    "scrollCollapse": true,
                    "scrollX": true,
                    "columns": [
                        { className: "border-end border-start border-gray-400 min-w-20px", },
                        {className: "border-end border-gray-400 min-w-150px",},
                        {className: "border-end border-gray-400 min-w-50px",},
                        {className: "border-end border-gray-400 min-w-150px",},
                        {className: "border-end border-gray-400 min-w-100px",},
                        {className: "border-end border-gray-400 min-w-300px",},
                        {className: "border-end border-gray-400 min-w-300px",},
                        {className: "border-end border-gray-400 min-w-150px",},
                        {className: "border-end border-gray-400 min-w-150px",},
                        {className: "border-end border-gray-400 min-w-1000px",},
                        {className: "border-end border-gray-400 min-w-1000px",},
                        {className: "border-end border-gray-400 min-w-250px",},
                        {className: "border-end border-gray-400 min-w-150px",}

                    ]
                });
            }

            // Hook export buttons
            var exportButtons = () => {
                const documentTitle = 'CorrectiveActionChart_Report';
                var buttons = new $.fn.dataTable.Buttons(table, {
                    buttons: [
                        {
                            extend: 'copyHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'excelHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'csvHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'pdfHtml5',
                            title: documentTitle
                        }
                    ]
                }).container().appendTo($('#TablaReport_buttons'));

                const exportButtons = document.querySelectorAll('#TablaReport_export_menu [data-kt-export]');
                exportButtons.forEach(exportButton => {
                    exportButton.addEventListener('click', e => {
                        e.preventDefault();

                        const exportValue = e.target.getAttribute('data-kt-export');
                        const target = document.querySelector('.dt-buttons .buttons-' + exportValue);

                        target.click();
                    });
                });
            }

            var handleSearchDatatable = () => {
                const filterSearch = document.querySelector('[data-kt-filter="search"]');
                filterSearch.addEventListener('keyup', function (e) {
                    datatable.search(e.target.value).draw();
                });
            }

            return {
                init: function () {
                    table = document.querySelector('#TablaReport');

                    if (!table) {
                        return;
                    }

                    initDatatable();
                    exportButtons();
                    handleSearchDatatable();
                }
            };
        }();

        KTUtil.onDOMContentLoaded(function () {
            KTDatatablesExample.init();
        });
    </script> 
    
    @*Library datatable*@
    <script type="text/javascript">
        var KTDatatablesReportClosed = function () {
            var table;
            var datatable;

            var initDatatable = function () {
                const tableRows = table.querySelectorAll('tbody tr');

                tableRows.forEach(row => {
                    const dateRow = row.querySelectorAll('td');
                });

                datatable = $(table).DataTable({
                    "info": true,
                    "order": [],
                    "pageLength": 100,
                    "scrollY": "500px",
                    "scrollCollapse": true,
                    "scrollX": true,
                    "columns": [
                        { className: "border-end border-start border-gray-400 min-w-20px", },
                        {className: "border-end border-gray-400 align-middle min-w-150px",},
                        {className: "border-end border-gray-400 align-middle min-w-150px",},
                        {className: "border-end border-gray-400 align-middle min-w-50px",},
                        {className: "border-end border-gray-400 align-middle min-w-150px",},
                        {className: "border-end border-gray-400 align-middle min-w-100px",},
                        {className: "border-end border-gray-400 align-middle min-w-300px",},
                        {className: "border-end border-gray-400 align-middle min-w-300px",},
                        {className: "border-end border-gray-400 align-middle min-w-150px",},
                        {className: "border-end border-gray-400 align-middle min-w-150px",},
                        {className: "border-end border-gray-400 align-middle min-w-1000px",},
                        {className: "border-end border-gray-400 align-middle min-w-1000px",},
                        {className: "border-end border-gray-400 align-middle min-w-150px",},
                        {className: "border-end border-gray-400 align-middle min-w-200px",},
                        {className: "border-end border-gray-400 align-middle min-w-200px",},
                        {className: "border-end border-gray-400 align-middle min-w-150px",},
                        {className: "border-end border-gray-400 align-middle min-w-150px",},
                        {className: "border-end border-gray-400 align-middle min-w-150px",},
                        {className: "border-end border-gray-400 align-middle min-w-250px",},
                        {className: "border-end border-gray-400 align-middle min-w-150px",}

                    ]
                });
            }

            // Hook export buttons
            var exportButtons = () => {
                const documentTitle = 'CorrectiveActionChart_Report';
                var buttons = new $.fn.dataTable.Buttons(table, {
                    buttons: [
                        {
                            extend: 'copyHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'excelHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'csvHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'pdfHtml5',
                            title: documentTitle
                        }
                    ]
                }).container().appendTo($('#TablaReportClosed_buttons'));

                const exportButtons = document.querySelectorAll('#TablaReportClosed_export_menu [data-kt-exportClosed]');
                exportButtons.forEach(exportButton => {
                    exportButton.addEventListener('click', e => {
                        e.preventDefault();

                        const exportValue = e.target.getAttribute('data-kt-exportClosed');
                        var target = document.querySelector('div[id="TablaReportClosed_buttons"]');
                        target = target.querySelector('.buttons-' + exportValue);

                        target.click();
                    });
                });
            }

            var handleSearchDatatableClosed = () => {
                const filterSearch = document.querySelector('[data-kt-filter="searchClosed"]');
                filterSearch.addEventListener('keyup', function (e) {
                    datatable.search(e.target.value).draw();
                });
            }

            return {
                init: function () {
                    table = document.querySelector('#TablaReportClosed');

                    if (!table) {
                        return;
                    }

                    initDatatable();
                    exportButtons();
                    handleSearchDatatableClosed();
                }
            };
        }();

        KTUtil.onDOMContentLoaded(function () {
            KTDatatablesReportClosed.init();
        });
    </script>

    @*Block pantalla*@
    <script>
        var button = document.querySelector("#BlockPantalla");
        var target = document.querySelector("#BlockPantalla");

        var BlockPantalla = new KTBlockUI(target, {
            message: '<div class="blockui-message"><span class="spinner-border text-primary"></span> Loading...</div>',
        });
    </script>

    @*Minimize the Aside Menu*@
    <script>
        $(document).ready(function () {
            $("#kt_body").attr("data-kt-aside-minimize", "on");
        })
    </script>

    @*Get Search with filter*@
    <script>
        arrayDatos = "";
        function SearchChart() {
            BlockPantalla.block();
            var formData = new FormData();

            formData.append("IdSeccion", $('#SeccionId').val());
            formData.append("FilterOption", $('#FilterOption').val());
            formData.append("Status", $('#Status').val());
            formData.append("IdRanges", $('#IdRanges').val());
            formData.append("IdManagements", $('#IdManagements').val());
            formData.append("IdTools", $('#IdTools').val());
            formData.append("IdSources", $('#IdSources').val());
            formData.append("DateRanges", $('#DateRanges').val());
            formData.append("IdResponsibles", $('#IdResponsibles').val());
            formData.append("IdActioncategory", $('#IdActioncategory').val());

            $.ajax({
                url: "@Url.Action("ReportCorrectiveActionsChart","R_CorrectiveActionChart")",
                data: formData,
                type: "POST",
                processData: false,
                contentType: false,
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
            }).done(function (result) {
                if (result != null) {
                    if (result == 'Error') {
                        BlockPantalla.release();
                        SystemServerError()
                    }
                    else if (result == 'noSession') {
                        swalExpired()
                    }
                    else if (result == 'Sorry') {
                        swalNoAuthorized()
                    }
                    else if (result == 'NoPage') {
                        swalNoAuthorized()
                    }
                    else {

                        var obj = JSON.parse(result);
                        
                        BlockPantalla.release();

                        var hideMess = document.getElementById("hideMessege");
                        hideMess.classList.add("d-none");

                        var element = document.getElementById("hideChart");
                        element.classList.add("d-none");

                        var bottonSeedata = document.getElementById("HideSeeData");
                        bottonSeedata.classList.add("d-none");
                        
                        var seccionReport = document.getElementById("idseccionReport");
                        seccionReport.classList.add("d-none");
                        
                        var seccionReportClosed = document.getElementById("idseccionReportClosed");
                        seccionReportClosed.classList.add("d-none");


                        if(obj.ChartsJson.length > 0)
                        {
                            crearGrafica(obj.ChartsJson)
                            element = document.getElementById("hideChart");
                            element.classList.remove("d-none");

                            bottonSeedata = document.getElementById("HideSeeData");
                            bottonSeedata.classList.remove("d-none");

                        }
                        else
                        {
                            hideMess = document.getElementById("hideMessege");
                            hideMess.classList.remove("d-none");
                        }


                        var t1 = $('#TablaReport').DataTable();
                        t1.clear().draw();
                        
                        var t2 = $('#TablaReportClosed').DataTable();
                        t2.clear().draw();

                        var status = $('#Status').val();

                        if(status == 1)
                        {

                            for (var i = 0; i < obj.ReportChartsJson.length; i++)
                            {   
                                t1.row.add(
                                    [
                                        i,
                                        obj.ReportChartsJson[i].Clave,
                                        obj.ReportChartsJson[i].Herramienta,
                                        obj.ReportChartsJson[i].Fuente,
                                        obj.ReportChartsJson[i].Departamento,
                                        obj.ReportChartsJson[i].ResponsableSeguimiento,
                                        obj.ReportChartsJson[i].ResponsableActividad,
                                        obj.ReportChartsJson[i].FechaApertura,
                                        obj.ReportChartsJson[i].FechaPromesa,
                                        obj.ReportChartsJson[i].Causas,
                                        obj.ReportChartsJson[i].Acciones,
                                        obj.ReportChartsJson[i].UsuarioRegistro,
                                        obj.ReportChartsJson[i].FechaRegistro,
                                    ]).draw(false);
                            }

                           seccionReport.classList.remove("d-none");

                        }
                        else
                        {

                            for (var i = 0; i < obj.ReportChartsJson.length; i++) {

                                 var Time = obj.ReportChartsJson[i].Tiempo == "Fuera de tiempo" ? `<span class="badge badge-square badge-white text-white p-2" style="background-color:#ed6b75;"> ${obj.ReportChartsJson[i].Tiempo} </span>`
                                 :`<span class="badge badge-square badge-white text-white p-2" style="background-color:#36c6d3;"> ${obj.ReportChartsJson[i].Tiempo} </span>`;


                                t2.row.add(
                                [
                                    i,
                                    Time,
                                    obj.ReportChartsJson[i].Clave,
                                    obj.ReportChartsJson[i].Herramienta,
                                    obj.ReportChartsJson[i].Fuente,
                                    obj.ReportChartsJson[i].Departamento,
                                    obj.ReportChartsJson[i].ResponsableSeguimiento,
                                    obj.ReportChartsJson[i].ResponsableActividad,
                                    obj.ReportChartsJson[i].FechaApertura,
                                    obj.ReportChartsJson[i].FechaPromesa,
                                    obj.ReportChartsJson[i].Causas,
                                    obj.ReportChartsJson[i].Acciones,
                                    obj.ReportChartsJson[i].FechaCierre ,
                                    obj.ReportChartsJson[i].CerradoPor,
                                    obj.ReportChartsJson[i].Evidencia + '<br>' + obj.ReportChartsJson[i].Analisis,
                                    obj.ReportChartsJson[i].Solucion,
                                    obj.ReportChartsJson[i].RASPFamilia,
                                    obj.ReportChartsJson[i].RASPFailureCode,
                                    obj.ReportChartsJson[i].UsuarioRegistro,
                                    obj.ReportChartsJson[i].FechaRegistro
                                ]).draw(false);
                            }

                           seccionReportClosed.classList.remove("d-none");

                        }

                        $("#kt_body").attr("data-kt-aside-minimize", "on");
                    }
                }

            }).fail(function (error) {
                swalErrorServer()
            });

        }
    </script>

    @*Select All from Combos*@
    <script>
        function updCombo(val) {
            if ($('#' + idGlobal).val() != "") {
                if (val == 0) {
                    $('#' + idGlobal + '> option').prop("selected", "selected");
                    $('#' + idGlobal + ' option:first-child').prop("selected", false);
                    
                }
            }
        }
    </script>

    @*Part of select All Multiple  select2*@
    <script>

        var idGlobal = "Status";

        $(document).ready(function () {

            
            console.log(idGlobal);


            $('select').on("select2:clearing", function (e) {
                idGlobal = $(this).attr("name");
            //    console.log('cleared');
            //    //$("#" + idGlobal + "-selector").val('').trigger('change');

            //    //$("#" + idGlobal).val("").trigger('change');
                $("#" + idGlobal).select2({
                    //placeholder: "Select Category",
                    allowClear: true // This is for clear get the clear button if wanted
                });

            });

            $('select').on('select2:open', function (e) {
                //Obtener el name or id del elemento para realizar el proceso seleccionar o deseleccionar opciones.
                idGlobal = $(this).attr("name");

                
                //console.log(idGlobal);

                /// Evento cuando se selecciona una opcion > 0
                $('#' + idGlobal).on('select2:select', function (e) {
                    
                    let select = $(this),
                        ul = select.next('span.select2').find('ul');

                    ul.find('.select2-selection__choice').remove();
                    ul.prepend(function () {
                        let count = select.select2('data').length
                        
                        if (count > 0) {
                            return "<li class='select2-selection__choice'>" + count + " options selected</li>"
                        }
                    })

                });
                /// Evento cuando se deselecciona una opcion > 0
                $('#' + idGlobal).on('select2:unselect', function (e) {
                   
                    let select = $(this),
                        ul = select.next('span.select2').find('ul');

                    ul.find('.select2-selection__choice').remove();
                    ul.prepend(function () {
                        let count = select.select2('data').length

                        
                        if (count > 0) {
                            return "<li class='select2-selection__choice'>" + count + " options selected</li>"
                        }
                    })
                });
                ///

            })

            //Setear todos los combos con todas las opciones cuando inicia la pantalla
            $(".form-select-sm").each(function (index) {
                //Obtener el id de cada elemento por clase
                var idCombos = $(this).attr('id');

                //valida que la clave no este vacia
                if (idCombos != undefined && idCombos != 'Status') {

                    //Se seleccionan todas las opciones
                    //$('#' + idCombos + '> option').prop("selected", "selected");
                    //Se deselecciona la opcion 0 que tiene la leyenda todos las opciones
                    //$('#' + idCombos + ' option:first-child').prop("selected", false);
                    //Se remueve el textarea con el placeholder
                    //$(".select2-search__field").remove();
                   
                    $('#' + idCombos).select2({
                        //placeholder: "Select Category",
                        allowClear: true // This is for clear get the clear button if wanted

                    });
                    let select = $(this),
                        ul = select.next('span.select2').find('ul');
                    ul.find('.select2-selection__choice').remove();
                    
                    ul.prepend(function () {
                        let count = select.select2('data').length
                        if (count > 0) {
                            return "<li class='select2-selection__choice'>" + count + " options selected</li>"
                        }
                    })


                }
            });

        });

    </script>

}