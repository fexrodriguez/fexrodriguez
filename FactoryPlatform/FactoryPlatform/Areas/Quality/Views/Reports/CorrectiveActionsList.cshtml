@model CorrectiveActionListViewModel
@{
   ViewData["Title"] = ViewData["Titulo"];
}
@{

}
<style>
    .select-wrapper input.select-dropdown {
        padding-right: 10px;
        box-sizing: border-box;
        text-overflow: ellipsis;
    }
</style>

<div class="post d-flex flex-column-fluid" id="kt_post">
    <div id="kt_content_container" class="container-fluid">
        <div id="BlockPantalla">
            
            <div class="card mb-5">
                <div class="card-body p-5 mb-0" id="BlockPantalla">
                    <form id="IdFormCA">
                        <input type="hidden" id="SeccionId" name="SeccionId" value="@Model.IdSeccion" />
                        <input type="hidden" id="Tipo" name="Tipo" value="@Model.Tipo" />
                        <div class="row">
                            <div class="col-lg-3 fv-row mb-4">
                                <label class="fs-6 form-label fw-bolder text-dark">Key:</label>
                                <input id="IdKey" name="IdKey" type="text" class="form-control form-control-sm ps-3 fs-8" placeholder="Search by Key" autocomplete="off" autofocus />
                            </div>
                            <div class="col-lg-3 fv-row mb-4">
                                <label class="fs-6 form-label fw-bolder text-dark">Status:</label>
                                <select name="Status" id="Status" class="form-select form-select-sm" aria-hidden="true" data-control="select2" data-close-on-select="false" data-placeholder="-- Select an Status or all--" data-allow-clear="true">
                                    @foreach (var item in Model.Status)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                            </div>
                            <div class="col-lg-3 fv-row mb-4">
                                <label class="fs-6 form-label fw-bolder text-dark">Rangers:</label>
                                <select id="IdRangers" name="IdRangers" onchange="updCombo(this.value)" class="form-select form-select-sm" value="0" aria-hidden="true" data-control="select2" data-close-on-select="false" data-placeholder="-- Select a Ranger or all--" data-allow-clear="true" multiple="multiple">
                                    <option value="0">Select all</option>
                                    @foreach (var item in Model.Rangers)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }

                                </select>
                            </div>
                            <div class="col-lg-3 fv-row mb-4">
                                <label class="fs-6 form-label fw-bolder text-dark">Managements:</label>
                                <select id="IdManagements" name="IdManagements" onchange="updCombo(this.value)" class="form-select form-select-sm" value="0" aria-hidden="true" data-control="select2" data-close-on-select="false" data-placeholder="-- Select a Management or all --" data-allow-clear="true" multiple="multiple">
                                    <option value="0">Select all</option>
                                    @foreach (var item in Model.Managements)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }

                                </select>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-3 fv-row mb-4">
                                <label class="fs-6 form-label fw-bolder text-dark">Tools:</label>
                                <select id="IdTools" name="IdTools" onchange="updCombo(this.value)" class="form-select form-select-sm" value="0" aria-hidden="true" data-control="select2" data-close-on-select="false" data-placeholder="-- Select a Tool or all --" data-allow-clear="true" multiple="multiple">
                                    <option value="0">Select all</option>
                                    @foreach (var item in Model.Quality_CA_Tools)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }

                                </select>
                            </div>
                            <div class="col-lg-3 fv-row mb-4">
                                <label class="fs-6 form-label fw-bolder text-dark">Sources:</label>
                                <select id="IdSources" name="IdSources" onchange="updCombo(this.value)" class="form-select form-select-sm" value="0" aria-hidden="true" data-control="select2" data-close-on-select="false" data-placeholder="-- Select a Sources or all --" data-allow-clear="true" multiple="multiple">
                                    <option value="0">Select all</option>
                                    @foreach (var item in Model.Quality_CA_Sources)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }

                                </select>
                            </div>
                            <div class="col-lg-3 fv-row mb-4">
                                <label class="fs-6 form-label fw-bolder text-dark">Departaments:</label>
                                <select id="IdDepartaments" name="IdDepartaments" onchange="updCombo(this.value)" class="form-select form-select-sm" value="0" aria-hidden="true" data-control="select2" data-close-on-select="false" data-placeholder="-- Select a Departament or all --" data-allow-clear="true" multiple="multiple">
                                    <option value="0">Select all</option>
                                    @foreach (var item in Model.Production_Departments)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }

                                </select>
                            </div>
                            <div class="col-lg-3 fv-row mb-4">
                                <label class="fs-6 form-label fw-bolder text-dark">Date ranges:</label>
                                <input id="DateRanges" name="DateRanges" class="form-control form-control-sm fs-8" placeholder="Pick date rage" />
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-lg-3 fv-row mb-4">
                                <label class="fs-6 form-label fw-bolder text-dark">Activity Responsibles:</label>
                                <select id="IdResponsibles" name="IdResponsibles" onchange="updCombo(this.value)" class="form-select form-select-sm" aria-hidden="true" data-control="select2" data-close-on-select="false" data-placeholder="-- Select a Responsible or all --" data-allow-clear="true" multiple="multiple">
                                    <option value="0">Select all</option>
                                    @foreach (var item in Model.Quality_CA_Activity)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                            </div>
                            <div class="col-lg-3 fv-row mb-4">
                                <label class="fs-6 form-label fw-bolder text-dark">Closed By:</label>
                                <select id="IdClosed" name="IdClosed" onchange="updCombo(this.value)" class="form-select form-select-sm" aria-hidden="true" data-control="select2" data-close-on-select="false" data-placeholder="Select a Closer or all --" data-allow-clear="true" multiple="multiple">
                                    <option value="0">Select all</option>
                                    @foreach (var item in Model.ClosersUsers)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }

                                </select>
                            </div>
                            <div class="col-lg-3 fv-row mb-4">
                                <label class="fs-6 form-label fw-bolder text-dark">Action categorys:</label>
                                <select id="IdCategorys" name="IdCategorys" onchange="updCombo(this.value)" class="form-select form-select-sm" aria-hidden="true" data-control="select2" data-close-on-select="false" data-placeholder="-- Select a Category or all --" data-allow-clear="true" multiple="multiple">

                                    <option value="0">Select all</option>
                                    @foreach (var item in Model.Quality_CA_CategoryAccion)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }

                                </select>
                            </div>
                            <div class="col-lg-3 fv-row mb-4">
                                <label class="fs-6 form-label fw-bolder text-dark">Process:</label>
                                <select id="IdProcess" name="IdProcess" onchange="updCombo(this.value)" class="form-select form-select-sm" aria-hidden="true" data-control="select2" data-close-on-select="false" data-placeholder="-- Select a Process or all --" data-allow-clear="true" multiple="multiple">
                                    <option value="0">Select all</option>

                                    @foreach (var item in Model.Quality_Processes)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }

                                </select>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-lg-3 fv-row  me-0">
                                <button type="button" onclick="SearchReport()" id="Search" class="btn btn-primary p-3 fs-8 me-3"><i class="fas fa-search"></i>Search</button>
                            </div>
                        </div>
                    </form>
                    <input type="hidden" name="SeccionId" id="IdSeccion" value="@Model.IdSeccion" />

                </div>
            </div>
            
            <div class="card mb-5" id="HideReport" style="display:none;">

                <div class="card-header align-items-center py-5 gap-2 gap-md-5">
                    <div class="card-title">
                        <div class="d-flex align-items-center position-relative my-1">
                            <span class="svg-icon svg-icon-1 position-absolute ms-4"><i class="fas fa-search"></i></span>
                            <input type="text" data-kt-filter="search" class="form-control form-control-solid w-250px ps-13" placeholder="Search Report" />
                        </div>
                        <div id="TablaSourcesCA_export" class="d-none"></div>
                    </div>
                    <div class="card-toolbar flex-row-fluid justify-content-end gap-5">
                        <button type="button" class="btn btn-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">
                            <span class="svg-icon svg-icon-1 position-absolute ms-4"></span>
                            Export Report
                        </button>
                        <div id="TablaSourcesCA_export_menu" class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-200px py-4" data-kt-menu="true">
                            <div class="menu-item px-3">
                                <a href="#" class="menu-link px-3" data-kt-export="excel">
                                    Export as excel &nbsp;&nbsp; <i class="fas fa-file-excel text-success fs-3"></i>
                                </a>
                            </div>
                            <div class="menu-item px-3">
                                <a href="#" class="menu-link px-3" data-kt-export="csv">
                                    Export as csv &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i class="fas fa-file-csv text-info fs-3"></i>
                                </a>
                            </div>
                            <div class="menu-item px-3">
                                <a href="#" class="menu-link px-3" data-kt-export="pdf">
                                    Export as pdf &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i class="fas fa-file-pdf text-danger fs-3"></i>
                                </a>
                            </div>
                        </div>
                        <div id="TablaSourcesCA_buttons" class="d-none"></div>
                    </div>
                </div>
                <div class="card-body">
                    <table id="TablaSourcesCA" class="table border-gray-400 table-hover table-row-bordered gy-4 gs-7">
                        <thead>
                            <tr class="fw-bold fs-6 text-gray-800 text-uppercase bg-gray-300 border-top">
                                <th class="min-w-20px  align-middle border-end border-start text-center">#Id</th>
                                <th class="min-w-150px align-middle border-end">Key</th>
                                <th class="min-w-150px align-middle border-end">Tool</th>
                                <th class="min-w-150px align-middle border-end">Source</th>
                                <th class="min-w-150px align-middle border-end">Department</th>
                                <th class="min-w-150px align-middle border-end">Action category</th>
                                <th class="min-w-150px align-middle border-end">Management</th>
                                <th class="min-w-300px align-middle border-end">Responsible for monitoring</th>
                                <th class="min-w-300px align-middle border-end">Activity reponsible</th>
                                <th class="min-w-150px align-middle border-end">Aperture date</th>
                                <th class="min-w-150px align-middle border-end">Promise date</th>
                                <th class="min-w-500px align-middle border-end">Causes</th>
                                <th class="min-w-500px align-middle border-end">Actions</th>
                                <th class="min-w-150px align-middle border-end">Process</th>
                                <th class="min-w-150px align-middle border-end">Record user</th>
                                <th class="min-w-250px align-middle border-end">Record date</th>
                            </tr>
                        </thead>
                    </table>
                </div>

            </div>

            <div class="card mb-5" id="ReportDelete" style="display:none;">

                <div class="card-header align-items-center py-5 gap-2 gap-md-5">
                    <div class="card-title">
                        <div class="d-flex align-items-center position-relative my-1">
                            <span class="svg-icon svg-icon-1 position-absolute ms-4"><i class="fas fa-search"></i></span>
                            <input type="text" data-kt-filter="searchDelete" class="form-control form-control-solid w-250px ps-13" placeholder="Search Report" />
                        </div>
                        <div id="TablaDelete_export" class="d-none"></div>
                    </div>
                    <div class="card-toolbar flex-row-fluid justify-content-end gap-5">
                        <button type="button" class="btn btn-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">
                            <span class="svg-icon svg-icon-1 position-absolute ms-4"></span>
                            Export Report
                        </button>
                        <div id="TablaDelete_export_menu" class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-200px py-4" data-kt-menu="true">
                            <div class="menu-item px-3">
                                <a href="#" class="menu-link px-3" data-kt-export1="excel">
                                    Export as excel &nbsp;&nbsp; <i class="fas fa-file-excel text-success fs-3"></i>
                                </a>
                            </div>
                            <div class="menu-item px-3">
                                <a href="#" class="menu-link px-3" data-kt-export1="csv">
                                    Export as csv &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i class="fas fa-file-csv text-info fs-3"></i>
                                </a>
                            </div>
                            <div class="menu-item px-3">
                                <a href="#" class="menu-link px-3" data-kt-export1="pdf">
                                    Export as pdf &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i class="fas fa-file-pdf text-danger fs-3"></i>
                                </a>
                            </div>
                        </div>
                        <div id="TablaDelete_buttons" class="d-none"></div>
                    </div>
                </div>
                <div class="card-body">
                    <table id="TablaDelete" class="table border-gray-400 table-hover table-row-bordered gy-4 gs-7">
                        <thead>
                            <tr class="fw-bold fs-6 text-gray-800 text-uppercase bg-gray-300 border-top">
                                <th class="min-w-20px  align-middle border-end border-start text-center">#Id</th>
                                <th class="min-w-150px align-middle border-end">Key</th>
                                <th class="min-w-150px align-middle border-end">Tool</th>
                                <th class="min-w-150px align-middle border-end">Source</th>
                                <th class="min-w-150px align-middle border-end">Department</th>
                                <th class="min-w-150px align-middle border-end">Action category</th>
                                <th class="min-w-150px align-middle border-end">Management</th>
                                <th class="min-w-300px align-middle border-end">Responsible for monitoring</th>
                                <th class="min-w-300px align-middle border-end">Activity reponsible</th>
                                <th class="min-w-150px align-middle border-end">Aperture date</th>
                                <th class="min-w-150px align-middle border-end">Promise date</th>
                                <th class="min-w-500px align-middle border-end">Causes</th>
                                <th class="min-w-500px align-middle border-end">Actions</th>
                                <th class="min-w-150px align-middle border-end">Process</th>
                                <th class="min-w-150px align-middle border-end">Record user</th>
                                <th class="min-w-150px align-middle border-end">Record date</th>
                                <th class="min-w-150px align-middle border-end">Delete Record User</th>
                                <th class="min-w-150px align-middle border-end">Delete Record Date</th>
                                <th class="min-w-150px align-middle border-end text-center">Delete Record Comment</th>
                            </tr>
                        </thead>
                    </table>
                </div>

            </div>

        </div>
    </div>
</div>

@section Scripts {
    @*Block pantalla*@
    <script>
        var button = document.querySelector("#BlockPantalla");
        var target = document.querySelector("#BlockPantalla");

        var BlockPantalla = new KTBlockUI(target, {
            message: '<div class="blockui-message"><span class="spinner-border text-primary"></span> Loading...</div>',
        });
    </script>

    @*Libreria datatable TablaNormal*@
    <script type="text/javascript">
        var KTDatatablesExample = function () {
            var table;
            var datatable;

            var initDatatable = function () {
                const tableRows = table.querySelectorAll('tbody tr');

                tableRows.forEach(row => {
                    const dateRow = row.querySelectorAll('td');
                });

                datatable = $(table).DataTable({
                    "info": true,
                    "order": [],
                    "pageLength": 100,
                     "scrollY": "500px",
                    "scrollCollapse": true,
                    "scrollX": true,
                    "columns": [
                        {className: "border-end border-gray-400 border-start min-w-20px text-center", },
                        {className: "border-end border-gray-400 min-w-150px",},
                        {className: "border-end border-gray-400 min-w-150px",},
                        {className: "border-end border-gray-400 min-w-150px",},
                        {className: "border-end border-gray-400 min-w-150px",},
                        {className: "border-end border-gray-400 min-w-150px",},
                        {className: "border-end border-gray-400 min-w-150px",},
                        {className: "border-end border-gray-400 min-w-300px",},
                        {className: "border-end border-gray-400 min-w-300px",},
                        {className: "border-end border-gray-400 min-w-150px",},
                        {className: "border-end border-gray-400 min-w-150px",},
                        {className: "border-end border-gray-400 min-w-500px",},
                        {className: "border-end border-gray-400 min-w-500px",},
                        {className: "border-end border-gray-400 min-w-150px",},
                        {className: "border-end border-gray-400 min-w-150px",},
                        {className: "border-end border-gray-400 min-w-150px",},
                    ],
                    
                });
            }

            // Hook export buttons
            var exportButtons = () => {
                const documentTitle = 'CorrectiveActionList_Report';
                var buttons = new $.fn.dataTable.Buttons(table, {
                    buttons: [
                        {
                            extend: 'copyHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'excelHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'csvHtml5',
                            title: documentTitle
                        },
                        {
                            extend: 'pdfHtml5',
                            title: documentTitle
                        }
                    ]
                }).container().appendTo($('#TablaSourcesCA_buttons'));

                const exportButtons = document.querySelectorAll('#TablaSourcesCA_export_menu [data-kt-export]');
                exportButtons.forEach(exportButton => {
                    exportButton.addEventListener('click', e => {
                        e.preventDefault();

                        const exportValue = e.target.getAttribute('data-kt-export');
                        const target = document.querySelector('.dt-buttons .buttons-' + exportValue);

                        target.click();
                    });
                });
            }

            var handleSearchDatatable = () => {
                const filterSearch = document.querySelector('[data-kt-filter="search"]');
                filterSearch.addEventListener('keyup', function (e) {
                    datatable.search(e.target.value).draw();
                });
            }

            return {
                init: function () {
                    table = document.querySelector('#TablaSourcesCA');

                    if (!table) {
                        return;
                    }

                    initDatatable();
                    exportButtons();
                    handleSearchDatatable();
                }
            };
        }();

        KTUtil.onDOMContentLoaded(function () {
            KTDatatablesExample.init();
        });
    </script>

    @*Libreria datatable Tabla con Eliminados*@
    <script type="text/javascript">
        var KTDatatablesDelete = function () {
            var tableDelete;
            var datatable;

            var initDatatableDelete = function () {
                const tableRowsDelete = tableDelete.querySelectorAll('tbody tr');

                tableRowsDelete.forEach(row => {
                    const dateRow = row.querySelectorAll('td');
                });

                datatable = $(tableDelete).DataTable({
                    "info": true,
                    "order": [],
                    "pageLength": 100,
                    "scrollY": "500px",
                    "scrollCollapse": true,
                    "scrollX": true,
                    "columns": [
                        { className: "border-end border-gray-400 min-w-20px border-start text-center", },
                        {className: "border-end border-gray-400 min-w-150px", },
                        {className: "border-end border-gray-400 min-w-150px", },
                        {className: "border-end border-gray-400 min-w-150px", },
                        {className: "border-end border-gray-400 min-w-150px", },
                        {className: "border-end border-gray-400 min-w-150px", },
                        {className: "border-end border-gray-400 min-w-150px", },
                        {className: "border-end border-gray-400 min-w-300px", },
                        {className: "border-end border-gray-400 min-w-300px", },
                        {className: "border-end border-gray-400 min-w-150px", },
                        {className: "border-end border-gray-400 min-w-150px", },
                        {className: "border-end border-gray-400 min-w-500px", },
                        {className: "border-end border-gray-400 min-w-500px", },
                        {className: "border-end border-gray-400 min-w-150px",},
                        {className: "border-end border-gray-400 min-w-150px",},
                        {className: "border-end border-gray-400 min-w-150px",},
                        {className: "border-end border-gray-400 min-w-150px",},
                        {className: "border-end border-gray-400 min-w-150px",},
                        { className:"border-end border-gray-400 min-w-250px text-center", },
                    ],
                });
            }

            // Hook export buttons
            var exportButtonsDelete = () => {
                const documentTitleDelete = 'CorrectiveActionsList_Report';
                var buttons = new $.fn.dataTable.Buttons(tableDelete, {
                    buttons: [
                        {
                            extend: 'copyHtml5',
                            title: documentTitleDelete
                        },
                        {
                            extend: 'excelHtml5',
                            title: documentTitleDelete
                        },
                        {
                            extend: 'csvHtml5',
                            title: documentTitleDelete
                        },
                        {
                            extend: 'pdfHtml5',
                            title: documentTitleDelete
                        }
                    ]
                }).container().appendTo($('#TablaDelete_buttons'));

                const exportButtons = document.querySelectorAll('#TablaDelete_export_menu [data-kt-export1]');
                exportButtons.forEach(exportButtonDelete => {
                    exportButtonDelete.addEventListener('click', e => {
                        e.preventDefault();

                        const exportValueDelete = e.target.getAttribute('data-kt-export1');
                        var targetDelete = document.querySelector('div[id="TablaDelete_buttons"]');
                        targetDelete = targetDelete.querySelector('.buttons-' + exportValueDelete);

                        targetDelete.click();
                    });
                });
            }

            var handleSearchDatatableDelete = () => {
                const filterSearch = document.querySelector('[data-kt-filter="searchDelete"]');
                filterSearch.addEventListener('keyup', function (e) {
                    datatable.search(e.target.value).draw();
                });
            }

            return {
                init: function () {
                    tableDelete = document.querySelector('#TablaDelete');

                    if (!tableDelete) {
                        return;
                    }

                    initDatatableDelete();
                    exportButtonsDelete();
                    handleSearchDatatableDelete();
                }
            };
        }();

        KTUtil.onDOMContentLoaded(function () {
            KTDatatablesDelete.init();
        });
    </script>

    @*Get report with filter*@
    <script>
        function SearchReport() {
            BlockPantalla.block();
            var formData = new FormData();

            formData.append("IdSeccion", $('#SeccionId').val());
            formData.append("IdKey", $('#IdKey').val());
            formData.append("Status", $('#Status').val());
            formData.append("IdRangers", $('#IdRangers').val());
            formData.append("IdManagements", $('#IdManagements').val());
            formData.append("IdTools", $('#IdTools').val());
            formData.append("IdSources", $('#IdSources').val());
            formData.append("IdDepartaments", $('#IdDepartaments').val());
            formData.append("DateRanges", $('#DateRanges').val());
            formData.append("IdResponsibles", $('#IdResponsibles').val());
            formData.append("IdClosed", $('#IdClosed').val());
            formData.append("IdCategorys", $('#IdCategorys').val());
            formData.append("IdProcess", $('#IdProcess').val());

            $.ajax({
                url: "@Url.Action("ReportCorrectiveActionsList","CorrectiveActionList")",
                data: formData,
                type: "POST",
                processData: false,
                contentType: false,
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
            }).done(function (result) {
                if (result != null) {
                    if (result == 'Error') {
                        BlockPantalla.release();
                        SystemServerError()
                    }
                    else if (result == 'noSession') {
                        swalExpired()
                    }
                    else if (result == 'Sorry') {
                        swalNoAuthorized()
                    }
                    else if (result == 'NoPage') {
                        swalNoAuthorized()
                    }
                    else {

                        var obj = JSON.parse(result);
                        var status = $('#Status').val();

                        if(status != 3){
                            var t = $('#TablaSourcesCA').DataTable();


                            t.clear().draw();
                            $("#ReportDelete").css("display", "none");
                            for (var i = 0; i < obj.length; i++)
                            {   
                                t.row.add(
                                    [
                                        obj[i].ID_Registro,
                                        obj[i].Clave,
                                        obj[i].Herramienta,
                                        obj[i].Fuente,
                                        obj[i].Departamento,
                                        obj[i].CategoriaAccion,
                                        obj[i].Gerencia,
                                        obj[i].ResponsableSeguimiento,
                                        obj[i].ResponsableActividad,
                                        obj[i].FechaApertura,
                                        obj[i].FechaPromesa,
                                        obj[i].Causas,
                                        obj[i].Acciones,
                                        obj[i].Proceso,
                                        obj[i].FechaRegistro,
                                        obj[i].UsuarioRegistro,
                                    ]).draw(false);
                            }
                            $("#HideReport").css("display", "block");
                        }
                        else
                        {
                            $("#HideReport").css("display", "none");
                            var t = $('#TablaDelete').DataTable();
                            t.clear().draw();

                            for (var i = 0; i < obj.length; i++)
                            { 
                                t.row.add(
                                [
                                    obj[i].ID_Registro,
                                    obj[i].Clave,
                                    obj[i].Herramienta,
                                    obj[i].Fuente,
                                    obj[i].Departamento,
                                    obj[i].CategoriaAccion,
                                    obj[i].Gerencia,
                                    obj[i].ResponsableSeguimiento,
                                    obj[i].ResponsableActividad,
                                    obj[i].FechaApertura,
                                    obj[i].FechaPromesa,
                                    obj[i].Causas,
                                    obj[i].Acciones,
                                    obj[i].Proceso,
                                    obj[i].FechaRegistro,
                                    obj[i].UsuarioRegistro,
                                    obj[i].UsuarioDelete,
                                    obj[i].FechaRegistroDelete,
                                    obj[i].ComentarioDelete,
                                    
                                ]).draw(false);
                            }
                            $("#ReportDelete").css("display", "block");
                        }
                        
                        $("#kt_body").attr("data-kt-aside-minimize", "on");

                        BlockPantalla.release();
                    }
                }

            }).fail(function (error) {
                swalErrorServer()
            });

        }
    </script>

    @*Minimize the Aside Menu*@
    <script>
        $(document).ready(function () {
            $("#kt_body").attr("data-kt-aside-minimize", "on");
        })
    </script>

    @*Data ranges*@
    <script>
        var start = moment().subtract(10, "years");
        var end = moment();

        function cb(start, end) {
            $("#DateRanges").html(start.format("MMMM D, YYYY") + " - " + end.format("MMMM D, YYYY"));
        }

        $("#DateRanges").daterangepicker({
            showDropdowns: true,
            startDate: start,
            endDate: end,
            ranges: {
                "All Dates": [moment().subtract(10, "years"), moment()],
                "Today": [moment(), moment()],
                "Yesterday": [moment().subtract(1, "days"), moment().subtract(1, "days")],
                "Last 7 Days": [moment().subtract(6, "days"), moment()],
                "Last 30 Days": [moment().subtract(29, "days"), moment()],
                "This Month": [moment().startOf("month"), moment().endOf("month")],
                "Last Month": [moment().subtract(1, "month").startOf("month"), moment().subtract(1, "month").endOf("month")]
            }
        }, cb);

        cb(start, end);
    </script>

    @*Select All from Combos*@
    <script>
        function updCombo(val) {
            if (val == 0) {
                $('#' + idGlobal + '> option').prop("selected", "selected");
                $('#' + idGlobal + ' option:first-child').prop("selected", false);
            }
        }
    </script>

    @*Part of select All Multiple  select2*@
    <script>

        var idGlobal = "Status";

        $(document).ready(function () {

            $('select').on("select2:clearing", function (e) {
                idGlobal = $(this).attr("name");
                $("#" + idGlobal).select2({
                    allowClear: true // This is for clear get the clear button if wanted
                });

            });

            $('select').on('select2:open', function (e) {
                //Obtener el name or id del elemento para realizar el proceso seleccionar o deseleccionar opciones.
                idGlobal = $(this).attr("name");

                /// Evento cuando se selecciona una opcion > 0
                $('#' + idGlobal).on('select2:select', function (e) {
                    
                    let select = $(this),
                    ul = select.next('span.select2').find('ul');
                    ul.find('.select2-selection__choice').remove();
                    ul.prepend(function () {
                        let count = select.select2('data').length
                        
                        if (count > 0) {
                            return "<li class='select2-selection__choice'>" + count + " options selected</li>"
                        }
                    })

                });
                /// Evento cuando se deselecciona una opcion > 0
                $('#' + idGlobal).on('select2:unselect', function (e) {
                   
                    let select = $(this),
                    ul = select.next('span.select2').find('ul');
                    ul.find('.select2-selection__choice').remove();
                    ul.prepend(function () {
                    let count = select.select2('data').length
                        
                    if (count > 0) {
                           return "<li class='select2-selection__choice'>" + count + " options selected</li>"
                        }
                    })
                });
                ///

            })

            //Setear todos los combos con todas las opciones cuando inicia la pantalla
            $(".form-select-sm").each(function (index) {
                //Obtener el id de cada elemento por clase
                var idCombos = $(this).attr('id');

                //valida que la clave no este vacia
                if (idCombos != undefined && idCombos != 'Status') {

                    //Se seleccionan todas las opciones
                    $('#' + idCombos + '> option').prop("selected", "selected");
                    //Se deselecciona la opcion 0 que tiene la leyenda todos las opciones
                    $('#' + idCombos + ' option:first-child').prop("selected", false);
                    //Se remueve el textarea con el placeholder
                    $(".select2-search__field").remove();
                   
                    $('#' + idCombos).select2({
                        allowClear: true // This is for clear get the clear button if wanted
                    });
                    let select = $(this),
                        ul = select.next('span.select2').find('ul');
                    ul.find('.select2-selection__choice').remove();
                    
                    ul.prepend(function () {
                        let count = select.select2('data').length
                        if (count > 0) {
                            return "<li class='select2-selection__choice'>" + count + " options selected</li>"
                        }
                    })


                }
            });

        });

    </script>

}